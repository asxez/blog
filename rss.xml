<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>月落星沉</title>
        <subtitle>路漫漫其修远兮  吾将上下而求索</subtitle>
        <icon>https://www.asxe.vip/blog/images/favicon.ico</icon>
        <link>https://www.asxe.vip/blog</link>
        <author>
          <name>ASXE</name>
        </author>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Tue, 04 Jun 2024 22:04:54 +0800</pubDate>
        <lastBuildDate>Tue, 04 Jun 2024 22:04:54 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2024/06/04/matplotlib%E8%AE%B0%E5%BD%95/</guid>
            <title>matplotlib记录</title>
            <link>https://www.asxe.vip/blog/2024/06/04/matplotlib%E8%AE%B0%E5%BD%95/</link>
            <category term="Python" scheme="https://www.asxe.vip/blog/categories/python/" />
            <category term="python" scheme="https://www.asxe.vip/blog/tags/python/" />
            <category term="matplotlib" scheme="https://www.asxe.vip/blog/tags/matplotlib/" />
            <pubDate>Tue, 04 Jun 2024 22:04:54 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;pltgca&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pltgca&#34;&gt;#&lt;/a&gt; plt.gca()&lt;/h2&gt;
&lt;p&gt;plt.gca () 函数，可用于获取当前图形的坐标轴（Axes）对象。可以对此对象进行更改或添加其他元素，例如标题、标签、网格等。&lt;br /&gt;
示例代码：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; matplotlib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pyplot &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; plt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 绘制图形&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;plt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;plot&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 获取当前坐标轴对象并设置其属性&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ax &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; plt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;gca&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ax&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;set_title&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;test gca&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ax&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;set_xlabel&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;x&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ax&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;set_ylabel&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;y&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;plt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;show&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;axescla&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#axescla&#34;&gt;#&lt;/a&gt; Axes.cla()&lt;/h2&gt;
&lt;p&gt;使用 * Axes.cla ()* 函数用于清除当前轴，即删除轴上的所有图形、标注等内容，使轴恢复到初始状态。这样，在绘制新的图形时，不会受到之前图形的干扰。&lt;/p&gt;
&lt;h2 id=&#34;pltrcparams&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pltrcparams&#34;&gt;#&lt;/a&gt; plt.rcParams&lt;/h2&gt;
&lt;p&gt;此属性可以设置图像配置参数，以下是一些常用的 plt.rcParams 属性及其作用和用法：&lt;/p&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;图形和画布&lt;/summary&gt;&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;figure.figsize: 设置图形的宽和高。示例: plt.rcParams [&#39;figure.figsize&#39;] = [10, 5]&lt;/li&gt;
&lt;li&gt;figure.dpi: 设置图形的分辨率。示例: plt.rcParams [&#39;figure.dpi&#39;] = 100&lt;/li&gt;
&lt;li&gt;figure.facecolor: 设置图形的背景颜色。示例: plt.rcParams [&#39;figure.facecolor&#39;] = &#39;w&#39;&lt;/li&gt;
&lt;li&gt;figure.edgecolor: 设置图形边框的颜色。示例: plt.rcParams [&#39;figure.edgecolor&#39;] = &#39;k&#39;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;轴&lt;/summary&gt;&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;axes.linewidth: 设置坐标轴的线宽。示例: plt.rcParams [&#39;axes.linewidth&#39;] = 1.5&lt;/li&gt;
&lt;li&gt;axes.grid: 是否显示网格。示例: plt.rcParams [&#39;axes.grid&#39;] = True&lt;/li&gt;
&lt;li&gt;axes.titlesize: 设置坐标轴标题的字体大小。示例: plt.rcParams [&#39;axes.titlesize&#39;] = &#39;large&#39;&lt;/li&gt;
&lt;li&gt;axes.labelsize: 设置坐标轴标签的字体大小。示例: plt.rcParams [&#39;axes.labelsize&#39;] = &#39;medium&#39;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;网格&lt;/summary&gt;&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;grid.color: 设置网格线的颜色。示例: plt.rcParams [&#39;grid.color&#39;] = &#39;grey&#39;&lt;/li&gt;
&lt;li&gt;grid.linestyle: 设置网格线的样式。示例: plt.rcParams [&#39;grid.linestyle&#39;] = &#39;--&#39;&lt;/li&gt;
&lt;li&gt;grid.linewidth: 设置网格线的宽度。示例: plt.rcParams [&#39;grid.linewidth&#39;] = 0.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;线条&lt;/summary&gt;&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;lines.linewidth: 设置线条的宽度。示例: plt.rcParams [&#39;lines.linewidth&#39;] = 2.0&lt;/li&gt;
&lt;li&gt;lines.color: 设置线条的颜色。示例: plt.rcParams [&#39;lines.color&#39;] = &#39;blue&#39;&lt;/li&gt;
&lt;li&gt;lines.linestyle: 设置线条的样式。示例: plt.rcParams [&#39;lines.linestyle&#39;] = &#39;-&#39;&lt;/li&gt;
&lt;li&gt;lines.marker: 设置线条的标记。示例: plt.rcParams [&#39;lines.marker&#39;] = &#39;o&#39;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;字体&lt;/summary&gt;&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;font.size: 设置字体大小。示例: plt.rcParams [&#39;font.size&#39;] = 12&lt;/li&gt;
&lt;li&gt;font.family: 设置字体系列。示例: plt.rcParams [&#39;font.family&#39;] = &#39;sans-serif&#39;&lt;/li&gt;
&lt;li&gt;font.serif: 设置衬线字体。示例: plt.rcParams [&#39;font.serif&#39;] = [&#39;Times New Roman&#39;]&lt;/li&gt;
&lt;li&gt;font.sans-serif: 设置无衬线字体。示例: plt.rcParams [&#39;font.sans-serif&#39;] = [&#39;Arial&#39;]&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;图例&lt;/summary&gt;&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;legend.loc: 设置图例的位置。示例: plt.rcParams [&#39;legend.loc&#39;] = &#39;best&#39;&lt;/li&gt;
&lt;li&gt;legend.fontsize: 设置图例的字体大小。示例: plt.rcParams [&#39;legend.fontsize&#39;] = &#39;large&#39;&lt;/li&gt;
&lt;li&gt;legend.frameon: 是否绘制图例边框。示例: plt.rcParams [&#39;legend.frameon&#39;] = True&lt;/li&gt;
&lt;li&gt;legend.numpoints: 图例中标记点的数目。示例: plt.rcParams [&#39;legend.numpoints&#39;] = 1&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;刻度&lt;/summary&gt;&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;xtick.labelsize: 设置 x 轴刻度标签的字体大小。示例: plt.rcParams [&#39;xtick.labelsize&#39;] = &#39;medium&#39;&lt;/li&gt;
&lt;li&gt;ytick.labelsize: 设置 y 轴刻度标签的字体大小。示例: plt.rcParams [&#39;ytick.labelsize&#39;] = &#39;medium&#39;&lt;/li&gt;
&lt;li&gt;xtick.direction: 设置 x 轴刻度的方向。示例: plt.rcParams [&#39;xtick.direction&#39;] = &#39;in&#39;&lt;/li&gt;
&lt;li&gt;ytick.direction: 设置 y 轴刻度的方向。示例: plt.rcParams [&#39;ytick.direction&#39;] = &#39;in&#39;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2023/12/28/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8libeasyhttp%EF%BC%9F%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E6%95%99%E4%BC%9A%E4%BD%A0/</guid>
            <title>如何使用libeasyhttp？一篇文章教会你</title>
            <link>https://www.asxe.vip/blog/2023/12/28/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8libeasyhttp%EF%BC%9F%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E6%95%99%E4%BC%9A%E4%BD%A0/</link>
            <category term="C/C++" scheme="https://www.asxe.vip/blog/tags/C-C/" />
            <category term="libeasyhttp" scheme="https://www.asxe.vip/blog/tags/libeasyhttp/" />
            <pubDate>Thu, 28 Dec 2023 19:14:05 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;https://moe-counter.glitch.me/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://counter.likepoems.com/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;获取源文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#获取源文件&#34;&gt;#&lt;/a&gt; 获取源文件&lt;/h2&gt;
&lt;p&gt;点击&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FzeGV6L2xpYmVhc3lodHRw&#34;&gt; libeasyhttp&lt;/span&gt; 下载&lt;/p&gt;
&lt;h2 id=&#34;使用方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用方法&#34;&gt;#&lt;/a&gt; 使用方法&lt;/h2&gt;
&lt;p&gt;请求所返回类型均为 HTTP_RESPONSE 结构。其定义如下 &amp;lt;br&amp;gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;typedef struct HTTP_RESPONSE &amp;#123;
long status; //请求状态码
char *text; //文本
double total_time; //请求耗时
&amp;#125; HTTP_RESPONSE;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;发送 get 请求，原型为:&amp;lt;br&amp;gt;HTTP_RESPONSE get (const char *url, HEADERS *headers);&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;#include &amp;quot;libeasyhttp/easy-http.h&amp;quot;

int main(void) &amp;#123;
    HEADERS *headerList = NULL;
    
    headerList = addHeader(headerList, &amp;quot;Content-Type&amp;quot;, &amp;quot;text/html; charset=utf-8&amp;quot;);
    headerList = addHeader(headerList, &amp;quot;User-Agent&amp;quot;, &amp;quot;ASXE&amp;quot;);
    
    HTTP_RESPONSE httpResponse = get(&amp;quot;https://www.asxe.vip/&amp;quot;, headerList);
    printf(&amp;quot;%s&amp;quot;, httpResponse.text);
    printf(&amp;quot;%ld&amp;quot;, httpResponse.status);
    printf(&amp;quot;%f&amp;quot;, httpResponse.total_time);
    return 0;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;发送 post 请求，原型为 &amp;lt;br&amp;gt;HTTP_RESPONSE post (const char *url, HEADERS *headers, POST_DATA *postData);&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;#include &amp;quot;libeasyhttp/easy-http.h&amp;quot;

int main(void) &amp;#123;
    HEADERS *headerList = NULL;
    POST_DATA *postData = NULL;
    
    headerList = addHeader(headerList, &amp;quot;User-Agent&amp;quot;, &amp;quot;ASXE&amp;quot;);
    
    postData = addData(postData, &amp;quot;q&amp;quot;, &amp;quot;测试&amp;quot;);
    
    HTTP_RESPONSE httpResponse = post(&amp;quot;http://127.0.0.1:1314/search/&amp;quot;, headerList, postData);
    printf(&amp;quot;%s&amp;quot;, httpResponse.text);
    printf(&amp;quot;%ld&amp;quot;, httpResponse.status);
    printf(&amp;quot;%f&amp;quot;, httpResponse.total_time);
    return 0;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2023/11/16/%E4%BB%BF%E5%8D%8E%E4%B8%BA%E5%95%86%E5%9F%8E%E4%B8%BB%E9%A1%B5/</guid>
            <title>仿华为商城主页</title>
            <link>https://www.asxe.vip/blog/2023/11/16/%E4%BB%BF%E5%8D%8E%E4%B8%BA%E5%95%86%E5%9F%8E%E4%B8%BB%E9%A1%B5/</link>
            <category term="Web" scheme="https://www.asxe.vip/blog/categories/web/" />
            <category term="web" scheme="https://www.asxe.vip/blog/tags/web/" />
            <pubDate>Thu, 16 Nov 2023 18:13:42 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;https://moe-counter.glitch.me/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://counter.likepoems.com/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;项目地址&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#项目地址&#34;&gt;#&lt;/a&gt; 项目地址&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FzeGV6L0h1YXdlaS1Ib21lcGFnZS1JbWl0YXRpb24=&#34;&gt;Huawei-Homepage-Imitation&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FzeGV6L0h1YXdlaS1Ib21lcGFnZS1JbWl0YXRpb24=&#34;&gt;https://github.com/asxez/Huawei-Homepage-Imitation&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;为什么写这个项目&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#为什么写这个项目&#34;&gt;#&lt;/a&gt; 为什么写这个项目？&lt;/h1&gt;
&lt;p&gt;这个项目是我的&lt;ins&gt; web 前端开发&lt;/ins&gt;课程大作业&lt;/p&gt;
&lt;h1 id=&#34;声明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#声明&#34;&gt;#&lt;/a&gt; 声明&lt;/h1&gt;
&lt;p&gt;本项目仅用于交流与学习，勿作其他任何形式用途&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2023/10/29/css-Flex%E5%AE%B9%E5%99%A8%E8%AF%AD%E6%B3%95%E8%AE%B0/</guid>
            <title>css Flex容器语法记</title>
            <link>https://www.asxe.vip/blog/2023/10/29/css-Flex%E5%AE%B9%E5%99%A8%E8%AF%AD%E6%B3%95%E8%AE%B0/</link>
            <category term="Web" scheme="https://www.asxe.vip/blog/categories/web/" />
            <category term="web" scheme="https://www.asxe.vip/blog/tags/web/" />
            <category term="css" scheme="https://www.asxe.vip/blog/tags/css/" />
            <category term="flex" scheme="https://www.asxe.vip/blog/tags/flex/" />
            <pubDate>Sun, 29 Oct 2023 16:35:56 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;https://moe-counter.glitch.me/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://counter.likepoems.com/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#正文&#34;&gt;#&lt;/a&gt; 正文&lt;/h2&gt;
&lt;p&gt;&lt;ins&gt;注：设为 Flex 布局以后，子元素的 float、clear 和 vertical-align 属性将失效。&lt;/ins&gt;&lt;/p&gt;
&lt;h3 id=&#34;以下6个属性需设置在容器上&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#以下6个属性需设置在容器上&#34;&gt;#&lt;/a&gt; 以下 6 个属性需设置在容器上：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;flex-direction&lt;/li&gt;
&lt;li&gt;flex-wrap&lt;/li&gt;
&lt;li&gt;flex-flow&lt;/li&gt;
&lt;li&gt;justify-content&lt;/li&gt;
&lt;li&gt;align-items&lt;/li&gt;
&lt;li&gt;align-content&lt;/li&gt;
&lt;/ul&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;flex-direction属性&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;flex-direction 属性决定主轴的方向（即项目的排列方向）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;column-reverse：主轴为垂直方向，起点在下沿。&lt;/li&gt;
&lt;li&gt;column：主轴为垂直方向，起点在上沿。&lt;/li&gt;
&lt;li&gt;row（默认值）：主轴为水平方向，起点在左端。&lt;/li&gt;
&lt;li&gt;row-reverse：主轴为水平方向，起点在右端。&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/flex_normal_write/1.png&#34; alt=&#34;1.png&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;flex-wrap属性&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;默认情况下项目都排在一条线（轴线）上。flex-wrap 属性定义若不是一条轴线，如何实现换行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nowrap（默认）：不换行。&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/flex_normal_write/2.png&#34; alt=&#34;2.png&#34; /&gt;&lt;/li&gt;
&lt;li&gt;wrap：换行，第一行在上方。&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/flex_normal_write/3.png&#34; alt=&#34;3.png&#34; /&gt;&lt;/li&gt;
&lt;li&gt;wrap-reverse：换行，第一行在下方。&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/flex_normal_write/4.png&#34; alt=&#34;4.png&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;p&gt;&lt;ins&gt;flex-flow 属性是 flex-direction 属性和 flex-wrap 属性的简写形式，默认值为 row nowrap。&lt;/ins&gt;&lt;/p&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;justify-content属性&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;justify-content 属性定义了项目在主轴上的对齐方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-start（默认值）：左对齐&lt;/li&gt;
&lt;li&gt;flex-end：右对齐&lt;/li&gt;
&lt;li&gt;center： 居中&lt;/li&gt;
&lt;li&gt;space-between：两端对齐，项目之间的间隔都相等。&lt;/li&gt;
&lt;li&gt;space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/flex_normal_write/5.png&#34; alt=&#34;5.png&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;align-items属性&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;align-items 属性定义项目在交叉轴上如何对齐。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-start：交叉轴的起点对齐。&lt;/li&gt;
&lt;li&gt;flex-end：交叉轴的终点对齐。&lt;/li&gt;
&lt;li&gt;center：交叉轴的中点对齐。&lt;/li&gt;
&lt;li&gt;baseline: 项目的第一行文字的基线对齐。&lt;/li&gt;
&lt;li&gt;stretch（默认值）：如果项目未设置高度或设为 auto，将占满整个容器的高度。&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/flex_normal_write/6.png&#34; alt=&#34;6.png&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;align-content属性&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;align-content 属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-start：与交叉轴的起点对齐。&lt;/li&gt;
&lt;li&gt;flex-end：与交叉轴的终点对齐。&lt;/li&gt;
&lt;li&gt;center：与交叉轴的中点对齐。&lt;/li&gt;
&lt;li&gt;space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。&lt;/li&gt;
&lt;li&gt;space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。&lt;/li&gt;
&lt;li&gt;stretch（默认值）：轴线占满整个交叉轴。&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/flex_normal_write/7.png&#34; alt=&#34;7.png&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;h3 id=&#34;以下6个属性设置在项目上&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#以下6个属性设置在项目上&#34;&gt;#&lt;/a&gt; 以下 6 个属性设置在项目上。&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;order&lt;/li&gt;
&lt;li&gt;flex-grow&lt;/li&gt;
&lt;li&gt;flex-shrink&lt;/li&gt;
&lt;li&gt;flex-basis&lt;/li&gt;
&lt;li&gt;flex&lt;/li&gt;
&lt;li&gt;align-self&lt;/li&gt;
&lt;/ul&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;order属性&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;order 属性定义项目的排列顺序。数值越小，排列越靠前，默认为 0。&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/flex_normal_write/8.png&#34; alt=&#34;8.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;flex-grow属性&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;flex-grow 属性定义项目的放大比例，默认为 0，即如果存在剩余空间，也不放大。&lt;br /&gt;
如果所有项目的 flex-grow 属性都为 1，则它们将等分剩余空间（如果有的话）。如果一个项目的 flex-grow 属性为 2，其他项目都为 1，则前者占据的剩余空间将比其他项多一倍。&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/flex_normal_write/9.png&#34; alt=&#34;9.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;flex-shrink属性&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;flex-shrink 属性定义了项目的缩小比例，默认为 1，即如果空间不足，该项目将缩小。&lt;br /&gt;
如果所有项目的 flex-shrink 属性都为 1，当空间不足时，都将等比例缩小。如果一个项目的 flex-shrink 属性为 0，其他项目都为 1，则空间不足时，前者不缩小。&lt;ins&gt;(负值对该属性无效)&lt;/ins&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/flex_normal_write/10.png&#34; alt=&#34;10.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;flex-basis属性&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;flex-basis 属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为 auto，即项目的本来大小。&lt;br /&gt;
它可以设为跟 width 或 height 属性一样的值（比如 350px），则项目将占据固定空间。&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;flex属性&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;flex 属性是 flex-grow, flex-shrink 和 flex-basis 的简写，默认值为 0 1 auto。后两个属性可选。&lt;br /&gt;
该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。&lt;br /&gt;
建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;align-self属性&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;align-self 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性。默认值为 auto，表示继承父元素的 align-items 属性，如果没有父元素，则等同于 stretch。&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/flex_normal_write/11.png&#34; alt=&#34;11.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;p&gt;&lt;ins&gt;本文引自&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ydWFueWlmZW5nLmNvbS9ibG9nLzIwMTUvMDcvZmxleC1ncmFtbWFyLmh0bWw=&#34;&gt;阮一峰 - Flex 布局教程：语法篇&lt;/span&gt;&lt;/ins&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2023/09/30/%E5%A4%A9%E7%9C%BC%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E-TY-Spider/</guid>
            <title>天眼搜索引擎--TY-Spider</title>
            <link>https://www.asxe.vip/blog/2023/09/30/%E5%A4%A9%E7%9C%BC%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E-TY-Spider/</link>
            <category term="Python" scheme="https://www.asxe.vip/blog/categories/python/" />
            <category term="python" scheme="https://www.asxe.vip/blog/tags/python/" />
            <pubDate>Sat, 30 Sep 2023 14:53:58 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;https://moe-counter.glitch.me/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://counter.likepoems.com/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;本文最后一次更新时间：2023-11-25&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;地址&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#地址&#34;&gt;#&lt;/a&gt; 地址&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FzeGV6L1RZLVNwaWRlcg==&#34;&gt;天眼搜索引擎&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;天眼搜索引擎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#天眼搜索引擎&#34;&gt;#&lt;/a&gt; 天眼搜索引擎&lt;/h1&gt;
&lt;p&gt;百度？谷歌？Bing？或者是其他的？我不知道你有没有思考过一个问题，那就是这些搜 索引擎有没有欺骗你？或许你的心中应该会有答案吧。至少我认为，它们都或多或少的 隐藏了什么。&lt;/p&gt;
&lt;p&gt;最后，我发明了它，&lt;strong&gt;TY Spider&lt;/strong&gt;，相比这个名字，我更喜欢叫它天眼搜索引擎。&lt;/p&gt;
&lt;p&gt;天眼搜索引擎是一款轻量级的搜索引擎，你可以很轻松方便的部署在服务器上。&lt;/p&gt;
&lt;h1 id=&#34;环境配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境配置&#34;&gt;#&lt;/a&gt; 环境配置&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Python3.10+&lt;/li&gt;
&lt;li&gt;mongodb 数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;部署&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#部署&#34;&gt;#&lt;/a&gt; 部署&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;安装依赖&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-r&lt;/span&gt; requirements.txt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;运行启动脚本&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;./run.cmd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;访问&lt;strong&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMToxMzE0&#34;&gt; http://127.0.0.1:1314&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你也可以试着发送一个&lt;strong&gt; post&lt;/strong&gt; 请求，像这样&lt;strong&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMToxMzE0L3NlYXJjaD9xPXRlc3Q=&#34;&gt; http://127.0.0.1:1314/search?q=test&lt;/span&gt;&lt;/strong&gt;，一定要是&lt;strong&gt; post&lt;/strong&gt; 请求噢！！！&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2023/07/10/%E7%99%BE%E5%BA%A6%E7%BF%BB%E8%AF%91sign%E5%8F%82%E6%95%B0%E9%80%BB%E8%BE%91/</guid>
            <title>百度翻译sign参数逻辑</title>
            <link>https://www.asxe.vip/blog/2023/07/10/%E7%99%BE%E5%BA%A6%E7%BF%BB%E8%AF%91sign%E5%8F%82%E6%95%B0%E9%80%BB%E8%BE%91/</link>
            <category term="Python" scheme="https://www.asxe.vip/blog/categories/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/blog/categories/python/spider/" />
            <category term="python" scheme="https://www.asxe.vip/blog/tags/python/" />
            <category term="js逆向" scheme="https://www.asxe.vip/blog/tags/js%E9%80%86%E5%90%91/" />
            <pubDate>Mon, 10 Jul 2023 15:46:33 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;https://moe-counter.glitch.me/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://counter.likepoems.com/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#说明&#34;&gt;#&lt;/a&gt; 说明&lt;/h2&gt;
&lt;p&gt;本文仅讲解百度翻译 sign 参数生成逻辑。&lt;/p&gt;
&lt;h2 id=&#34;看过来&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#看过来&#34;&gt;#&lt;/a&gt; 看过来！&lt;/h2&gt;
&lt;h3 id=&#34;js分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#js分析&#34;&gt;#&lt;/a&gt; js 分析&lt;/h3&gt;
&lt;p&gt;先找到 sign 生成的地方然后打上断点&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/baidu_sign/1.png&#34; alt=&#34;1.png&#34; /&gt;&lt;br /&gt;
 这个 e 参数就是你输入的文本！不信自己看&lt;br /&gt;
进入 b 方法，如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/baidu_sign/2.png&#34; alt=&#34;2.png&#34; /&gt;&lt;br /&gt;
&lt;span class=&#34;label info&#34;&gt; 注：这个 js 其实是个 webpack，但是我们只需要扣一点逻辑就行了&lt;/span&gt;&lt;br /&gt;
把这个方法拿下来，然后命名为 sign 方法，如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/baidu_sign/3.png&#34; alt=&#34;3.png&#34; /&gt;&lt;br /&gt;
 然后调用这个方法随便传个参数进去，看看会怎样&lt;br /&gt;
然后你就看到他报错了！&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/baidu_sign/4.png&#34; alt=&#34;4.png&#34; /&gt;&lt;br /&gt;
 报 r 未定义，那么我们就找 r，发现就在上方有个 r 的声明，如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/baidu_sign/5.png&#34; alt=&#34;5.png&#34; /&gt;&lt;br /&gt;
&lt;span class=&#34;label info&#34;&gt; 注：这里是将 r 声明为 null，但是当你将 r 声明为 null 的时候你会发现是会报错的。&lt;/span&gt;&lt;br /&gt;
我们找到这段代码中用到了 r 的地方，打上断点，查看 r&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/baidu_sign/6.png&#34; alt=&#34;6.png&#34; /&gt;&lt;br /&gt;
 多次刷新调试，确定 r 不会变动，直接写死即可&lt;br /&gt;
最后补齐方法，完事！&lt;/p&gt;
&lt;h3 id=&#34;完整代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#完整代码&#34;&gt;#&lt;/a&gt; 完整代码&lt;/h3&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;320305.131321201&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;t&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;a&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; r&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charCodeAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;87&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;r&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;+&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; t &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&gt;&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; t &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; r&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;+&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; t &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4294967295&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; t &lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt; r&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; t&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;t&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; e &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; e &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; n&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        r&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; r&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sign&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; o&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;[\uD800-\uDBFF][\uDC00-\uDFFF]&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        a &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;substr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;substr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;substr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;[\uD800-\uDBFF][\uDC00-\uDFFF]&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; u &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; s&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; l &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; u&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; c&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; s&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; l&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;l&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isArray&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;o &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; s&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;undefined&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; Symbol &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Symbol&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;iterator&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;@@iterator&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; Array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;o&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;t&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;string&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Object&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;constructor &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;constructor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;o&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;TypeError&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            c &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; u &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; l&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; l&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        p &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; l&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; l&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; l&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; d &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;103&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;116&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;107&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; h &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;r&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;.&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; f &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;h&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; m &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;h&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; g &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; v &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; v &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; v&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; _ &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charCodeAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;v&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        _ &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; g&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;y&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; _ &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;_ &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2048&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; g&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;y&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; _ &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;192&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;55296&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;64512&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; _&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; v &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;56320&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;64512&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charCodeAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;v &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;_ &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;65536&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1023&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; _&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1023&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charCodeAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;v&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            g&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;y&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; _ &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;18&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;240&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            g&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;y&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; _ &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;63&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; g&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;y&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; _ &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;224&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            g&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;y&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; _ &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;63&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            g&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;y&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;63&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; _ &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; w &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;43&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;97&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;94&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;43&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;54&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; k &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;43&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;51&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;94&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;43&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;98&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;43&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;102&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; x &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; x &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; g&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; x&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; g&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; w&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; k&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b &lt;span class=&#34;token operator&#34;&gt;^=&lt;/span&gt; m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2147483648&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2147483647&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b &lt;span class=&#34;token operator&#34;&gt;%=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1e6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;.&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b &lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//console.log(sign(&#39;test&#39;))&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2023/06/12/%E7%83%AF%E7%89%9B%E6%95%B0%E6%8D%AEjs%E9%80%86%E5%90%91/</guid>
            <title>烯牛数据js逆向</title>
            <link>https://www.asxe.vip/blog/2023/06/12/%E7%83%AF%E7%89%9B%E6%95%B0%E6%8D%AEjs%E9%80%86%E5%90%91/</link>
            <category term="Python" scheme="https://www.asxe.vip/blog/categories/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/blog/categories/python/spider/" />
            <category term="python" scheme="https://www.asxe.vip/blog/tags/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/blog/tags/%E7%88%AC%E8%99%AB/" />
            <category term="js逆向" scheme="https://www.asxe.vip/blog/tags/js%E9%80%86%E5%90%91/" />
            <pubDate>Mon, 12 Jun 2023 15:40:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;https://moe-counter.glitch.me/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://counter.likepoems.com/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#准备&#34;&gt;#&lt;/a&gt; 准备&lt;/h2&gt;
&lt;p&gt;闲来无事，发篇小帖！&lt;br /&gt;
废话不多说，今天的主角：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cueGluaXVkYXRhLmNvbS9pbmR1c3RyeS9uZXdlc3Q/ZnJvbT1kYXRh&#34;&gt;烯牛数据&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;正片&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#正片&#34;&gt;#&lt;/a&gt; 正片！&lt;/h2&gt;
&lt;h3 id=&#34;js加密部分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#js加密部分&#34;&gt;#&lt;/a&gt; js 加密部分&lt;/h3&gt;
&lt;p&gt;找到需要逆向的接口，即：&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/xi_niu/1.png&#34; alt=&#34;1.png&#34; /&gt;&lt;br /&gt;
 看看其负载和返回的数据：&lt;br /&gt;
负载&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/xi_niu/2.png&#34; alt=&#34;2.png&#34; /&gt;&lt;br /&gt;
 数据&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/xi_niu/3.png&#34; alt=&#34;3.png&#34; /&gt;&lt;br /&gt;
 可以看到，负载有两个加密的参数，返回的数据也是加密的，先搞负载！&lt;br /&gt;
跟到栈堆，搜索 sig，可以找到两个，都打上断点，刷新网页，然后便断在了一个点，如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/xi_niu/4.png&#34; alt=&#34;4.png&#34; /&gt;&lt;br /&gt;
 观察这断代码，可以大致分析出，sig 就是 p，p 调用了一个&lt;span class=&#34;label info&#34;&gt; c.e&lt;/span&gt; 的函数和 f，f 调用了&lt;span class=&#34;label info&#34;&gt; c.c&lt;/span&gt; 和&lt;span class=&#34;label info&#34;&gt; c.d&lt;/span&gt; 以及 l，那么就先拿下来：&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/xi_niu/5.png&#34; alt=&#34;5.png&#34; /&gt;&lt;br /&gt;
 现在分析其中的函数是什么，先搞&lt;span class=&#34;label info&#34;&gt; c.c&lt;/span&gt;，跳转过去发现是一个叫&lt;span class=&#34;label info&#34;&gt; e1&lt;/span&gt; 的函数&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/xi_niu/6.png&#34; alt=&#34;6.png&#34; /&gt;&lt;br /&gt;
 直接拿下来&lt;br /&gt;
&lt;span class=&#34;label info&#34;&gt; c.d&lt;/span&gt; 也是一样的跳转到一个叫&lt;span class=&#34;label info&#34;&gt; e2&lt;/span&gt; 的函数，直接拿下来，然后稍微改写下代码&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/xi_niu/7.png&#34; alt=&#34;7.png&#34; /&gt;&lt;br /&gt;
 然后搞&lt;span class=&#34;label info&#34;&gt; c.e&lt;/span&gt;，跳转到一个叫&lt;span class=&#34;label info&#34;&gt; sig&lt;/span&gt; 的函数，如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/xi_niu/8.png&#34; alt=&#34;8.png&#34; /&gt;&lt;br /&gt;
 发现是一个 MD5 加密（&lt;span class=&#34;label warning&#34;&gt;这个就是原版的 MD5，不要问我怎么知道，因为我试过了，所以这里就不分析是不是魔改 MD5 了，其实你跳转过去也会发现这个就是原版的&lt;/span&gt;）&lt;br /&gt;
因此直接写个 MD5 实现&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/xi_niu/9.png&#34; alt=&#34;9.png&#34; /&gt;&lt;br /&gt;
 最后补补环境，缺啥补啥，然后你看看运行生成的结果和浏览器的结果，肯定是一样的！&lt;br /&gt;
完整代码如下&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; crypto &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;crypto&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; _keyStr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; _p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;W5D80NFZHAYB8EUI2T649RT2MNRMVE2O&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;md5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; crypto&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createHash&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;md5&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;digest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hex&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sig&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;md5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; _p&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toUpperCase&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;e1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; r&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; o&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; u &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; s &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        o &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charCodeAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charCodeAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;15&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charCodeAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;63&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; r&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token function&#34;&gt;isNaN&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;64&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;isNaN&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;r&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            u &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; u &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; _keyStr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;o&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; _keyStr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; _keyStr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; _keyStr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; u&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;_u_e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;\r\n&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; n&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charCodeAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        r &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; t &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;r&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;127&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2048&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;r &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;192&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            t &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;63&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;r &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;224&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            t &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;r &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;63&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            t &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;63&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; t&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;e2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;_u_e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; n&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; _p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charCodeAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; _p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        t &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charCodeAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt; r&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; t&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string-property property&#34;&gt;&#34;payload&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token string-property property&#34;&gt;&#34;sort&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;//1 为最近热门，2 为最近更新&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token string-property property&#34;&gt;&#34;start&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 每次 + 20&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token string-property property&#34;&gt;&#34;limit&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; s &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; l &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; f &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;l&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;payload&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sig&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;f&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;f&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;p&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;js解密部分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#js解密部分&#34;&gt;#&lt;/a&gt; js 解密部分&lt;/h3&gt;
&lt;p&gt;现在搞返回的数据解密，先观察观察返回的数据，一个 code，一个 d，一个 v。如果是你，你要怎么搜索？该不会搜索 d 吧？那还不得亖啊，全篇都是 d，因此我们直接搜 code，因为这也是它返回的数据。&lt;br /&gt;
然后我们就发现刚刚加密的下面就有个 code，而且下面还跟着一个&lt;span class=&#34;label warning&#34;&gt; JSON.parse&lt;/span&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/xi_niu/10.png&#34; alt=&#34;10.png&#34; /&gt;&lt;br /&gt;
 如果是你，你会不会看这个地方？&lt;br /&gt;
我们直接打上断点，刷新，然后看看这个 v 是个啥&lt;br /&gt;
断住后在控制台输入 v&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/xi_niu/11.png&#34; alt=&#34;11.png&#34; /&gt;&lt;br /&gt;
 这个 v 不就是我们要的明文数据吗？&lt;br /&gt;
直接开扣&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/xi_niu/12.png&#34; alt=&#34;12.png&#34; /&gt;&lt;br /&gt;
&lt;span class=&#34;label danger&#34;&gt; 注：l 就是返回数据里的 d，不信你自己看哈哈哈&lt;/span&gt;&lt;br /&gt;
然后扣出&lt;span class=&#34;label info&#34;&gt; c.a&lt;/span&gt; 和&lt;span class=&#34;label info&#34;&gt; c.b&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;label info&#34;&gt;c.a&lt;/span&gt; 就是&lt;span class=&#34;label info&#34;&gt; d1&lt;/span&gt;，&lt;span class=&#34;label info&#34;&gt;c.b&lt;/span&gt; 就是&lt;span class=&#34;label info&#34;&gt; d2&lt;/span&gt;&lt;br /&gt;
 然后缺啥补啥，运行看看结果，没问题的！&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/xi_niu/13.png&#34; alt=&#34;13.png&#34; /&gt;&lt;br /&gt;
 完整代码&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; l &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;这里放加密的结果&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; _keyStr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; _p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;W5D80NFZHAYB8EUI2T649RT2MNRMVE2O&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;d1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; r&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; o&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; u &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;[^A-Za-z0-9\+\/\=]&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; u &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; _keyStr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indexOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;u&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;o &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; _keyStr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indexOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;u&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;15&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; o&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; _keyStr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indexOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;u&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; _keyStr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indexOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;u&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            c &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;64&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;64&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;r&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; c&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;d2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; n&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; _p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charCodeAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; _p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        t &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charCodeAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;^&lt;/span&gt; r&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;_u_d&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;_u_d&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; o &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;r &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charCodeAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;r&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            n&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;191&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; r &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;224&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;o &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charCodeAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            t &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; r&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;63&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; o&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            n &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;o &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charCodeAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charCodeAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            t &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; String&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fromCharCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;15&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; r&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;63&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; o&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;63&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            n &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; t&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; d &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;l&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; v &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;v&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2023/05/28/%E7%8C%BF%E4%BA%BA%E5%AD%A6%E7%AC%AC%E4%BA%8C%E5%B1%8A%E7%AC%AC%E4%B8%80%E9%A2%98-%E5%88%9D%E8%AF%86/</guid>
            <title>猿人学第二届第一题-初识</title>
            <link>https://www.asxe.vip/blog/2023/05/28/%E7%8C%BF%E4%BA%BA%E5%AD%A6%E7%AC%AC%E4%BA%8C%E5%B1%8A%E7%AC%AC%E4%B8%80%E9%A2%98-%E5%88%9D%E8%AF%86/</link>
            <category term="Python" scheme="https://www.asxe.vip/blog/categories/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/blog/categories/python/spider/" />
            <category term="python" scheme="https://www.asxe.vip/blog/tags/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/blog/tags/%E7%88%AC%E8%99%AB/" />
            <category term="js逆向" scheme="https://www.asxe.vip/blog/tags/js%E9%80%86%E5%90%91/" />
            <pubDate>Sun, 28 May 2023 11:29:01 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;https://moe-counter.glitch.me/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://counter.likepoems.com/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;开篇&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开篇&#34;&gt;#&lt;/a&gt; 开篇&lt;/h2&gt;
&lt;p&gt;猿人学第二届已于 2023 年 5 月 19 开始，目前赛事已结束，来看看题？&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#正文&#34;&gt;#&lt;/a&gt; 正文&lt;/h2&gt;
&lt;h3 id=&#34;加密分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#加密分析&#34;&gt;#&lt;/a&gt; 加密分析&lt;/h3&gt;
&lt;p&gt;F12 请求一下页面，找到 api，直接观察其负载，如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/1.png&#34; alt=&#34;1.png&#34; /&gt;&lt;br /&gt;
 可以发现有三个参数，分别是 page（当前页数），token，now（或许是时间戳？）&lt;br /&gt;
废话不多说，直接看它的发起程序，如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/2.png&#34; alt=&#34;2.png&#34; /&gt;&lt;br /&gt;
 第一个和第二个是 send 和 ajax，这里已经属于发送了，直接点第三个&lt;br /&gt;
可以清晰的看到这三个参数：&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/3.png&#34; alt=&#34;3.png&#34; /&gt;&lt;br /&gt;
 可以知道，page 是当前页数，now 是当前时间戳，token 则是进行了一个什么 MD5 加密&lt;br /&gt;
但是！这个 MD5 不是普通的 MD5，它是经过了魔改的，因此打上断点，转到其生成的地方看看&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/4.png&#34; alt=&#34;4.png&#34; /&gt;&lt;br /&gt;
 我们把这里面的所有代码复制拿出来&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/5.png&#34; alt=&#34;5.png&#34; /&gt;&lt;br /&gt;
 简单分析发现这是个类似&lt;span class=&#34;label info&#34;&gt; webpack&lt;/span&gt; 的一段代码，是自执行的&lt;br /&gt;
那么我们就执行一下这段代码，看看会发生什么&lt;br /&gt;
结果报错了，如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/6.png&#34; alt=&#34;6.png&#34; /&gt;&lt;br /&gt;
 我们转到报错位置&lt;br /&gt;
发现这是个 i 函数发起的报错，i 函数的上面则是一堆检测 h 值的东西，如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/7.png&#34; alt=&#34;7.png&#34; /&gt;&lt;br /&gt;
ide 显示这个 i 函数只有一个调用用法，那么去浏览器打上断点看看这个 i 返回的到底是个什么&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/8.png&#34; alt=&#34;8.png&#34; /&gt;&lt;br /&gt;
 进入控制台，输入 i () 看看 i 返回的什么&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/9.png&#34; alt=&#34;9.png&#34; /&gt;&lt;br /&gt;
 可以看到，i () 就是第一个 return 返回的值，那么我们便可以直接将 i 函数进行改写，并将上面的一个检测 h 值的删掉，如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/10.png&#34; alt=&#34;10.png&#34; /&gt;&lt;br /&gt;
 然后继续执行，又报错&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/11.jpg&#34; alt=&#34;11.jpg&#34; /&gt;&lt;br /&gt;
 跳转查看，发现原来是 Ajax 啊，那直接把这段给删了，因为这里是属于发送了，我们用不着。&lt;br /&gt;
然后在上面打印一下这个 j，可以看到 j 已经生成了，但是，现在生成的并不是准确的（你自己拿个浏览器的时间戳固定后看看你的和浏览器生成的是否一样就知道了，这里不演示，只讲如何去掉环境检测）&lt;/p&gt;
&lt;h3 id=&#34;去除检测&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#去除检测&#34;&gt;#&lt;/a&gt; 去除检测&lt;/h3&gt;
&lt;p&gt;一般常见的浏览器环境检测是：&lt;span class=&#34;label info&#34;&gt;window,document,global,navigator,location 以及 node 环境检测&lt;/span&gt;&lt;br /&gt;
这里我们便一个一个找&lt;br /&gt;
先 window，这里有一处，还有个三元表达式，这种如何修改？直接浏览器打上断点，然后看第一个值是 true 还是 false，将第一个值修改后，pycharm 便会提示简化，简化即可。（这里&lt;span class=&#34;label info&#34;&gt; window 对象肯定是存在的&lt;/span&gt;，直接改成 true 然后简化就行了）&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/12.png&#34; alt=&#34;12.png&#34; /&gt;&lt;br /&gt;
 修改后&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/13.png&#34; alt=&#34;13.png&#34; /&gt;&lt;br /&gt;
 然后 document，这里有一处&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/14.png&#34; alt=&#34;14.png&#34; /&gt;&lt;br /&gt;
 直接浏览器打上断点&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/15.png&#34; alt=&#34;15.png&#34; /&gt;&lt;br /&gt;
 简化修改后&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/16.png&#34; alt=&#34;16.png&#34; /&gt;&lt;br /&gt;
 其他的几个值也用这种方法操作，唯有一处我要提示一下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/17.png&#34; alt=&#34;17.png&#34; /&gt;&lt;br /&gt;
 这个地方简化后得到的是 self，而在浏览器中选中这一段显示的确实 window，原因是 node 环境中是不存在 self 的，浏览器环境中 self 就是 window 对象，因此直接改成 window 就行了，如下（记得在全局中添加 window = {}）&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/yuanrenxue_two_one/18.png&#34; alt=&#34;18.png&#34; /&gt;&lt;br /&gt;
 环境补完后，就可以生成正确的值了，下面是完整 js 代码&lt;/p&gt;
&lt;h3 id=&#34;完整js代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#完整js代码&#34;&gt;#&lt;/a&gt; 完整 js 代码&lt;/h3&gt;
&lt;p&gt;代码过长，无法高亮显示，有问题请在评论区提出。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;var asxe;
window = &amp;#123;&amp;#125;;

(function () &amp;#123;
    function a(b, c, d) &amp;#123;
        function f(j, k) &amp;#123;
            if (!c[j]) &amp;#123;
                if (!b[j]) &amp;#123;
                    var l = &#39;function&#39; == typeof require &amp;amp;&amp;amp; require;
                    if (!k &amp;amp;&amp;amp; l)
                        return l(j, !0x0);
                    if (g)
                        return g(j, !0x0);
                    var m = new Error(&#39;Cannot\x20find\x20module\x20\x27&#39; + j + &#39;\x27&#39;);
                    throw m[&#39;code&#39;] = &#39;MODULE_NOT_FOUND&#39;,
                        m;
                &amp;#125;
                var q = c[j] = &amp;#123;
                    &#39;exports&#39;: &amp;#123;&amp;#125;
                &amp;#125;;
                b[j][0x0][&#39;call&#39;](q[&#39;exports&#39;], function (s) &amp;#123;
                    var v = b[j][0x1][s];
                    return f(v || s);
                &amp;#125;, q, q[&#39;exports&#39;], a, b, c, d);
            &amp;#125;
            return c[j][&#39;exports&#39;];
        &amp;#125;

        for (var g = &#39;function&#39; == typeof require &amp;amp;&amp;amp; require, h = 0x0; h &amp;lt; d[&#39;length&#39;]; h++)
            f(d[h]);
        return f;
    &amp;#125;

    return a;
&amp;#125;()(&amp;#123;
    0x1: [function (a, b, c) &amp;#123;
    &amp;#125;
        , &amp;#123;&amp;#125;],
    0x2: [function (a, b, c) &amp;#123;
        call = function (d) &amp;#123;
            asxe = a; //这里设置全局变量为a函数，方便调用，因为要传入一个page!
        &amp;#125;
            ,
            call(0x1);
    &amp;#125;
        , &amp;#123;
            &#39;crypto-js&#39;: 0xc
        &amp;#125;],
    0x3: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./enc-base64&#39;), a(&#39;./md5&#39;), a(&#39;./evpkdf&#39;), a(&#39;./cipher-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./enc-base64&#39;, &#39;./md5&#39;, &#39;./evpkdf&#39;, &#39;./cipher-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e = d
                    , f = e[&#39;lib&#39;]
                    , g = f[&#39;BlockCipher&#39;]
                    , h = e[&#39;algo&#39;]
                    , i = []
                    , j = []
                    , k = []
                    , l = []
                    , m = []
                    , n = []
                    , o = []
                    , p = []
                    , q = []
                    , r = [];
                (function () &amp;#123;
                    var u = [];
                    for (var v = 0x0; v &amp;lt; 0x100; v++) &amp;#123;
                        v &amp;lt; 0x80 ? u[v] = v &amp;lt;&amp;lt; 0x1 : u[v] = v &amp;lt;&amp;lt; 0x1 ^ 0x11b;
                    &amp;#125;
                    var w = 0x0
                        , y = 0x0;
                    for (var v = 0x0; v &amp;lt; 0x100; v++) &amp;#123;
                        var z = y ^ y &amp;lt;&amp;lt; 0x1 ^ y &amp;lt;&amp;lt; 0x2 ^ y &amp;lt;&amp;lt; 0x3 ^ y &amp;lt;&amp;lt; 0x4;
                        z = z &amp;gt;&amp;gt;&amp;gt; 0x8 ^ z &amp;amp; 0xff ^ 0x63,
                            i[w] = z,
                            j[z] = w;
                        var A = u[w]
                            , B = u[A]
                            , D = u[B]
                            , E = u[z] * 0x101 ^ z * 0x1010100;
                        k[w] = E &amp;lt;&amp;lt; 0x18 | E &amp;gt;&amp;gt;&amp;gt; 0x8,
                            l[w] = E &amp;lt;&amp;lt; 0x10 | E &amp;gt;&amp;gt;&amp;gt; 0x10,
                            m[w] = E &amp;lt;&amp;lt; 0x8 | E &amp;gt;&amp;gt;&amp;gt; 0x18,
                            n[w] = E;
                        var E = D * 0x1010101 ^ B * 0x10001 ^ A * 0x101 ^ w * 0x1010100;
                        o[z] = E &amp;lt;&amp;lt; 0x18 | E &amp;gt;&amp;gt;&amp;gt; 0x8,
                            p[z] = E &amp;lt;&amp;lt; 0x10 | E &amp;gt;&amp;gt;&amp;gt; 0x10,
                            q[z] = E &amp;lt;&amp;lt; 0x8 | E &amp;gt;&amp;gt;&amp;gt; 0x18,
                            r[z] = E,
                            !w ? w = y = 0x1 : (w = A ^ u[u[u[D ^ A]]],
                                y ^= u[u[y]]);
                    &amp;#125;
                &amp;#125;());
                var s = [0x0, 0x1, 0x2, 0x4, 0x80, 0x1b, 0x36, 0x8, 0x10, 0x20, 0x40]
                    , t = h[&#39;AES&#39;] = g[&#39;extend&#39;](&amp;#123;
                    &#39;_doReset&#39;: function () &amp;#123;
                        var u;
                        if (this[&#39;_nRounds&#39;] &amp;amp;&amp;amp; this[&#39;_keyPriorReset&#39;] === this[&#39;_key&#39;])
                            return;
                        var v = this[&#39;_keyPriorReset&#39;] = this[&#39;_key&#39;]
                            , w = v[&#39;words&#39;]
                            , x = v[&#39;sigBytes&#39;] / 0x4
                            , y = this[&#39;_nRounds&#39;] = x + 0x6
                            , z = (y + 0x1) * 0x4
                            , A = this[&#39;_keySchedule&#39;] = [];
                        for (var B = 0x0; B &amp;lt; z; B++) &amp;#123;
                            if (B &amp;lt; x)
                                A[B] = w[B];
                            else &amp;#123;
                                u = A[B - 0x1];
                                if (!(B % x))
                                    u = u &amp;lt;&amp;lt; 0x8 | u &amp;gt;&amp;gt;&amp;gt; 0x18,
                                        u = i[u &amp;gt;&amp;gt;&amp;gt; 0x18] &amp;lt;&amp;lt; 0x18 | i[u &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x10 | i[u &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x8 | i[u &amp;amp; 0xff],
                                        u ^= s[B / x | 0x0] &amp;lt;&amp;lt; 0x18;
                                else
                                    x &amp;gt; 0x6 &amp;amp;&amp;amp; B % x == 0x4 &amp;amp;&amp;amp; (u = i[u &amp;gt;&amp;gt;&amp;gt; 0x1a] &amp;lt;&amp;lt; 0x18 | i[u &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x10 | i[u &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x8 | i[u &amp;amp; 0xff]);
                                A[B] = A[B - x] ^ u;
                            &amp;#125;
                        &amp;#125;
                        var D = this[&#39;_invKeySchedule&#39;] = [];
                        for (var E = 0x0; E &amp;lt; z; E++) &amp;#123;
                            var B = z - E;
                            if (E % 0x4)
                                var u = A[B];
                            else
                                var u = A[B - 0x4];
                            E &amp;lt; 0x4 || B &amp;lt;= 0x4 ? D[E] = u : D[E] = o[i[u &amp;gt;&amp;gt;&amp;gt; 0x18]] ^ p[i[u &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff]] ^ q[i[u &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff]] ^ r[i[u &amp;amp; 0xff]];
                        &amp;#125;
                    &amp;#125;,
                    &#39;encryptBlock&#39;: function (u, v) &amp;#123;
                        this[&#39;_doCryptBlock&#39;](u, v, this[&#39;_keySchedule&#39;], k, l, m, n, i);
                    &amp;#125;,
                    &#39;decryptBlock&#39;: function (u, v) &amp;#123;
                        var w = u[v + 0x1];
                        u[v + 0x1] = u[v + 0x3],
                            u[v + 0x3] = w,
                            this[&#39;_doCryptBlock&#39;](u, v, this[&#39;_invKeySchedule&#39;], o, p, q, r, j);
                        var w = u[v + 0x1];
                        u[v + 0x1] = u[v + 0x3],
                            u[v + 0x3] = w;
                    &amp;#125;,
                    &#39;_doCryptBlock&#39;: function (u, v, w, x, y, z, A, B) &amp;#123;
                        var D = this[&#39;_nRounds&#39;]
                            , E = u[v] ^ w[0x0]
                            , F = u[v + 0x1] ^ w[0x1]
                            , G = u[v + 0x2] ^ w[0x2]
                            , H = u[v + 0x3] ^ w[0x3]
                            , I = 0x4;
                        for (var J = 0x1; J &amp;lt; D; J++) &amp;#123;
                            var K = x[E &amp;gt;&amp;gt;&amp;gt; 0x18] ^ y[F &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] ^ z[G &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] ^ A[H &amp;amp; 0xff] ^ w[I++]
                                , L = x[F &amp;gt;&amp;gt;&amp;gt; 0x18] ^ y[G &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] ^ z[H &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] ^ A[E &amp;amp; 0xff] ^ w[I++]
                                , N = x[G &amp;gt;&amp;gt;&amp;gt; 0x18] ^ y[H &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] ^ z[E &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] ^ A[F &amp;amp; 0xff] ^ w[I++]
                                , O = x[H &amp;gt;&amp;gt;&amp;gt; 0x18] ^ y[E &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] ^ z[F &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] ^ A[G &amp;amp; 0xff] ^ w[I++];
                            E = K,
                                F = L,
                                G = N,
                                H = O;
                        &amp;#125;
                        var K = (B[E &amp;gt;&amp;gt;&amp;gt; 0x18] &amp;lt;&amp;lt; 0x18 | B[F &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x10 | B[G &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x8 | B[H &amp;amp; 0xff]) ^ w[I++]
                            ,
                            L = (B[F &amp;gt;&amp;gt;&amp;gt; 0x18] &amp;lt;&amp;lt; 0x18 | B[G &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x10 | B[H &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x8 | B[E &amp;amp; 0xff]) ^ w[I++]
                            ,
                            N = (B[G &amp;gt;&amp;gt;&amp;gt; 0x18] &amp;lt;&amp;lt; 0x18 | B[H &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x10 | B[E &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x8 | B[F &amp;amp; 0xff]) ^ w[I++]
                            ,
                            O = (B[H &amp;gt;&amp;gt;&amp;gt; 0x18] &amp;lt;&amp;lt; 0x18 | B[E &amp;gt;&amp;gt;&amp;gt; 0x10 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x10 | B[F &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff] &amp;lt;&amp;lt; 0x8 | B[G &amp;amp; 0xff]) ^ w[I++];
                        u[v] = K,
                            u[v + 0x1] = L,
                            u[v + 0x2] = N,
                            u[v + 0x3] = O;
                    &amp;#125;,
                    &#39;keySize&#39;: 0x100 / 0x20
                &amp;#125;);
                e[&#39;AES&#39;] = g[&#39;_createHelper&#39;](t);
            &amp;#125;()),
                d[&#39;AES&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5,
            &#39;./enc-base64&#39;: 0x6,
            &#39;./evpkdf&#39;: 0x9,
            &#39;./md5&#39;: 0xe
        &amp;#125;],
    0x4: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./evpkdf&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./evpkdf&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            d[&#39;lib&#39;][&#39;Cipher&#39;] || function (e) &amp;#123;
                var f = d
                    , g = f[&#39;lib&#39;]
                    , h = g[&#39;Base&#39;]
                    , i = g[&#39;WordArray&#39;]
                    , j = g[&#39;BufferedBlockAlgorithm&#39;]
                    , k = f[&#39;enc&#39;]
                    , l = k[&#39;Utf8&#39;]
                    , m = k[&#39;Base64&#39;]
                    , n = f[&#39;algo&#39;]
                    , o = n[&#39;EvpKDF&#39;]
                    , p = g[&#39;Cipher&#39;] = j[&#39;extend&#39;](&amp;#123;
                    &#39;cfg&#39;: h[&#39;extend&#39;](),
                    &#39;createEncryptor&#39;: function (F, G) &amp;#123;
                        return this[&#39;create&#39;](this[&#39;_ENC_XFORM_MODE&#39;], F, G);
                    &amp;#125;,
                    &#39;createDecryptor&#39;: function (F, G) &amp;#123;
                        return this[&#39;create&#39;](this[&#39;_DEC_XFORM_MODE&#39;], F, G);
                    &amp;#125;,
                    &#39;init&#39;: function (F, G, H) &amp;#123;
                        this[&#39;cfg&#39;] = this[&#39;cfg&#39;][&#39;extend&#39;](H),
                            this[&#39;_xformMode&#39;] = F,
                            this[&#39;_key&#39;] = G,
                            this[&#39;reset&#39;]();
                    &amp;#125;,
                    &#39;reset&#39;: function () &amp;#123;
                        j[&#39;reset&#39;][&#39;call&#39;](this),
                            this[&#39;_doReset&#39;]();
                    &amp;#125;,
                    &#39;process&#39;: function (F) &amp;#123;
                        return this[&#39;_append&#39;](F),
                            this[&#39;_process&#39;]();
                    &amp;#125;,
                    &#39;finalize&#39;: function (F) &amp;#123;
                        F &amp;amp;&amp;amp; this[&#39;_append&#39;](F);
                        var G = this[&#39;_doFinalize&#39;]();
                        return G;
                    &amp;#125;,
                    &#39;keySize&#39;: 0x80 / 0x20,
                    &#39;ivSize&#39;: 0x80 / 0x20,
                    &#39;_ENC_XFORM_MODE&#39;: 0x1,
                    &#39;_DEC_XFORM_MODE&#39;: 0x2,
                    &#39;_createHelper&#39;: (function () &amp;#123;
                        function F(G) &amp;#123;
                            return typeof G == &#39;string&#39; ? E : A;
                        &amp;#125;

                        return function (G) &amp;#123;
                            return &amp;#123;
                                &#39;encrypt&#39;: function (H, I, J) &amp;#123;
                                    return F(I)[&#39;encrypt&#39;](G, H, I, J);
                                &amp;#125;,
                                &#39;decrypt&#39;: function (H, I, J) &amp;#123;
                                    return F(I)[&#39;decrypt&#39;](G, H, I, J);
                                &amp;#125;
                            &amp;#125;;
                        &amp;#125;
                            ;
                    &amp;#125;())
                &amp;#125;)
                    , q = g[&#39;StreamCipher&#39;] = p[&#39;extend&#39;](&amp;#123;
                    &#39;_doFinalize&#39;: function () &amp;#123;
                        var F = this[&#39;_process&#39;](!!&#39;flush&#39;);
                        return F;
                    &amp;#125;,
                    &#39;blockSize&#39;: 0x1
                &amp;#125;)
                    , r = f[&#39;mode&#39;] = &amp;#123;&amp;#125;
                    , s = g[&#39;BlockCipherMode&#39;] = h[&#39;extend&#39;](&amp;#123;
                    &#39;createEncryptor&#39;: function (F, G) &amp;#123;
                        return this[&#39;Encryptor&#39;][&#39;create&#39;](F, G);
                    &amp;#125;,
                    &#39;createDecryptor&#39;: function (F, G) &amp;#123;
                        return this[&#39;Decryptor&#39;][&#39;create&#39;](F, G);
                    &amp;#125;,
                    &#39;init&#39;: function (F, G) &amp;#123;
                        this[&#39;_cipher&#39;] = F,
                            this[&#39;_iv&#39;] = G;
                    &amp;#125;
                &amp;#125;)
                    , t = r[&#39;CBC&#39;] = (function () &amp;#123;
                    var F = s[&#39;extend&#39;]();
                    F[&#39;Encryptor&#39;] = F[&#39;extend&#39;](&amp;#123;
                        &#39;processBlock&#39;: function (H, I) &amp;#123;
                            var J = this[&#39;_cipher&#39;]
                                , K = J[&#39;blockSize&#39;];
                            G[&#39;call&#39;](this, H, I, K),
                                J[&#39;encryptBlock&#39;](H, I),
                                this[&#39;_prevBlock&#39;] = H[&#39;slice&#39;](I, I + K);
                        &amp;#125;
                    &amp;#125;),
                        F[&#39;Decryptor&#39;] = F[&#39;extend&#39;](&amp;#123;
                            &#39;processBlock&#39;: function (H, I) &amp;#123;
                                var J = this[&#39;_cipher&#39;]
                                    , K = J[&#39;blockSize&#39;]
                                    , L = H[&#39;slice&#39;](I, I + K);
                                J[&#39;decryptBlock&#39;](H, I),
                                    G[&#39;call&#39;](this, H, I, K),
                                    this[&#39;_prevBlock&#39;] = L;
                            &amp;#125;
                        &amp;#125;);

                    function G(H, I, J) &amp;#123;
                        var K, L = this[&#39;_iv&#39;];
                        L ? (K = L,
                            this[&#39;_iv&#39;] = e) : K = this[&#39;_prevBlock&#39;];
                        for (var M = 0x0; M &amp;lt; J; M++) &amp;#123;
                            H[I + M] ^= K[M];
                        &amp;#125;
                    &amp;#125;

                    return F;
                &amp;#125;())
                    , u = f[&#39;pad&#39;] = &amp;#123;&amp;#125;
                    , v = u[&#39;Pkcs7&#39;] = &amp;#123;
                    &#39;pad&#39;: function (F, G) &amp;#123;
                        var H = G * 0x4
                            , I = H - F[&#39;sigBytes&#39;] % H
                            , J = I &amp;lt;&amp;lt; 0x18 | I &amp;lt;&amp;lt; 0x10 | I &amp;lt;&amp;lt; 0x8 | I
                            , K = [];
                        for (var L = 0x0; L &amp;lt; I; L += 0x4) &amp;#123;
                            K[&#39;push&#39;](J);
                        &amp;#125;
                        var M = i[&#39;create&#39;](K, I);
                        F[&#39;concat&#39;](M);
                    &amp;#125;,
                    &#39;unpad&#39;: function (F) &amp;#123;
                        var G = F[&#39;words&#39;][F[&#39;sigBytes&#39;] - 0x1 &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;amp; 0xff;
                        F[&#39;sigBytes&#39;] -= G;
                    &amp;#125;
                &amp;#125;
                    , w = g[&#39;BlockCipher&#39;] = p[&#39;extend&#39;](&amp;#123;
                    &#39;cfg&#39;: p[&#39;cfg&#39;][&#39;extend&#39;](&amp;#123;
                        &#39;mode&#39;: t,
                        &#39;padding&#39;: v
                    &amp;#125;),
                    &#39;reset&#39;: function () &amp;#123;
                        var F;
                        p[&#39;reset&#39;][&#39;call&#39;](this);
                        var G = this[&#39;cfg&#39;]
                            , H = G[&#39;iv&#39;]
                            , I = G[&#39;mode&#39;];
                        this[&#39;_xformMode&#39;] == this[&#39;_ENC_XFORM_MODE&#39;] ? F = I[&#39;createEncryptor&#39;] : (F = I[&#39;createDecryptor&#39;],
                            this[&#39;_minBufferSize&#39;] = 0x1),
                            this[&#39;_mode&#39;] &amp;amp;&amp;amp; this[&#39;_mode&#39;][&#39;__creator&#39;] == F ? this[&#39;_mode&#39;][&#39;init&#39;](this, H &amp;amp;&amp;amp; H[&#39;words&#39;]) : (this[&#39;_mode&#39;] = F[&#39;call&#39;](I, this, H &amp;amp;&amp;amp; H[&#39;words&#39;]),
                                this[&#39;_mode&#39;][&#39;__creator&#39;] = F);
                    &amp;#125;,
                    &#39;_doProcessBlock&#39;: function (F, G) &amp;#123;
                        this[&#39;_mode&#39;][&#39;processBlock&#39;](F, G);
                    &amp;#125;,
                    &#39;_doFinalize&#39;: function () &amp;#123;
                        var F, G = this[&#39;cfg&#39;][&#39;padding&#39;];
                        return this[&#39;_xformMode&#39;] == this[&#39;_ENC_XFORM_MODE&#39;] ? (G[&#39;pad&#39;](this[&#39;_data&#39;], this[&#39;blockSize&#39;]),
                            F = this[&#39;_process&#39;](!!&#39;flush&#39;)) : (F = this[&#39;_process&#39;](!!&#39;flush&#39;),
                            G[&#39;unpad&#39;](F)),
                            F;
                    &amp;#125;,
                    &#39;blockSize&#39;: 0x80 / 0x20
                &amp;#125;)
                    , x = g[&#39;CipherParams&#39;] = h[&#39;extend&#39;](&amp;#123;
                    &#39;init&#39;: function (F) &amp;#123;
                        this[&#39;mixIn&#39;](F);
                    &amp;#125;,
                    &#39;toString&#39;: function (F) &amp;#123;
                        return (F || this[&#39;formatter&#39;])[&#39;stringify&#39;](this);
                    &amp;#125;
                &amp;#125;)
                    , y = f[&#39;format&#39;] = &amp;#123;&amp;#125;
                    , z = y[&#39;OpenSSL&#39;] = &amp;#123;
                    &#39;stringify&#39;: function (F) &amp;#123;
                        var G, H = F[&#39;ciphertext&#39;], I = F[&#39;salt&#39;];
                        return I ? G = i[&#39;create&#39;]([0x53616c74, 0x65645f5f])[&#39;concat&#39;](I)[&#39;concat&#39;](H) : G = H,
                            G[&#39;toString&#39;](m);
                    &amp;#125;,
                    &#39;parse&#39;: function (F) &amp;#123;
                        var G, H = m[&#39;parse&#39;](F), I = H[&#39;words&#39;];
                        return I[0x0] == 0x53616c74 &amp;amp;&amp;amp; I[0x1] == 0x65645f5f &amp;amp;&amp;amp; (G = i[&#39;create&#39;](I[&#39;slice&#39;](0x2, 0x4)),
                            I[&#39;splice&#39;](0x0, 0x4),
                            H[&#39;sigBytes&#39;] -= 0x10),
                            x[&#39;create&#39;](&amp;#123;
                                &#39;ciphertext&#39;: H,
                                &#39;salt&#39;: G
                            &amp;#125;);
                    &amp;#125;
                &amp;#125;
                    , A = g[&#39;SerializableCipher&#39;] = h[&#39;extend&#39;](&amp;#123;
                    &#39;cfg&#39;: h[&#39;extend&#39;](&amp;#123;
                        &#39;format&#39;: z
                    &amp;#125;),
                    &#39;encrypt&#39;: function (F, G, H, I) &amp;#123;
                        I = this[&#39;cfg&#39;][&#39;extend&#39;](I);
                        var J = F[&#39;createEncryptor&#39;](H, I)
                            , K = J[&#39;finalize&#39;](G)
                            , L = J[&#39;cfg&#39;];
                        return x[&#39;create&#39;](&amp;#123;
                            &#39;ciphertext&#39;: K,
                            &#39;key&#39;: H,
                            &#39;iv&#39;: L[&#39;iv&#39;],
                            &#39;algorithm&#39;: F,
                            &#39;mode&#39;: L[&#39;mode&#39;],
                            &#39;padding&#39;: L[&#39;padding&#39;],
                            &#39;blockSize&#39;: F[&#39;blockSize&#39;],
                            &#39;formatter&#39;: I[&#39;format&#39;]
                        &amp;#125;);
                    &amp;#125;,
                    &#39;decrypt&#39;: function (F, G, H, I) &amp;#123;
                        I = this[&#39;cfg&#39;][&#39;extend&#39;](I),
                            G = this[&#39;_parse&#39;](G, I[&#39;format&#39;]);
                        var J = F[&#39;createDecryptor&#39;](H, I)[&#39;finalize&#39;](G[&#39;ciphertext&#39;]);
                        return J;
                    &amp;#125;,
                    &#39;_parse&#39;: function (F, G) &amp;#123;
                        return typeof F == &#39;string&#39; ? G[&#39;parse&#39;](F, this) : F;
                    &amp;#125;
                &amp;#125;)
                    , B = f[&#39;kdf&#39;] = &amp;#123;&amp;#125;
                    , D = B[&#39;OpenSSL&#39;] = &amp;#123;
                    &#39;execute&#39;: function (F, G, H, I) &amp;#123;
                        !I &amp;amp;&amp;amp; (I = i[&#39;random&#39;](0x40 / 0x8));
                        var J = o[&#39;create&#39;](&amp;#123;
                            &#39;keySize&#39;: G + H
                        &amp;#125;)[&#39;compute&#39;](F, I)
                            , K = i[&#39;create&#39;](J[&#39;words&#39;][&#39;slice&#39;](G), H * 0x4);
                        return J[&#39;sigBytes&#39;] = G * 0x4,
                            x[&#39;create&#39;](&amp;#123;
                                &#39;key&#39;: J,
                                &#39;iv&#39;: K,
                                &#39;salt&#39;: I
                            &amp;#125;);
                    &amp;#125;
                &amp;#125;
                    , E = g[&#39;PasswordBasedCipher&#39;] = A[&#39;extend&#39;](&amp;#123;
                    &#39;cfg&#39;: A[&#39;cfg&#39;][&#39;extend&#39;](&amp;#123;
                        &#39;kdf&#39;: D
                    &amp;#125;),
                    &#39;encrypt&#39;: function (F, G, H, I) &amp;#123;
                        I = this[&#39;cfg&#39;][&#39;extend&#39;](I);
                        var J = I[&#39;kdf&#39;][&#39;execute&#39;](H, F[&#39;keySize&#39;], F[&#39;ivSize&#39;]);
                        I[&#39;iv&#39;] = J[&#39;iv&#39;];
                        var K = A[&#39;encrypt&#39;][&#39;call&#39;](this, F, G, J[&#39;key&#39;], I);
                        return K[&#39;mixIn&#39;](J),
                            K;
                    &amp;#125;,
                    &#39;decrypt&#39;: function (F, G, H, I) &amp;#123;
                        I = this[&#39;cfg&#39;][&#39;extend&#39;](I),
                            G = this[&#39;_parse&#39;](G, I[&#39;format&#39;]);
                        var J = I[&#39;kdf&#39;][&#39;execute&#39;](H, F[&#39;keySize&#39;], F[&#39;ivSize&#39;], G[&#39;salt&#39;]);
                        I[&#39;iv&#39;] = J[&#39;iv&#39;];
                        var K = A[&#39;decrypt&#39;][&#39;call&#39;](this, F, G, J[&#39;key&#39;], I);
                        return K;
                    &amp;#125;
                &amp;#125;);
            &amp;#125;();
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5,
            &#39;./evpkdf&#39;: 0x9
        &amp;#125;],
    0x5: [function (a, b, c) &amp;#123;
        (function (d) &amp;#123;
            (function () &amp;#123;
                ;(function (e, f) &amp;#123;
                    if (typeof c === &#39;object&#39;)
                        b[&#39;exports&#39;] = c = f();
                    else
                        typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([], f) : e[&#39;CryptoJS&#39;] = f();
                &amp;#125;(this, function () &amp;#123;
                    var e = e || function (f, g) &amp;#123;
                        var i = function () &amp;#123;
                            return 3145111887
                        &amp;#125;
                            , j = Object[&#39;create&#39;] || (function () &amp;#123;
                            function w() &amp;#123;
                            &amp;#125;

                            return function (x) &amp;#123;
                                var y;
                                return w[&#39;prototype&#39;] = x,
                                    y = new w(),
                                    w[&#39;prototype&#39;] = null,
                                    y;
                            &amp;#125;
                                ;
                        &amp;#125;())
                            , k = &amp;#123;&amp;#125;
                            , l = k[&#39;lib&#39;] = &amp;#123;&amp;#125;
                            , m = l[&#39;Base&#39;] = (function () &amp;#123;
                            return &amp;#123;
                                &#39;extend&#39;: function (w) &amp;#123;
                                    var x = j(this);
                                    return w &amp;amp;&amp;amp; x[&#39;mixIn&#39;](w),
                                    (!x[&#39;hasOwnProperty&#39;](&#39;init&#39;) || this[&#39;init&#39;] === x[&#39;init&#39;]) &amp;amp;&amp;amp; (x[&#39;init&#39;] = function () &amp;#123;
                                            x[&#39;$super&#39;][&#39;init&#39;][&#39;apply&#39;](this, arguments);
                                        &amp;#125;
                                    ),
                                        x[&#39;init&#39;][&#39;prototype&#39;] = x,
                                        x[&#39;$super&#39;] = this,
                                        x;
                                &amp;#125;,
                                &#39;create&#39;: function () &amp;#123;
                                    var w = this[&#39;extend&#39;]();
                                    return w[&#39;init&#39;][&#39;apply&#39;](w, arguments),
                                        w;
                                &amp;#125;,
                                &#39;init&#39;: function () &amp;#123;
                                &amp;#125;,
                                &#39;mixIn&#39;: function (w) &amp;#123;
                                    for (var x in w) &amp;#123;
                                        w[&#39;hasOwnProperty&#39;](x) &amp;amp;&amp;amp; (this[x] = w[x]);
                                    &amp;#125;
                                    w[&#39;hasOwnProperty&#39;](&#39;toString&#39;) &amp;amp;&amp;amp; (this[&#39;toString&#39;] = w[&#39;toString&#39;]);
                                &amp;#125;,
                                &#39;clone&#39;: function () &amp;#123;
                                    return this[&#39;init&#39;][&#39;prototype&#39;][&#39;extend&#39;](this);
                                &amp;#125;
                            &amp;#125;;
                        &amp;#125;())
                            , n = l[&#39;WordArray&#39;] = m[&#39;extend&#39;](&amp;#123;
                            &#39;init&#39;: function (w, x) &amp;#123;
                                w = this[&#39;words&#39;] = w || [],
                                    x != g ? this[&#39;sigBytes&#39;] = x : this[&#39;sigBytes&#39;] = w[&#39;length&#39;] * 0x4;
                            &amp;#125;,
                            &#39;toString&#39;: function (w) &amp;#123;
                                return (w || p)[&#39;stringify&#39;](this);
                            &amp;#125;,
                            &#39;concat&#39;: function (w) &amp;#123;
                                var x = this[&#39;words&#39;]
                                    , y = w[&#39;words&#39;]
                                    , z = this[&#39;sigBytes&#39;]
                                    , A = w[&#39;sigBytes&#39;];
                                this[&#39;clamp&#39;]();
                                if (z % 0x4)
                                    for (var B = 0x0; B &amp;lt; A; B++) &amp;#123;
                                        var D = y[B &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - B % 0x4 * 0x8 &amp;amp; 0xff;
                                        x[z + B &amp;gt;&amp;gt;&amp;gt; 0x2] |= D &amp;lt;&amp;lt; 0x18 - (z + B) % 0x4 * 0x8;
                                    &amp;#125;
                                else
                                    for (var E = 0x0; E &amp;lt; A; E += 0x4) &amp;#123;
                                        x[z + E &amp;gt;&amp;gt;&amp;gt; 0x2] = y[E &amp;gt;&amp;gt;&amp;gt; 0x2];
                                    &amp;#125;
                                return this[&#39;sigBytes&#39;] += A,
                                    this;
                            &amp;#125;,
                            &#39;clamp&#39;: function () &amp;#123;
                                var w = this[&#39;words&#39;]
                                    , x = this[&#39;sigBytes&#39;];
                                w[x &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;amp;= 0xffffffff &amp;lt;&amp;lt; 0x20 - x % 0x4 * 0x8,
                                    w[&#39;length&#39;] = f[&#39;ceil&#39;](x / 0x4);
                            &amp;#125;,
                            &#39;clone&#39;: function () &amp;#123;
                                var w = m[&#39;clone&#39;][&#39;call&#39;](this);
                                return w[&#39;words&#39;] = this[&#39;words&#39;][&#39;slice&#39;](0x0),
                                    w;
                            &amp;#125;,
                            &#39;random&#39;: function (w) &amp;#123;
                                var x = [];
                                for (var y = 0x0; y &amp;lt; w; y += 0x4) &amp;#123;
                                    x[&#39;push&#39;](i());
                                &amp;#125;
                                return new n[&#39;init&#39;](x, w);
                            &amp;#125;
                        &amp;#125;)
                            , o = k[&#39;enc&#39;] = &amp;#123;&amp;#125;
                            , p = o[&#39;Hex&#39;] = &amp;#123;
                            &#39;stringify&#39;: function (w) &amp;#123;
                                var x = w[&#39;words&#39;]
                                    , y = w[&#39;sigBytes&#39;]
                                    , z = [];
                                for (var A = 0x0; A &amp;lt; y; A++) &amp;#123;
                                    var B = x[A &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - A % 0x4 * 0x8 &amp;amp; 0xff;
                                    z[&#39;push&#39;]((B &amp;gt;&amp;gt;&amp;gt; 0x4)[&#39;toString&#39;](0x10)),
                                        z[&#39;push&#39;]((B &amp;amp; 0xf)[&#39;toString&#39;](0x10));
                                &amp;#125;
                                return z[&#39;join&#39;](&#39;&#39;);
                            &amp;#125;,
                            &#39;parse&#39;: function (w) &amp;#123;
                                var x = w[&#39;length&#39;]
                                    , y = [];
                                for (var z = 0x0; z &amp;lt; x; z += 0x2) &amp;#123;
                                    y[z &amp;gt;&amp;gt;&amp;gt; 0x3] |= parseInt(w[&#39;substr&#39;](z, 0x2), 0x10) &amp;lt;&amp;lt; 0x18 - z % 0x8 * 0x4;
                                &amp;#125;
                                return new n[&#39;init&#39;](y, x / 0x2);
                            &amp;#125;
                        &amp;#125;
                            , q = o[&#39;Latin1&#39;] = &amp;#123;
                            &#39;stringify&#39;: function (w) &amp;#123;
                                var x = w[&#39;words&#39;]
                                    , y = w[&#39;sigBytes&#39;]
                                    , z = [];
                                for (var A = 0x0; A &amp;lt; y; A++) &amp;#123;
                                    var B = x[A &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - A % 0x4 * 0x8 &amp;amp; 0xff;
                                    z[&#39;push&#39;](String[&#39;fromCharCode&#39;](B));
                                &amp;#125;
                                return z[&#39;join&#39;](&#39;&#39;);
                            &amp;#125;,
                            &#39;parse&#39;: function (w) &amp;#123;
                                var x = w[&#39;length&#39;]
                                    , y = [];
                                for (var z = 0x0; z &amp;lt; x; z++) &amp;#123;
                                    y[z &amp;gt;&amp;gt;&amp;gt; 0x2] |= (w[&#39;charCodeAt&#39;](z) &amp;amp; 0xff) &amp;lt;&amp;lt; 0x18 - z % 0x4 * 0x8;
                                &amp;#125;
                                return new n[&#39;init&#39;](y, x);
                            &amp;#125;
                        &amp;#125;
                            , r = o[&#39;Utf8&#39;] = &amp;#123;
                            &#39;stringify&#39;: function (w) &amp;#123;
                                try &amp;#123;
                                    return decodeURIComponent(escape(q[&#39;stringify&#39;](w)));
                                &amp;#125; catch (x) &amp;#123;
                                    throw new Error(&#39;Malformed\x20UTF-8\x20data&#39;);
                                &amp;#125;
                            &amp;#125;,
                            &#39;parse&#39;: function (w) &amp;#123;
                                return q[&#39;parse&#39;](unescape(encodeURIComponent(w)));
                            &amp;#125;
                        &amp;#125;
                            , s = l[&#39;BufferedBlockAlgorithm&#39;] = m[&#39;extend&#39;](&amp;#123;
                            &#39;reset&#39;: function () &amp;#123;
                                this[&#39;_data&#39;] = new n[&#39;init&#39;](),
                                    this[&#39;_nDataBytes&#39;] = 0x0;
                            &amp;#125;,
                            &#39;_append&#39;: function (w) &amp;#123;
                                typeof w == &#39;string&#39; &amp;amp;&amp;amp; (w = r[&#39;parse&#39;](w)),
                                    this[&#39;_data&#39;][&#39;concat&#39;](w),
                                    this[&#39;_nDataBytes&#39;] += w[&#39;sigBytes&#39;];
                            &amp;#125;,
                            &#39;_process&#39;: function (w) &amp;#123;
                                var x, y = this[&#39;_data&#39;], z = y[&#39;words&#39;], A = y[&#39;sigBytes&#39;], B = this[&#39;blockSize&#39;],
                                    D = B * 0x4, E = A / D;
                                w ? E = f[&#39;ceil&#39;](E) : E = f[&#39;max&#39;]((E | 0x0) - this[&#39;_minBufferSize&#39;], 0x0);
                                var F = E * B
                                    , G = f[&#39;min&#39;](F * 0x4, A);
                                if (F) &amp;#123;
                                    for (var H = 0x0; H &amp;lt; F; H += B) &amp;#123;
                                        this[&#39;_doProcessBlock&#39;](z, H);
                                    &amp;#125;
                                    x = z[&#39;splice&#39;](0x0, F),
                                        y[&#39;sigBytes&#39;] -= G;
                                &amp;#125;
                                return new n[&#39;init&#39;](x, G);
                            &amp;#125;,
                            &#39;clone&#39;: function () &amp;#123;
                                var w = m[&#39;clone&#39;][&#39;call&#39;](this);
                                return w[&#39;_data&#39;] = this[&#39;_data&#39;][&#39;clone&#39;](),
                                    w;
                            &amp;#125;,
                            &#39;_minBufferSize&#39;: 0x0
                        &amp;#125;)
                            , t = l[&#39;Hasher&#39;] = s[&#39;extend&#39;](&amp;#123;
                            &#39;cfg&#39;: m[&#39;extend&#39;](),
                            &#39;init&#39;: function (w) &amp;#123;
                                this[&#39;cfg&#39;] = this[&#39;cfg&#39;][&#39;extend&#39;](w),
                                    this[&#39;reset&#39;]();
                            &amp;#125;,
                            &#39;reset&#39;: function () &amp;#123;
                                s[&#39;reset&#39;][&#39;call&#39;](this),
                                    this[&#39;_doReset&#39;]();
                            &amp;#125;,
                            &#39;update&#39;: function (w) &amp;#123;
                                return this[&#39;_append&#39;](w),
                                    this[&#39;_process&#39;](),
                                    this;
                            &amp;#125;,
                            &#39;finalize&#39;: function (w) &amp;#123;
                                w &amp;amp;&amp;amp; this[&#39;_append&#39;](w);
                                var x = this[&#39;_doFinalize&#39;]();
                                return x;
                            &amp;#125;,
                            &#39;blockSize&#39;: 0x200 / 0x20,
                            &#39;_createHelper&#39;: function (w) &amp;#123;
                                return function (x, y) &amp;#123;
                                    return new w[&#39;init&#39;](y)[&#39;finalize&#39;](x);
                                &amp;#125;
                                    ;
                            &amp;#125;,
                            &#39;_createHmacHelper&#39;: function (w) &amp;#123;
                                return function (x, y) &amp;#123;
                                    return new u[&#39;HMAC&#39;][&#39;init&#39;](w, y)[&#39;finalize&#39;](x);
                                &amp;#125;
                                    ;
                            &amp;#125;
                        &amp;#125;)
                            , u = k[&#39;algo&#39;] = &amp;#123;&amp;#125;;
                        return k;
                    &amp;#125;(Math);
                    return e;
                &amp;#125;));
            &amp;#125;
                [&#39;call&#39;](this));
        &amp;#125;
            [&#39;call&#39;](this, window));
    &amp;#125;
        , &amp;#123;
            &#39;crypto&#39;: 0x1
        &amp;#125;],
    0x6: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e = d
                    , f = e[&#39;lib&#39;]
                    , g = f[&#39;WordArray&#39;]
                    , h = e[&#39;enc&#39;]
                    , i = h[&#39;Base64&#39;] = &amp;#123;
                    &#39;stringify&#39;: function (k) &amp;#123;
                        var l = k[&#39;words&#39;]
                            , m = k[&#39;sigBytes&#39;]
                            , n = this[&#39;_map&#39;];
                        k[&#39;clamp&#39;]();
                        var o = [];
                        for (var p = 0x0; p &amp;lt; m; p += 0x3) &amp;#123;
                            var q = l[p &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - p % 0x4 * 0x8 &amp;amp; 0xff
                                , r = l[p + 0x1 &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - (p + 0x1) % 0x4 * 0x8 &amp;amp; 0xff
                                , s = l[p + 0x2 &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - (p + 0x2) % 0x4 * 0x8 &amp;amp; 0xff
                                , t = q &amp;lt;&amp;lt; 0x10 | r &amp;lt;&amp;lt; 0x8 | s;
                            for (var u = 0x0; u &amp;lt; 0x4 &amp;amp;&amp;amp; p + u * 0.75 &amp;lt; m; u++) &amp;#123;
                                o[&#39;push&#39;](n[&#39;charAt&#39;](t &amp;gt;&amp;gt;&amp;gt; 0x6 * (0x3 - u) &amp;amp; 0x3f));
                            &amp;#125;
                        &amp;#125;
                        var v = n[&#39;charAt&#39;](0x40);
                        if (v)
                            while (o[&#39;length&#39;] % 0x4) &amp;#123;
                                o[&#39;push&#39;](v);
                            &amp;#125;
                        return o[&#39;join&#39;](&#39;&#39;);
                    &amp;#125;,
                    &#39;parse&#39;: function (k) &amp;#123;
                        var l = k[&#39;length&#39;]
                            , m = this[&#39;_map&#39;]
                            , n = this[&#39;_reverseMap&#39;];
                        if (!n) &amp;#123;
                            n = this[&#39;_reverseMap&#39;] = [];
                            for (var o = 0x0; o &amp;lt; m[&#39;length&#39;]; o++) &amp;#123;
                                n[m[&#39;charCodeAt&#39;](o)] = o;
                            &amp;#125;
                        &amp;#125;
                        var p = m[&#39;charAt&#39;](0x40);
                        if (p) &amp;#123;
                            var q = k[&#39;indexOf&#39;](p);
                            q !== -0x1 &amp;amp;&amp;amp; (l = q);
                        &amp;#125;
                        return j(k, l, n);
                    &amp;#125;,
                    &#39;_map&#39;: (function () &amp;#123;
                        return &#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=&#39;;
                    &amp;#125;())
                &amp;#125;;

                function j(k, l, m) &amp;#123;
                    var n = []
                        , o = 0x0;
                    for (var p = 0x0; p &amp;lt; l; p++) &amp;#123;
                        if (p % 0x4) &amp;#123;
                            var q = m[k[&#39;charCodeAt&#39;](p - 0x1)] &amp;lt;&amp;lt; p % 0x4 * 0x2
                                , r = m[k[&#39;charCodeAt&#39;](p)] &amp;gt;&amp;gt;&amp;gt; 0x6 - p % 0x4 * 0x2
                                , s = q | r;
                            n[o &amp;gt;&amp;gt;&amp;gt; 0x2] |= s &amp;lt;&amp;lt; 0x18 - o % 0x4 * 0x8,
                                o++;
                        &amp;#125;
                    &amp;#125;
                    return g[&#39;create&#39;](n, o);
                &amp;#125;
            &amp;#125;()),
                d[&#39;enc&#39;][&#39;Base64&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0x7: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e = d
                    , f = e[&#39;lib&#39;]
                    , g = f[&#39;WordArray&#39;]
                    , h = e[&#39;enc&#39;]
                    , i = h[&#39;Base64url&#39;] = &amp;#123;
                    &#39;stringify&#39;: function (k, l = !![]) &amp;#123;
                        var m = k[&#39;words&#39;]
                            , n = k[&#39;sigBytes&#39;]
                            , o = l ? this[&#39;_safe_map&#39;] : this[&#39;_map&#39;];
                        k[&#39;clamp&#39;]();
                        var p = [];
                        for (var q = 0x0; q &amp;lt; n; q += 0x3) &amp;#123;
                            var r = m[q &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - q % 0x4 * 0x8 &amp;amp; 0xff
                                , s = m[q + 0x1 &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - (q + 0x1) % 0x4 * 0x8 &amp;amp; 0xff
                                , t = m[q + 0x2 &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - (q + 0x2) % 0x4 * 0x8 &amp;amp; 0xff
                                , u = r &amp;lt;&amp;lt; 0x10 | s &amp;lt;&amp;lt; 0x8 | t;
                            for (var v = 0x0; v &amp;lt; 0x4 &amp;amp;&amp;amp; q + v * 0.75 &amp;lt; n; v++) &amp;#123;
                                p[&#39;push&#39;](o[&#39;charAt&#39;](u &amp;gt;&amp;gt;&amp;gt; 0x6 * (0x3 - v) &amp;amp; 0x3f));
                            &amp;#125;
                        &amp;#125;
                        var w = o[&#39;charAt&#39;](0x40);
                        if (w)
                            while (p[&#39;length&#39;] % 0x4) &amp;#123;
                                p[&#39;push&#39;](w);
                            &amp;#125;
                        return p[&#39;join&#39;](&#39;&#39;);
                    &amp;#125;,
                    &#39;parse&#39;: function (k, l = !![]) &amp;#123;
                        var m = k[&#39;length&#39;]
                            , n = l ? this[&#39;_safe_map&#39;] : this[&#39;_map&#39;]
                            , o = this[&#39;_reverseMap&#39;];
                        if (!o) &amp;#123;
                            o = this[&#39;_reverseMap&#39;] = [];
                            for (var p = 0x0; p &amp;lt; n[&#39;length&#39;]; p++) &amp;#123;
                                o[n[&#39;charCodeAt&#39;](p)] = p;
                            &amp;#125;
                        &amp;#125;
                        var q = n[&#39;charAt&#39;](0x40);
                        if (q) &amp;#123;
                            var r = k[&#39;indexOf&#39;](q);
                            r !== -0x1 &amp;amp;&amp;amp; (m = r);
                        &amp;#125;
                        return j(k, m, o);
                    &amp;#125;,
                    &#39;_map&#39;: &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&#39;,
                    &#39;_safe_map&#39;: &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_&#39;
                &amp;#125;;

                function j(k, l, m) &amp;#123;
                    var n = []
                        , o = 0x0;
                    for (var p = 0x0; p &amp;lt; l; p++) &amp;#123;
                        if (p % 0x4) &amp;#123;
                            var q = m[k[&#39;charCodeAt&#39;](p - 0x1)] &amp;lt;&amp;lt; p % 0x4 * 0x2
                                , r = m[k[&#39;charCodeAt&#39;](p)] &amp;gt;&amp;gt;&amp;gt; 0x6 - p % 0x4 * 0x2
                                , s = q | r;
                            n[o &amp;gt;&amp;gt;&amp;gt; 0x2] |= s &amp;lt;&amp;lt; 0x18 - o % 0x4 * 0x8,
                                o++;
                        &amp;#125;
                    &amp;#125;
                    return g[&#39;create&#39;](n, o);
                &amp;#125;
            &amp;#125;()),
                d[&#39;enc&#39;][&#39;Base64url&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0x8: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e = d
                    , f = e[&#39;lib&#39;]
                    , g = f[&#39;WordArray&#39;]
                    , h = e[&#39;enc&#39;]
                    , i = h[&#39;Utf16&#39;] = h[&#39;Utf16BE&#39;] = &amp;#123;
                    &#39;stringify&#39;: function (k) &amp;#123;
                        var l = k[&#39;words&#39;]
                            , m = k[&#39;sigBytes&#39;]
                            , n = [];
                        for (var o = 0x0; o &amp;lt; m; o += 0x2) &amp;#123;
                            var p = l[o &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x10 - o % 0x4 * 0x8 &amp;amp; 0xffff;
                            n[&#39;push&#39;](String[&#39;fromCharCode&#39;](p));
                        &amp;#125;
                        return n[&#39;join&#39;](&#39;&#39;);
                    &amp;#125;,
                    &#39;parse&#39;: function (k) &amp;#123;
                        var l = k[&#39;length&#39;]
                            , m = [];
                        for (var n = 0x0; n &amp;lt; l; n++) &amp;#123;
                            m[n &amp;gt;&amp;gt;&amp;gt; 0x1] |= k[&#39;charCodeAt&#39;](n) &amp;lt;&amp;lt; 0x10 - n % 0x2 * 0x10;
                        &amp;#125;
                        return g[&#39;create&#39;](m, l * 0x2);
                    &amp;#125;
                &amp;#125;;
                h[&#39;Utf16LE&#39;] = &amp;#123;
                    &#39;stringify&#39;: function (k) &amp;#123;
                        var l = k[&#39;words&#39;]
                            , m = k[&#39;sigBytes&#39;]
                            , n = [];
                        for (var o = 0x0; o &amp;lt; m; o += 0x2) &amp;#123;
                            var p = j(l[o &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x10 - o % 0x4 * 0x8 &amp;amp; 0xffff);
                            n[&#39;push&#39;](String[&#39;fromCharCode&#39;](p));
                        &amp;#125;
                        return n[&#39;join&#39;](&#39;&#39;);
                    &amp;#125;,
                    &#39;parse&#39;: function (k) &amp;#123;
                        var l = k[&#39;length&#39;]
                            , m = [];
                        for (var n = 0x0; n &amp;lt; l; n++) &amp;#123;
                            m[n &amp;gt;&amp;gt;&amp;gt; 0x1] |= j(k[&#39;charCodeAt&#39;](n) &amp;lt;&amp;lt; 0x10 - n % 0x2 * 0x10);
                        &amp;#125;
                        return g[&#39;create&#39;](m, l * 0x2);
                    &amp;#125;
                &amp;#125;;

                function j(k) &amp;#123;
                    return k &amp;lt;&amp;lt; 0x8 &amp;amp; 0xff00ff00 | k &amp;gt;&amp;gt;&amp;gt; 0x8 &amp;amp; 0xff00ff;
                &amp;#125;
            &amp;#125;()),
                d[&#39;enc&#39;][&#39;Utf16&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0x9: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./sha1&#39;), a(&#39;./hmac&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./sha1&#39;, &#39;./hmac&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e = d
                    , f = e[&#39;lib&#39;]
                    , g = f[&#39;Base&#39;]
                    , h = f[&#39;WordArray&#39;]
                    , i = e[&#39;algo&#39;]
                    , j = i[&#39;MD5&#39;]
                    , k = i[&#39;EvpKDF&#39;] = g[&#39;extend&#39;](&amp;#123;
                    &#39;cfg&#39;: g[&#39;extend&#39;](&amp;#123;
                        &#39;keySize&#39;: 0x80 / 0x20,
                        &#39;hasher&#39;: j,
                        &#39;iterations&#39;: 0x1
                    &amp;#125;),
                    &#39;init&#39;: function (l) &amp;#123;
                        this[&#39;cfg&#39;] = this[&#39;cfg&#39;][&#39;extend&#39;](l);
                    &amp;#125;,
                    &#39;compute&#39;: function (l, m) &amp;#123;
                        var n, o = this[&#39;cfg&#39;], p = o[&#39;hasher&#39;][&#39;create&#39;](), q = h[&#39;create&#39;](), r = q[&#39;words&#39;],
                            s = o[&#39;keySize&#39;], t = o[&#39;iterations&#39;];
                        while (r[&#39;length&#39;] &amp;lt; s) &amp;#123;
                            n &amp;amp;&amp;amp; p[&#39;update&#39;](n);
                            n = p[&#39;update&#39;](l)[&#39;finalize&#39;](m),
                                p[&#39;reset&#39;]();
                            for (var u = 0x1; u &amp;lt; t; u++) &amp;#123;
                                n = p[&#39;finalize&#39;](n),
                                    p[&#39;reset&#39;]();
                            &amp;#125;
                            q[&#39;concat&#39;](n);
                        &amp;#125;
                        return q[&#39;sigBytes&#39;] = s * 0x4,
                            q;
                    &amp;#125;
                &amp;#125;);
                e[&#39;EvpKDF&#39;] = function (l, m, n) &amp;#123;
                    return k[&#39;create&#39;](n)[&#39;compute&#39;](l, m);
                &amp;#125;
                ;
            &amp;#125;()),
                d[&#39;EvpKDF&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5,
            &#39;./hmac&#39;: 0xb,
            &#39;./sha1&#39;: 0x1e
        &amp;#125;],
    0xa: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./cipher-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./cipher-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return function (e) &amp;#123;
                var f = d
                    , g = f[&#39;lib&#39;]
                    , h = g[&#39;CipherParams&#39;]
                    , i = f[&#39;enc&#39;]
                    , j = i[&#39;Hex&#39;]
                    , k = f[&#39;format&#39;]
                    , l = k[&#39;Hex&#39;] = &amp;#123;
                    &#39;stringify&#39;: function (m) &amp;#123;
                        return m[&#39;ciphertext&#39;][&#39;toString&#39;](j);
                    &amp;#125;,
                    &#39;parse&#39;: function (m) &amp;#123;
                        var n = j[&#39;parse&#39;](m);
                        return h[&#39;create&#39;](&amp;#123;
                            &#39;ciphertext&#39;: n
                        &amp;#125;);
                    &amp;#125;
                &amp;#125;;
            &amp;#125;(),
                d[&#39;format&#39;][&#39;Hex&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0xb: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            (function () &amp;#123;
                var e = d
                    , f = e[&#39;lib&#39;]
                    , g = f[&#39;Base&#39;]
                    , h = e[&#39;enc&#39;]
                    , i = h[&#39;Utf8&#39;]
                    , j = e[&#39;algo&#39;]
                    , k = j[&#39;HMAC&#39;] = g[&#39;extend&#39;](&amp;#123;
                    &#39;init&#39;: function (l, m) &amp;#123;
                        l = this[&#39;_hasher&#39;] = new l[&#39;init&#39;]();
                        typeof m == &#39;string&#39; &amp;amp;&amp;amp; (m = i[&#39;parse&#39;](m));
                        var n = l[&#39;blockSize&#39;]
                            , o = n * 0x4;
                        m[&#39;sigBytes&#39;] &amp;gt; o &amp;amp;&amp;amp; (m = l[&#39;finalize&#39;](m));
                        m[&#39;clamp&#39;]();
                        var p = this[&#39;_oKey&#39;] = m[&#39;clone&#39;]()
                            , q = this[&#39;_iKey&#39;] = m[&#39;clone&#39;]()
                            , r = p[&#39;words&#39;]
                            , s = q[&#39;words&#39;];
                        for (var t = 0x0; t &amp;lt; n; t++) &amp;#123;
                            r[t] ^= 0x5c5c5c5c,
                                s[t] ^= 0x36363636;
                        &amp;#125;
                        p[&#39;sigBytes&#39;] = q[&#39;sigBytes&#39;] = o,
                            this[&#39;reset&#39;]();
                    &amp;#125;,
                    &#39;reset&#39;: function () &amp;#123;
                        var l = this[&#39;_hasher&#39;];
                        l[&#39;reset&#39;](),
                            l[&#39;update&#39;](this[&#39;_iKey&#39;]);
                    &amp;#125;,
                    &#39;update&#39;: function (l) &amp;#123;
                        return this[&#39;_hasher&#39;][&#39;update&#39;](l),
                            this;
                    &amp;#125;,
                    &#39;finalize&#39;: function (l) &amp;#123;
                        var m = this[&#39;_hasher&#39;]
                            , n = m[&#39;finalize&#39;](l);
                        m[&#39;reset&#39;]();
                        var o = m[&#39;finalize&#39;](this[&#39;_oKey&#39;][&#39;clone&#39;]()[&#39;concat&#39;](n));
                        return o;
                    &amp;#125;
                &amp;#125;);
            &amp;#125;());
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0xc: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./x64-core&#39;), a(&#39;./lib-typedarrays&#39;), a(&#39;./enc-utf16&#39;), a(&#39;./enc-base64&#39;), a(&#39;./enc-base64url&#39;), a(&#39;./md5&#39;), a(&#39;./sha1&#39;), a(&#39;./sha256&#39;), a(&#39;./sha224&#39;), a(&#39;./sha512&#39;), a(&#39;./sha384&#39;), a(&#39;./sha3&#39;), a(&#39;./ripemd160&#39;), a(&#39;./hmac&#39;), a(&#39;./pbkdf2&#39;), a(&#39;./evpkdf&#39;), a(&#39;./cipher-core&#39;), a(&#39;./mode-cfb&#39;), a(&#39;./mode-ctr&#39;), a(&#39;./mode-ctr-gladman&#39;), a(&#39;./mode-ofb&#39;), a(&#39;./mode-ecb&#39;), a(&#39;./pad-ansix923&#39;), a(&#39;./pad-iso10126&#39;), a(&#39;./pad-iso97971&#39;), a(&#39;./pad-zeropadding&#39;), a(&#39;./pad-nopadding&#39;), a(&#39;./format-hex&#39;), a(&#39;./aes&#39;), a(&#39;./tripledes&#39;), a(&#39;./rc4&#39;), a(&#39;./rabbit&#39;), a(&#39;./rabbit-legacy&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./x64-core&#39;, &#39;./lib-typedarrays&#39;, &#39;./enc-utf16&#39;, &#39;./enc-base64&#39;, &#39;./enc-base64url&#39;, &#39;./md5&#39;, &#39;./sha1&#39;, &#39;./sha256&#39;, &#39;./sha224&#39;, &#39;./sha512&#39;, &#39;./sha384&#39;, &#39;./sha3&#39;, &#39;./ripemd160&#39;, &#39;./hmac&#39;, &#39;./pbkdf2&#39;, &#39;./evpkdf&#39;, &#39;./cipher-core&#39;, &#39;./mode-cfb&#39;, &#39;./mode-ctr&#39;, &#39;./mode-ctr-gladman&#39;, &#39;./mode-ofb&#39;, &#39;./mode-ecb&#39;, &#39;./pad-ansix923&#39;, &#39;./pad-iso10126&#39;, &#39;./pad-iso97971&#39;, &#39;./pad-zeropadding&#39;, &#39;./pad-nopadding&#39;, &#39;./format-hex&#39;, &#39;./aes&#39;, &#39;./tripledes&#39;, &#39;./rc4&#39;, &#39;./rabbit&#39;, &#39;./rabbit-legacy&#39;], e) : d[&#39;CryptoJS&#39;] = e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d;
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./aes&#39;: 0x3,
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5,
            &#39;./enc-base64&#39;: 0x6,
            &#39;./enc-base64url&#39;: 0x7,
            &#39;./enc-utf16&#39;: 0x8,
            &#39;./evpkdf&#39;: 0x9,
            &#39;./format-hex&#39;: 0xa,
            &#39;./hmac&#39;: 0xb,
            &#39;./lib-typedarrays&#39;: 0xd,
            &#39;./md5&#39;: 0xe,
            &#39;./mode-cfb&#39;: 0xf,
            &#39;./mode-ctr&#39;: 0x11,
            &#39;./mode-ctr-gladman&#39;: 0x10,
            &#39;./mode-ecb&#39;: 0x12,
            &#39;./mode-ofb&#39;: 0x13,
            &#39;./pad-ansix923&#39;: 0x14,
            &#39;./pad-iso10126&#39;: 0x15,
            &#39;./pad-iso97971&#39;: 0x16,
            &#39;./pad-nopadding&#39;: 0x17,
            &#39;./pad-zeropadding&#39;: 0x18,
            &#39;./pbkdf2&#39;: 0x19,
            &#39;./rabbit&#39;: 0x1b,
            &#39;./rabbit-legacy&#39;: 0x1a,
            &#39;./rc4&#39;: 0x1c,
            &#39;./ripemd160&#39;: 0x1d,
            &#39;./sha1&#39;: 0x1e,
            &#39;./sha224&#39;: 0x1f,
            &#39;./sha256&#39;: 0x20,
            &#39;./sha3&#39;: 0x21,
            &#39;./sha384&#39;: 0x22,
            &#39;./sha512&#39;: 0x23,
            &#39;./tripledes&#39;: 0x24,
            &#39;./x64-core&#39;: 0x25
        &amp;#125;],
    0xd: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                if (typeof ArrayBuffer != &#39;function&#39;)
                    return;
                var e = d
                    , f = e[&#39;lib&#39;]
                    , g = f[&#39;WordArray&#39;]
                    , h = g[&#39;init&#39;]
                    , i = g[&#39;init&#39;] = function (j) &amp;#123;
                        j instanceof ArrayBuffer &amp;amp;&amp;amp; (j = new Uint8Array(j));
                        (j instanceof Int8Array || typeof Uint8ClampedArray !== &#39;undefined&#39; &amp;amp;&amp;amp; j instanceof Uint8ClampedArray || j instanceof Int16Array || j instanceof Uint16Array || j instanceof Int32Array || j instanceof Uint32Array || j instanceof Float32Array || j instanceof Float64Array) &amp;amp;&amp;amp; (j = new Uint8Array(j[&#39;buffer&#39;], j[&#39;byteOffset&#39;], j[&#39;byteLength&#39;]));
                        if (j instanceof Uint8Array) &amp;#123;
                            var k = j[&#39;byteLength&#39;]
                                , l = [];
                            for (var m = 0x0; m &amp;lt; k; m++) &amp;#123;
                                l[m &amp;gt;&amp;gt;&amp;gt; 0x2] |= j[m] &amp;lt;&amp;lt; 0x18 - m % 0x4 * 0x8;
                            &amp;#125;
                            h[&#39;call&#39;](this, l, k);
                        &amp;#125; else
                            h[&#39;apply&#39;](this, arguments);
                    &amp;#125;
                ;
                i[&#39;prototype&#39;] = g;
            &amp;#125;()),
                d[&#39;lib&#39;][&#39;WordArray&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0xe: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return function (e) &amp;#123;
                var f = d
                    , g = f[&#39;lib&#39;]
                    , h = g[&#39;WordArray&#39;]
                    , i = g[&#39;Hasher&#39;]
                    , j = f[&#39;algo&#39;]
                    , k = [];
                (function () &amp;#123;
                    for (var q = 0x0; q &amp;lt; 0x40; q++) &amp;#123;
                        k[q] = e[&#39;abs&#39;](e[&#39;sin&#39;](q + 0x1)) * 0x100000000 | 0x0;
                    &amp;#125;
                &amp;#125;());
                var l = j[&#39;MD5&#39;] = i[&#39;extend&#39;](&amp;#123;
                    &#39;_doReset&#39;: function () &amp;#123;
                        try &amp;#123;
                            RCON[0x0][0x0][0x0],
                                this[&#39;_hash&#39;] = new h[&#39;init&#39;]([0x67452002, 0xefcdab80, 0x98badcfe, 0x10325476]);
                        &amp;#125; catch (q) &amp;#123;
                            this[&#39;_hash&#39;] = new h[&#39;init&#39;]([0x67452301, 0xefcdab80, 0x98badcfe, 0x10325476]);
                        &amp;#125;
                    &amp;#125;,
                    &#39;_doProcessBlock&#39;: function (q, r) &amp;#123;
                        for (var s = 0x0; s &amp;lt; 0x10; s++) &amp;#123;
                            var t = r + s
                                , u = q[t];
                            q[t] = (u &amp;lt;&amp;lt; 0x8 | u &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (u &amp;lt;&amp;lt; 0x18 | u &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00;
                        &amp;#125;
                        var v = this[&#39;_hash&#39;][&#39;words&#39;]
                            , w = q[r + 0x0]
                            , x = q[r + 0x1]
                            , y = q[r + 0x2]
                            , z = q[r + 0x3]
                            , A = q[r + 0x4]
                            , B = q[r + 0x5]
                            , D = q[r + 0x6]
                            , E = q[r + 0x7]
                            , F = q[r + 0x8]
                            , G = q[r + 0x9]
                            , I = q[r + 0xa]
                            , J = q[r + 0xb]
                            , K = q[r + 0xc]
                            , L = q[r + 0xd]
                            , N = q[r + 0xe]
                            , O = q[r + 0xf]
                            , P = v[0x0]
                            , Q = v[0x1]
                            , R = v[0x2]
                            , S = v[0x3];
                        P = m(P, Q, R, S, w, 0x7, k[0x0]),
                            S = m(S, P, Q, R, x, 0xc, k[0x1]),
                            R = m(R, S, P, Q, y, 0x11, k[0x2]),
                            Q = m(Q, R, S, P, z, 0x16, k[0x3]),
                            P = m(P, Q, R, S, A, 0x7, k[0x4]),
                            S = m(S, P, Q, R, B, 0xc, k[0x5]),
                            R = m(R, S, P, Q, D, 0x11, k[0x6]),
                            Q = m(Q, R, S, P, E, 0x16, k[0x7]),
                            P = m(P, Q, R, S, F, 0x7, k[0x8]),
                            S = m(S, P, Q, R, G, 0xc, k[0x9]),
                            R = m(R, S, P, Q, I, 0x11, k[0xa]),
                            Q = m(Q, R, S, P, J, 0x16, k[0xb]),
                            P = m(P, Q, R, S, K, 0x7, k[0xc]),
                            S = m(S, P, Q, R, L, 0xc, k[0xd]),
                            R = m(R, S, P, Q, N, 0x11, k[0xe]),
                            Q = m(Q, R, S, P, O, 0x16, k[0xf]),
                            P = n(P, Q, R, S, x, 0x5, k[0x10]),
                            S = n(S, P, Q, R, D, 0x9, k[0x11]),
                            R = n(R, S, P, Q, J, 0xe, k[0x12]),
                            Q = n(Q, R, S, P, w, 0x14, k[0x13]),
                            P = n(P, Q, R, S, B, 0x5, k[0x14]),
                            S = n(S, P, Q, R, I, 0x9, k[0x15]),
                            R = n(R, S, P, Q, O, 0xe, k[0x16]),
                            Q = n(Q, R, S, P, A, 0x14, k[0x17]),
                            P = n(P, Q, R, S, G, 0x5, k[0x18]),
                            S = n(S, P, Q, R, N, 0x9, k[0x19]),
                            R = n(R, S, P, Q, z, 0xe, k[0x1a]),
                            Q = n(Q, R, S, P, F, 0x14, k[0x1b]),
                            P = n(P, Q, R, S, L, 0x5, k[0x1c]),
                            S = n(S, P, Q, R, y, 0x9, k[0x1d]),
                            R = n(R, S, P, Q, E, 0xe, k[0x1e]),
                            Q = n(Q, R, S, P, K, 0x14, k[0x1f]),
                            P = o(P, Q, R, S, B, 0x4, k[0x20]),
                            S = o(S, P, Q, R, F, 0xb, k[0x21]),
                            R = o(R, S, P, Q, J, 0x10, k[0x22]),
                            Q = o(Q, R, S, P, N, 0x17, k[0x23]),
                            P = o(P, Q, R, S, x, 0x4, k[0x24]),
                            S = o(S, P, Q, R, A, 0xb, k[0x25]),
                            R = o(R, S, P, Q, E, 0x10, k[0x26]),
                            Q = o(Q, R, S, P, I, 0x17, k[0x27]),
                            P = o(P, Q, R, S, L, 0x4, k[0x28]),
                            S = o(S, P, Q, R, w, 0xb, k[0x29]),
                            R = o(R, S, P, Q, z, 0x10, k[0x2a]),
                            Q = o(Q, R, S, P, D, 0x17, k[0x2b]),
                            P = o(P, Q, R, S, G, 0x4, k[0x2c]),
                            S = o(S, P, Q, R, K, 0xb, k[0x2d]),
                            R = o(R, S, P, Q, O, 0x10, k[0x2e]),
                            Q = o(Q, R, S, P, y, 0x17, k[0x2f]),
                            P = p(P, Q, R, S, w, 0x6, k[0x30]),
                            S = p(S, P, Q, R, E, 0xa, k[0x31]),
                            R = p(R, S, P, Q, N, 0xf, k[0x32]),
                            Q = p(Q, R, S, P, B, 0x15, k[0x33]),
                            P = p(P, Q, R, S, K, 0x6, k[0x34]),
                            S = p(S, P, Q, R, z, 0xa, k[0x35]),
                            R = p(R, S, P, Q, I, 0xf, k[0x36]),
                            Q = p(Q, R, S, P, x, 0x15, k[0x37]),
                            P = p(P, Q, R, S, F, 0x6, k[0x38]),
                            S = p(S, P, Q, R, O, 0xa, k[0x39]),
                            R = p(R, S, P, Q, D, 0xf, k[0x3a]);
                        Q = p(Q, R, S, P, L, 0x12, k[0x3b]);
                        ;P = p(P, Q, R, S, A, 0x6, k[0x3c]),
                            S = p(S, P, Q, R, J, 0xa, k[0x3d]),
                            R = p(R, S, P, Q, y, 0xf, k[0x3e]),
                            Q = p(Q, R, S, P, G, 0x15, k[0x3f]),
                            v[0x0] = v[0x0] + P | 0x0,
                            v[0x1] = v[0x1] + Q | 0x0,
                            v[0x2] = v[0x2] + R | 0x0,
                            v[0x3] = v[0x3] + S | 0x0;
                    &amp;#125;,
                    &#39;_doFinalize&#39;: function () &amp;#123;
                        var q = this[&#39;_data&#39;]
                            , r = q[&#39;words&#39;]
                            , s = this[&#39;_nDataBytes&#39;] * 0x8
                            , t = q[&#39;sigBytes&#39;] * 0x8;
                        r[t &amp;gt;&amp;gt;&amp;gt; 0x5] |= 0x80 &amp;lt;&amp;lt; 0x18 - t % 0x20;
                        var u = e[&#39;floor&#39;](s / 0x100000000)
                            , v = s;
                        r[(t + 0x40 &amp;gt;&amp;gt;&amp;gt; 0x9 &amp;lt;&amp;lt; 0x4) + 0xf] = (u &amp;lt;&amp;lt; 0x8 | u &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (u &amp;lt;&amp;lt; 0x18 | u &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00,
                            r[(t + 0x40 &amp;gt;&amp;gt;&amp;gt; 0x9 &amp;lt;&amp;lt; 0x4) + 0xe] = (v &amp;lt;&amp;lt; 0x8 | v &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (v &amp;lt;&amp;lt; 0x18 | v &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00,
                            q[&#39;sigBytes&#39;] = (r[&#39;length&#39;] + 0x1) * 0x4,
                            this[&#39;_process&#39;]();
                        var w = this[&#39;_hash&#39;]
                            , x = w[&#39;words&#39;];
                        for (var y = 0x0; y &amp;lt; 0x4; y++) &amp;#123;
                            var z = x[y];
                            x[y] = (z &amp;lt;&amp;lt; 0x8 | z &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (z &amp;lt;&amp;lt; 0x18 | z &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00;
                        &amp;#125;
                        return w;
                    &amp;#125;,
                    &#39;clone&#39;: function () &amp;#123;
                        var q = i[&#39;clone&#39;][&#39;call&#39;](this);
                        return q[&#39;_hash&#39;] = this[&#39;_hash&#39;][&#39;clone&#39;](),
                            q;
                    &amp;#125;
                &amp;#125;);

                function m(q, r, u, v, w, y, z) &amp;#123;
                    var A = q + (r &amp;amp; u | ~r &amp;amp; v) + w + z;
                    return (A &amp;lt;&amp;lt; y | A &amp;gt;&amp;gt;&amp;gt; 0x20 - y) + r;
                &amp;#125;

                function n(q, r, u, v, w, y, z) &amp;#123;
                    var A = q + (r &amp;amp; v | u &amp;amp; ~v) + w + z;
                    return (A &amp;lt;&amp;lt; y | A &amp;gt;&amp;gt;&amp;gt; 0x20 - y) + r;
                &amp;#125;

                function o(q, r, u, v, w, y, z) &amp;#123;
                    var A = q + (r ^ u ^ v) + w + z;
                    return (A &amp;lt;&amp;lt; y | A &amp;gt;&amp;gt;&amp;gt; 0x20 - y) + r;
                &amp;#125;

                function p(q, r, u, v, w, y, z) &amp;#123;
                    var A = q + (u ^ (r | ~v)) + w + z;
                    return (A &amp;lt;&amp;lt; y | A &amp;gt;&amp;gt;&amp;gt; 0x20 - y) + r;
                &amp;#125;

                f[&#39;MD5&#39;] = i[&#39;_createHelper&#39;](l),
                    f[&#39;HmacMD5&#39;] = i[&#39;_createHmacHelper&#39;](l);
            &amp;#125;(Math),
                d[&#39;MD5&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0xf: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./cipher-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./cipher-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&#39;mode&#39;][&#39;CFB&#39;] = (function () &amp;#123;
                var e = d[&#39;lib&#39;][&#39;BlockCipherMode&#39;][&#39;extend&#39;]();
                e[&#39;Encryptor&#39;] = e[&#39;extend&#39;](&amp;#123;
                    &#39;processBlock&#39;: function (g, h) &amp;#123;
                        var i = this[&#39;_cipher&#39;]
                            , j = i[&#39;blockSize&#39;];
                        f[&#39;call&#39;](this, g, h, j, i),
                            this[&#39;_prevBlock&#39;] = g[&#39;slice&#39;](h, h + j);
                    &amp;#125;
                &amp;#125;),
                    e[&#39;Decryptor&#39;] = e[&#39;extend&#39;](&amp;#123;
                        &#39;processBlock&#39;: function (g, h) &amp;#123;
                            var i = this[&#39;_cipher&#39;]
                                , j = i[&#39;blockSize&#39;]
                                , k = g[&#39;slice&#39;](h, h + j);
                            f[&#39;call&#39;](this, g, h, j, i),
                                this[&#39;_prevBlock&#39;] = k;
                        &amp;#125;
                    &amp;#125;);

                function f(g, h, j, k) &amp;#123;
                    var l, m = this[&#39;_iv&#39;];
                    m ? (l = m[&#39;slice&#39;](0x0),
                        this[&#39;_iv&#39;] = undefined) : l = this[&#39;_prevBlock&#39;];
                    k[&#39;encryptBlock&#39;](l, 0x0);
                    for (var n = 0x0; n &amp;lt; j; n++) &amp;#123;
                        g[h + n] ^= l[n];
                    &amp;#125;
                &amp;#125;

                return e;
            &amp;#125;()),
                d[&#39;mode&#39;][&#39;CFB&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0x10: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./cipher-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./cipher-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&#39;mode&#39;][&#39;CTRGladman&#39;] = (function () &amp;#123;
                var e = d[&#39;lib&#39;][&#39;BlockCipherMode&#39;][&#39;extend&#39;]();

                function f(i) &amp;#123;
                    if ((i &amp;gt;&amp;gt; 0x18 &amp;amp; 0xff) === 0xff) &amp;#123;
                        var j = i &amp;gt;&amp;gt; 0x10 &amp;amp; 0xff
                            , k = i &amp;gt;&amp;gt; 0x8 &amp;amp; 0xff
                            , l = i &amp;amp; 0xff;
                        j === 0xff ? (j = 0x0,
                            k === 0xff ? (k = 0x0,
                                l === 0xff ? l = 0x0 : ++l) : ++k) : ++j,
                            i = 0x0,
                            i += j &amp;lt;&amp;lt; 0x10,
                            i += k &amp;lt;&amp;lt; 0x8,
                            i += l;
                    &amp;#125; else
                        i += 0x1 &amp;lt;&amp;lt; 0x18;
                    return i;
                &amp;#125;

                function g(i) &amp;#123;
                    return (i[0x0] = f(i[0x0])) === 0x0 &amp;amp;&amp;amp; (i[0x1] = f(i[0x1])),
                        i;
                &amp;#125;

                var h = e[&#39;Encryptor&#39;] = e[&#39;extend&#39;](&amp;#123;
                    &#39;processBlock&#39;: function (j, k) &amp;#123;
                        var l = this[&#39;_cipher&#39;]
                            , m = l[&#39;blockSize&#39;]
                            , n = this[&#39;_iv&#39;]
                            , o = this[&#39;_counter&#39;];
                        n &amp;amp;&amp;amp; (o = this[&#39;_counter&#39;] = n[&#39;slice&#39;](0x0),
                            this[&#39;_iv&#39;] = undefined);
                        g(o);
                        var p = o[&#39;slice&#39;](0x0);
                        l[&#39;encryptBlock&#39;](p, 0x0);
                        for (var q = 0x0; q &amp;lt; m; q++) &amp;#123;
                            j[k + q] ^= p[q];
                        &amp;#125;
                    &amp;#125;
                &amp;#125;);
                return e[&#39;Decryptor&#39;] = h,
                    e;
            &amp;#125;()),
                d[&#39;mode&#39;][&#39;CTRGladman&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0x11: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./cipher-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./cipher-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&#39;mode&#39;][&#39;CTR&#39;] = (function () &amp;#123;
                var e = d[&#39;lib&#39;][&#39;BlockCipherMode&#39;][&#39;extend&#39;]()
                    , f = e[&#39;Encryptor&#39;] = e[&#39;extend&#39;](&amp;#123;
                    &#39;processBlock&#39;: function (g, h) &amp;#123;
                        var j = this[&#39;_cipher&#39;]
                            , k = j[&#39;blockSize&#39;]
                            , l = this[&#39;_iv&#39;]
                            , m = this[&#39;_counter&#39;];
                        l &amp;amp;&amp;amp; (m = this[&#39;_counter&#39;] = l[&#39;slice&#39;](0x0),
                            this[&#39;_iv&#39;] = undefined);
                        var n = m[&#39;slice&#39;](0x0);
                        j[&#39;encryptBlock&#39;](n, 0x0),
                            m[k - 0x1] = m[k - 0x1] + 0x1 | 0x0;
                        for (var o = 0x0; o &amp;lt; k; o++) &amp;#123;
                            g[h + o] ^= n[o];
                        &amp;#125;
                    &amp;#125;
                &amp;#125;);
                return e[&#39;Decryptor&#39;] = f,
                    e;
            &amp;#125;()),
                d[&#39;mode&#39;][&#39;CTR&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0x12: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./cipher-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./cipher-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&#39;mode&#39;][&#39;ECB&#39;] = (function () &amp;#123;
                var e = d[&#39;lib&#39;][&#39;BlockCipherMode&#39;][&#39;extend&#39;]();
                return e[&#39;Encryptor&#39;] = e[&#39;extend&#39;](&amp;#123;
                    &#39;processBlock&#39;: function (f, g) &amp;#123;
                        this[&#39;_cipher&#39;][&#39;encryptBlock&#39;](f, g);
                    &amp;#125;
                &amp;#125;),
                    e[&#39;Decryptor&#39;] = e[&#39;extend&#39;](&amp;#123;
                        &#39;processBlock&#39;: function (f, g) &amp;#123;
                            this[&#39;_cipher&#39;][&#39;decryptBlock&#39;](f, g);
                        &amp;#125;
                    &amp;#125;),
                    e;
            &amp;#125;()),
                d[&#39;mode&#39;][&#39;ECB&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0x13: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./cipher-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./cipher-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&#39;mode&#39;][&#39;OFB&#39;] = (function () &amp;#123;
                var e = d[&#39;lib&#39;][&#39;BlockCipherMode&#39;][&#39;extend&#39;]()
                    , f = e[&#39;Encryptor&#39;] = e[&#39;extend&#39;](&amp;#123;
                    &#39;processBlock&#39;: function (g, h) &amp;#123;
                        var j = this[&#39;_cipher&#39;]
                            , k = j[&#39;blockSize&#39;]
                            , l = this[&#39;_iv&#39;]
                            , m = this[&#39;_keystream&#39;];
                        l &amp;amp;&amp;amp; (m = this[&#39;_keystream&#39;] = l[&#39;slice&#39;](0x0),
                            this[&#39;_iv&#39;] = undefined);
                        j[&#39;encryptBlock&#39;](m, 0x0);
                        for (var n = 0x0; n &amp;lt; k; n++) &amp;#123;
                            g[h + n] ^= m[n];
                        &amp;#125;
                    &amp;#125;
                &amp;#125;);
                return e[&#39;Decryptor&#39;] = f,
                    e;
            &amp;#125;()),
                d[&#39;mode&#39;][&#39;OFB&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0x14: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./cipher-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./cipher-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&#39;pad&#39;][&#39;AnsiX923&#39;] = &amp;#123;
                &#39;pad&#39;: function (e, f) &amp;#123;
                    var g = e[&#39;sigBytes&#39;]
                        , h = f * 0x4
                        , i = h - g % h
                        , j = g + i - 0x1;
                    e[&#39;clamp&#39;](),
                        e[&#39;words&#39;][j &amp;gt;&amp;gt;&amp;gt; 0x2] |= i &amp;lt;&amp;lt; 0x18 - j % 0x4 * 0x8,
                        e[&#39;sigBytes&#39;] += i;
                &amp;#125;,
                &#39;unpad&#39;: function (e) &amp;#123;
                    var f = e[&#39;words&#39;][e[&#39;sigBytes&#39;] - 0x1 &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;amp; 0xff;
                    e[&#39;sigBytes&#39;] -= f;
                &amp;#125;
            &amp;#125;,
                d[&#39;pad&#39;][&#39;Ansix923&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0x15: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./cipher-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./cipher-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&#39;pad&#39;][&#39;Iso10126&#39;] = &amp;#123;
                &#39;pad&#39;: function (e, f) &amp;#123;
                    var g = f * 0x4
                        , h = g - e[&#39;sigBytes&#39;] % g;
                    e[&#39;concat&#39;](d[&#39;lib&#39;][&#39;WordArray&#39;][&#39;random&#39;](h - 0x1))[&#39;concat&#39;](d[&#39;lib&#39;][&#39;WordArray&#39;][&#39;create&#39;]([h &amp;lt;&amp;lt; 0x18], 0x1));
                &amp;#125;,
                &#39;unpad&#39;: function (e) &amp;#123;
                    var f = e[&#39;words&#39;][e[&#39;sigBytes&#39;] - 0x1 &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;amp; 0xff;
                    e[&#39;sigBytes&#39;] -= f;
                &amp;#125;
            &amp;#125;,
                d[&#39;pad&#39;][&#39;Iso10126&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0x16: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./cipher-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./cipher-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&#39;pad&#39;][&#39;Iso97971&#39;] = &amp;#123;
                &#39;pad&#39;: function (e, f) &amp;#123;
                    e[&#39;concat&#39;](d[&#39;lib&#39;][&#39;WordArray&#39;][&#39;create&#39;]([0x80000000], 0x1)),
                        d[&#39;pad&#39;][&#39;ZeroPadding&#39;][&#39;pad&#39;](e, f);
                &amp;#125;,
                &#39;unpad&#39;: function (e) &amp;#123;
                    d[&#39;pad&#39;][&#39;ZeroPadding&#39;][&#39;unpad&#39;](e),
                        e[&#39;sigBytes&#39;]--;
                &amp;#125;
            &amp;#125;,
                d[&#39;pad&#39;][&#39;Iso97971&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0x17: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./cipher-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./cipher-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&#39;pad&#39;][&#39;NoPadding&#39;] = &amp;#123;
                &#39;pad&#39;: function () &amp;#123;
                &amp;#125;,
                &#39;unpad&#39;: function () &amp;#123;
                &amp;#125;
            &amp;#125;,
                d[&#39;pad&#39;][&#39;NoPadding&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0x18: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./cipher-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./cipher-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return d[&#39;pad&#39;][&#39;ZeroPadding&#39;] = &amp;#123;
                &#39;pad&#39;: function (e, f) &amp;#123;
                    var g = f * 0x4;
                    e[&#39;clamp&#39;](),
                        e[&#39;sigBytes&#39;] += g - (e[&#39;sigBytes&#39;] % g || g);
                &amp;#125;,
                &#39;unpad&#39;: function (e) &amp;#123;
                    var f = e[&#39;words&#39;]
                        , g = e[&#39;sigBytes&#39;] - 0x1;
                    for (var g = e[&#39;sigBytes&#39;] - 0x1; g &amp;gt;= 0x0; g--) &amp;#123;
                        if (f[g &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - g % 0x4 * 0x8 &amp;amp; 0xff) &amp;#123;
                            e[&#39;sigBytes&#39;] = g + 0x1;
                            break;
                        &amp;#125;
                    &amp;#125;
                &amp;#125;
            &amp;#125;,
                d[&#39;pad&#39;][&#39;ZeroPadding&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0x19: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./sha1&#39;), a(&#39;./hmac&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./sha1&#39;, &#39;./hmac&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e = d
                    , f = e[&#39;lib&#39;]
                    , g = f[&#39;Base&#39;]
                    , h = f[&#39;WordArray&#39;]
                    , i = e[&#39;algo&#39;]
                    , j = i[&#39;SHA1&#39;]
                    , k = i[&#39;HMAC&#39;]
                    , l = i[&#39;PBKDF2&#39;] = g[&#39;extend&#39;](&amp;#123;
                    &#39;cfg&#39;: g[&#39;extend&#39;](&amp;#123;
                        &#39;keySize&#39;: 0x80 / 0x20,
                        &#39;hasher&#39;: j,
                        &#39;iterations&#39;: 0x1
                    &amp;#125;),
                    &#39;init&#39;: function (m) &amp;#123;
                        this[&#39;cfg&#39;] = this[&#39;cfg&#39;][&#39;extend&#39;](m);
                    &amp;#125;,
                    &#39;compute&#39;: function (m, n) &amp;#123;
                        var o = this[&#39;cfg&#39;]
                            , p = k[&#39;create&#39;](o[&#39;hasher&#39;], m)
                            , q = h[&#39;create&#39;]()
                            , r = h[&#39;create&#39;]([0x1])
                            , s = q[&#39;words&#39;]
                            , t = r[&#39;words&#39;]
                            , u = o[&#39;keySize&#39;]
                            , v = o[&#39;iterations&#39;];
                        while (s[&#39;length&#39;] &amp;lt; u) &amp;#123;
                            var w = p[&#39;update&#39;](n)[&#39;finalize&#39;](r);
                            p[&#39;reset&#39;]();
                            var x = w[&#39;words&#39;]
                                , y = x[&#39;length&#39;]
                                , z = w;
                            for (var A = 0x1; A &amp;lt; v; A++) &amp;#123;
                                z = p[&#39;finalize&#39;](z),
                                    p[&#39;reset&#39;]();
                                var B = z[&#39;words&#39;];
                                for (var D = 0x0; D &amp;lt; y; D++) &amp;#123;
                                    x[D] ^= B[D];
                                &amp;#125;
                            &amp;#125;
                            q[&#39;concat&#39;](w),
                                t[0x0]++;
                        &amp;#125;
                        return q[&#39;sigBytes&#39;] = u * 0x4,
                            q;
                    &amp;#125;
                &amp;#125;);
                e[&#39;PBKDF2&#39;] = function (m, n, o) &amp;#123;
                    return l[&#39;create&#39;](o)[&#39;compute&#39;](m, n);
                &amp;#125;
                ;
            &amp;#125;()),
                d[&#39;PBKDF2&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5,
            &#39;./hmac&#39;: 0xb,
            &#39;./sha1&#39;: 0x1e
        &amp;#125;],
    0x1a: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./enc-base64&#39;), a(&#39;./md5&#39;), a(&#39;./evpkdf&#39;), a(&#39;./cipher-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./enc-base64&#39;, &#39;./md5&#39;, &#39;./evpkdf&#39;, &#39;./cipher-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e = d
                    , f = e[&#39;lib&#39;]
                    , g = f[&#39;StreamCipher&#39;]
                    , h = e[&#39;algo&#39;]
                    , i = []
                    , j = []
                    , k = []
                    , l = h[&#39;RabbitLegacy&#39;] = g[&#39;extend&#39;](&amp;#123;
                    &#39;_doReset&#39;: function () &amp;#123;
                        var n = this[&#39;_key&#39;][&#39;words&#39;]
                            , o = this[&#39;cfg&#39;][&#39;iv&#39;]
                            ,
                            p = this[&#39;_X&#39;] = [n[0x0], n[0x3] &amp;lt;&amp;lt; 0x10 | n[0x2] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x1], n[0x0] &amp;lt;&amp;lt; 0x10 | n[0x3] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x2], n[0x1] &amp;lt;&amp;lt; 0x10 | n[0x0] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x3], n[0x2] &amp;lt;&amp;lt; 0x10 | n[0x1] &amp;gt;&amp;gt;&amp;gt; 0x10]
                            ,
                            q = this[&#39;_C&#39;] = [n[0x2] &amp;lt;&amp;lt; 0x10 | n[0x2] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x0] &amp;amp; 0xffff0000 | n[0x1] &amp;amp; 0xffff, n[0x3] &amp;lt;&amp;lt; 0x10 | n[0x3] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x1] &amp;amp; 0xffff0000 | n[0x2] &amp;amp; 0xffff, n[0x0] &amp;lt;&amp;lt; 0x10 | n[0x0] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x2] &amp;amp; 0xffff0000 | n[0x3] &amp;amp; 0xffff, n[0x1] &amp;lt;&amp;lt; 0x10 | n[0x1] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x3] &amp;amp; 0xffff0000 | n[0x0] &amp;amp; 0xffff];
                        this[&#39;_b&#39;] = 0x0;
                        for (var r = 0x0; r &amp;lt; 0x4; r++) &amp;#123;
                            m[&#39;call&#39;](this);
                        &amp;#125;
                        for (var r = 0x0; r &amp;lt; 0x8; r++) &amp;#123;
                            q[r] ^= p[r + 0x4 &amp;amp; 0x7];
                        &amp;#125;
                        if (o) &amp;#123;
                            var s = o[&#39;words&#39;]
                                , t = s[0x0]
                                , u = s[0x1]
                                , v = (t &amp;lt;&amp;lt; 0x8 | t &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (t &amp;lt;&amp;lt; 0x18 | t &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00
                                , w = (u &amp;lt;&amp;lt; 0x8 | u &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (u &amp;lt;&amp;lt; 0x18 | u &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00
                                , x = v &amp;gt;&amp;gt;&amp;gt; 0x10 | w &amp;amp; 0xffff0000
                                , y = w &amp;lt;&amp;lt; 0x10 | v &amp;amp; 0xffff;
                            q[0x0] ^= v,
                                q[0x1] ^= x,
                                q[0x2] ^= w,
                                q[0x3] ^= y,
                                q[0x4] ^= v,
                                q[0x5] ^= x,
                                q[0x6] ^= w,
                                q[0x7] ^= y;
                            for (var r = 0x0; r &amp;lt; 0x4; r++) &amp;#123;
                                m[&#39;call&#39;](this);
                            &amp;#125;
                        &amp;#125;
                    &amp;#125;,
                    &#39;_doProcessBlock&#39;: function (n, o) &amp;#123;
                        var p = this[&#39;_X&#39;];
                        m[&#39;call&#39;](this),
                            i[0x0] = p[0x0] ^ p[0x5] &amp;gt;&amp;gt;&amp;gt; 0x10 ^ p[0x3] &amp;lt;&amp;lt; 0x10,
                            i[0x1] = p[0x2] ^ p[0x7] &amp;gt;&amp;gt;&amp;gt; 0x10 ^ p[0x5] &amp;lt;&amp;lt; 0x10,
                            i[0x2] = p[0x4] ^ p[0x1] &amp;gt;&amp;gt;&amp;gt; 0x10 ^ p[0x7] &amp;lt;&amp;lt; 0x10,
                            i[0x3] = p[0x6] ^ p[0x3] &amp;gt;&amp;gt;&amp;gt; 0x10 ^ p[0x1] &amp;lt;&amp;lt; 0x10;
                        for (var q = 0x0; q &amp;lt; 0x4; q++) &amp;#123;
                            i[q] = (i[q] &amp;lt;&amp;lt; 0x8 | i[q] &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (i[q] &amp;lt;&amp;lt; 0x18 | i[q] &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00,
                                n[o + q] ^= i[q];
                        &amp;#125;
                    &amp;#125;,
                    &#39;blockSize&#39;: 0x80 / 0x20,
                    &#39;ivSize&#39;: 0x40 / 0x20
                &amp;#125;);

                function m() &amp;#123;
                    var n = this[&#39;_X&#39;]
                        , o = this[&#39;_C&#39;];
                    for (var p = 0x0; p &amp;lt; 0x8; p++) &amp;#123;
                        j[p] = o[p];
                    &amp;#125;
                    o[0x0] = o[0x0] + 0x4d34d34d + this[&#39;_b&#39;] | 0x0,
                        o[0x1] = o[0x1] + 0xd34d34d3 + (o[0x0] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x0] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x2] = o[0x2] + 0x34d34d34 + (o[0x1] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x1] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x3] = o[0x3] + 0x4d34d34d + (o[0x2] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x2] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x4] = o[0x4] + 0xd34d34d3 + (o[0x3] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x3] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x5] = o[0x5] + 0x34d34d34 + (o[0x4] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x4] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x6] = o[0x6] + 0x4d34d34d + (o[0x5] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x5] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x7] = o[0x7] + 0xd34d34d3 + (o[0x6] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x6] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        this[&#39;_b&#39;] = o[0x7] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x7] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0;
                    for (var p = 0x0; p &amp;lt; 0x8; p++) &amp;#123;
                        var q = n[p] + o[p]
                            , r = q &amp;amp; 0xffff
                            , s = q &amp;gt;&amp;gt;&amp;gt; 0x10
                            , t = ((r * r &amp;gt;&amp;gt;&amp;gt; 0x11) + r * s &amp;gt;&amp;gt;&amp;gt; 0xf) + s * s
                            , u = ((q &amp;amp; 0xffff0000) * q | 0x0) + ((q &amp;amp; 0xffff) * q | 0x0);
                        k[p] = t ^ u;
                    &amp;#125;
                    n[0x0] = k[0x0] + (k[0x7] &amp;lt;&amp;lt; 0x10 | k[0x7] &amp;gt;&amp;gt;&amp;gt; 0x10) + (k[0x6] &amp;lt;&amp;lt; 0x10 | k[0x6] &amp;gt;&amp;gt;&amp;gt; 0x10) | 0x0,
                        n[0x1] = k[0x1] + (k[0x0] &amp;lt;&amp;lt; 0x8 | k[0x0] &amp;gt;&amp;gt;&amp;gt; 0x18) + k[0x7] | 0x0,
                        n[0x2] = k[0x2] + (k[0x1] &amp;lt;&amp;lt; 0x10 | k[0x1] &amp;gt;&amp;gt;&amp;gt; 0x10) + (k[0x0] &amp;lt;&amp;lt; 0x10 | k[0x0] &amp;gt;&amp;gt;&amp;gt; 0x10) | 0x0,
                        n[0x3] = k[0x3] + (k[0x2] &amp;lt;&amp;lt; 0x8 | k[0x2] &amp;gt;&amp;gt;&amp;gt; 0x18) + k[0x1] | 0x0,
                        n[0x4] = k[0x4] + (k[0x3] &amp;lt;&amp;lt; 0x10 | k[0x3] &amp;gt;&amp;gt;&amp;gt; 0x10) + (k[0x2] &amp;lt;&amp;lt; 0x10 | k[0x2] &amp;gt;&amp;gt;&amp;gt; 0x10) | 0x0,
                        n[0x5] = k[0x5] + (k[0x4] &amp;lt;&amp;lt; 0x8 | k[0x4] &amp;gt;&amp;gt;&amp;gt; 0x18) + k[0x3] | 0x0,
                        n[0x6] = k[0x6] + (k[0x5] &amp;lt;&amp;lt; 0x10 | k[0x5] &amp;gt;&amp;gt;&amp;gt; 0x10) + (k[0x4] &amp;lt;&amp;lt; 0x10 | k[0x4] &amp;gt;&amp;gt;&amp;gt; 0x10) | 0x0,
                        n[0x7] = k[0x7] + (k[0x6] &amp;lt;&amp;lt; 0x8 | k[0x6] &amp;gt;&amp;gt;&amp;gt; 0x18) + k[0x5] | 0x0;
                &amp;#125;

                e[&#39;RabbitLegacy&#39;] = g[&#39;_createHelper&#39;](l);
            &amp;#125;()),
                d[&#39;RabbitLegacy&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5,
            &#39;./enc-base64&#39;: 0x6,
            &#39;./evpkdf&#39;: 0x9,
            &#39;./md5&#39;: 0xe
        &amp;#125;],
    0x1b: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./enc-base64&#39;), a(&#39;./md5&#39;), a(&#39;./evpkdf&#39;), a(&#39;./cipher-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./enc-base64&#39;, &#39;./md5&#39;, &#39;./evpkdf&#39;, &#39;./cipher-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e = d
                    , f = e[&#39;lib&#39;]
                    , g = f[&#39;StreamCipher&#39;]
                    , h = e[&#39;algo&#39;]
                    , i = []
                    , j = []
                    , k = []
                    , l = h[&#39;Rabbit&#39;] = g[&#39;extend&#39;](&amp;#123;
                    &#39;_doReset&#39;: function () &amp;#123;
                        var n = this[&#39;_key&#39;][&#39;words&#39;]
                            , o = this[&#39;cfg&#39;][&#39;iv&#39;];
                        for (var p = 0x0; p &amp;lt; 0x4; p++) &amp;#123;
                            n[p] = (n[p] &amp;lt;&amp;lt; 0x8 | n[p] &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (n[p] &amp;lt;&amp;lt; 0x18 | n[p] &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00;
                        &amp;#125;
                        var q = this[&#39;_X&#39;] = [n[0x0], n[0x3] &amp;lt;&amp;lt; 0x10 | n[0x2] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x1], n[0x0] &amp;lt;&amp;lt; 0x10 | n[0x3] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x2], n[0x1] &amp;lt;&amp;lt; 0x10 | n[0x0] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x3], n[0x2] &amp;lt;&amp;lt; 0x10 | n[0x1] &amp;gt;&amp;gt;&amp;gt; 0x10]
                            ,
                            r = this[&#39;_C&#39;] = [n[0x2] &amp;lt;&amp;lt; 0x10 | n[0x2] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x0] &amp;amp; 0xffff0000 | n[0x1] &amp;amp; 0xffff, n[0x3] &amp;lt;&amp;lt; 0x10 | n[0x3] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x1] &amp;amp; 0xffff0000 | n[0x2] &amp;amp; 0xffff, n[0x0] &amp;lt;&amp;lt; 0x10 | n[0x0] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x2] &amp;amp; 0xffff0000 | n[0x3] &amp;amp; 0xffff, n[0x1] &amp;lt;&amp;lt; 0x10 | n[0x1] &amp;gt;&amp;gt;&amp;gt; 0x10, n[0x3] &amp;amp; 0xffff0000 | n[0x0] &amp;amp; 0xffff];
                        this[&#39;_b&#39;] = 0x0;
                        for (var p = 0x0; p &amp;lt; 0x4; p++) &amp;#123;
                            m[&#39;call&#39;](this);
                        &amp;#125;
                        for (var p = 0x0; p &amp;lt; 0x8; p++) &amp;#123;
                            r[p] ^= q[p + 0x4 &amp;amp; 0x7];
                        &amp;#125;
                        if (o) &amp;#123;
                            var s = o[&#39;words&#39;]
                                , t = s[0x0]
                                , u = s[0x1]
                                , v = (t &amp;lt;&amp;lt; 0x8 | t &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (t &amp;lt;&amp;lt; 0x18 | t &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00
                                , w = (u &amp;lt;&amp;lt; 0x8 | u &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (u &amp;lt;&amp;lt; 0x18 | u &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00
                                , x = v &amp;gt;&amp;gt;&amp;gt; 0x10 | w &amp;amp; 0xffff0000
                                , y = w &amp;lt;&amp;lt; 0x10 | v &amp;amp; 0xffff;
                            r[0x0] ^= v,
                                r[0x1] ^= x,
                                r[0x2] ^= w,
                                r[0x3] ^= y,
                                r[0x4] ^= v,
                                r[0x5] ^= x,
                                r[0x6] ^= w,
                                r[0x7] ^= y;
                            for (var p = 0x0; p &amp;lt; 0x4; p++) &amp;#123;
                                m[&#39;call&#39;](this);
                            &amp;#125;
                        &amp;#125;
                    &amp;#125;,
                    &#39;_doProcessBlock&#39;: function (n, o) &amp;#123;
                        var p = this[&#39;_X&#39;];
                        m[&#39;call&#39;](this),
                            i[0x0] = p[0x0] ^ p[0x5] &amp;gt;&amp;gt;&amp;gt; 0x10 ^ p[0x3] &amp;lt;&amp;lt; 0x10,
                            i[0x1] = p[0x2] ^ p[0x7] &amp;gt;&amp;gt;&amp;gt; 0x10 ^ p[0x5] &amp;lt;&amp;lt; 0x10,
                            i[0x2] = p[0x4] ^ p[0x1] &amp;gt;&amp;gt;&amp;gt; 0x10 ^ p[0x7] &amp;lt;&amp;lt; 0x10,
                            i[0x3] = p[0x6] ^ p[0x3] &amp;gt;&amp;gt;&amp;gt; 0x10 ^ p[0x1] &amp;lt;&amp;lt; 0x10;
                        for (var q = 0x0; q &amp;lt; 0x4; q++) &amp;#123;
                            i[q] = (i[q] &amp;lt;&amp;lt; 0x8 | i[q] &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (i[q] &amp;lt;&amp;lt; 0x18 | i[q] &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00,
                                n[o + q] ^= i[q];
                        &amp;#125;
                    &amp;#125;,
                    &#39;blockSize&#39;: 0x80 / 0x20,
                    &#39;ivSize&#39;: 0x40 / 0x20
                &amp;#125;);

                function m() &amp;#123;
                    var n = this[&#39;_X&#39;]
                        , o = this[&#39;_C&#39;];
                    for (var p = 0x0; p &amp;lt; 0x8; p++) &amp;#123;
                        j[p] = o[p];
                    &amp;#125;
                    o[0x0] = o[0x0] + 0x4d34d34d + this[&#39;_b&#39;] | 0x0,
                        o[0x1] = o[0x1] + 0xd34d34d3 + (o[0x0] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x0] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x2] = o[0x2] + 0x34d34d34 + (o[0x1] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x1] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x3] = o[0x3] + 0x4d34d34d + (o[0x2] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x2] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x4] = o[0x4] + 0xd34d34d3 + (o[0x3] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x3] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x5] = o[0x5] + 0x34d34d34 + (o[0x4] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x4] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x6] = o[0x6] + 0x4d34d34d + (o[0x5] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x5] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        o[0x7] = o[0x7] + 0xd34d34d3 + (o[0x6] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x6] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                        this[&#39;_b&#39;] = o[0x7] &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; j[0x7] &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0;
                    for (var p = 0x0; p &amp;lt; 0x8; p++) &amp;#123;
                        var q = n[p] + o[p]
                            , r = q &amp;amp; 0xffff
                            , s = q &amp;gt;&amp;gt;&amp;gt; 0x10
                            , t = ((r * r &amp;gt;&amp;gt;&amp;gt; 0x11) + r * s &amp;gt;&amp;gt;&amp;gt; 0xf) + s * s
                            , u = ((q &amp;amp; 0xffff0000) * q | 0x0) + ((q &amp;amp; 0xffff) * q | 0x0);
                        k[p] = t ^ u;
                    &amp;#125;
                    n[0x0] = k[0x0] + (k[0x7] &amp;lt;&amp;lt; 0x10 | k[0x7] &amp;gt;&amp;gt;&amp;gt; 0x10) + (k[0x6] &amp;lt;&amp;lt; 0x10 | k[0x6] &amp;gt;&amp;gt;&amp;gt; 0x10) | 0x0,
                        n[0x1] = k[0x1] + (k[0x0] &amp;lt;&amp;lt; 0x8 | k[0x0] &amp;gt;&amp;gt;&amp;gt; 0x18) + k[0x7] | 0x0,
                        n[0x2] = k[0x2] + (k[0x1] &amp;lt;&amp;lt; 0x10 | k[0x1] &amp;gt;&amp;gt;&amp;gt; 0x10) + (k[0x0] &amp;lt;&amp;lt; 0x10 | k[0x0] &amp;gt;&amp;gt;&amp;gt; 0x10) | 0x0,
                        n[0x3] = k[0x3] + (k[0x2] &amp;lt;&amp;lt; 0x8 | k[0x2] &amp;gt;&amp;gt;&amp;gt; 0x18) + k[0x1] | 0x0,
                        n[0x4] = k[0x4] + (k[0x3] &amp;lt;&amp;lt; 0x10 | k[0x3] &amp;gt;&amp;gt;&amp;gt; 0x10) + (k[0x2] &amp;lt;&amp;lt; 0x10 | k[0x2] &amp;gt;&amp;gt;&amp;gt; 0x10) | 0x0,
                        n[0x5] = k[0x5] + (k[0x4] &amp;lt;&amp;lt; 0x8 | k[0x4] &amp;gt;&amp;gt;&amp;gt; 0x18) + k[0x3] | 0x0,
                        n[0x6] = k[0x6] + (k[0x5] &amp;lt;&amp;lt; 0x10 | k[0x5] &amp;gt;&amp;gt;&amp;gt; 0x10) + (k[0x4] &amp;lt;&amp;lt; 0x10 | k[0x4] &amp;gt;&amp;gt;&amp;gt; 0x10) | 0x0,
                        n[0x7] = k[0x7] + (k[0x6] &amp;lt;&amp;lt; 0x8 | k[0x6] &amp;gt;&amp;gt;&amp;gt; 0x18) + k[0x5] | 0x0;
                &amp;#125;

                e[&#39;Rabbit&#39;] = g[&#39;_createHelper&#39;](l);
            &amp;#125;()),
                d[&#39;Rabbit&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5,
            &#39;./enc-base64&#39;: 0x6,
            &#39;./evpkdf&#39;: 0x9,
            &#39;./md5&#39;: 0xe
        &amp;#125;],
    0x1c: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./enc-base64&#39;), a(&#39;./md5&#39;), a(&#39;./evpkdf&#39;), a(&#39;./cipher-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./enc-base64&#39;, &#39;./md5&#39;, &#39;./evpkdf&#39;, &#39;./cipher-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e = d
                    , f = e[&#39;lib&#39;]
                    , g = f[&#39;StreamCipher&#39;]
                    , h = e[&#39;algo&#39;]
                    , i = h[&#39;RC4&#39;] = g[&#39;extend&#39;](&amp;#123;
                    &#39;_doReset&#39;: function () &amp;#123;
                        var l = this[&#39;_key&#39;]
                            , m = l[&#39;words&#39;]
                            , n = l[&#39;sigBytes&#39;]
                            , o = this[&#39;_S&#39;] = [];
                        for (var p = 0x0; p &amp;lt; 0x100; p++) &amp;#123;
                            o[p] = p;
                        &amp;#125;
                        for (var p = 0x0, q = 0x0; p &amp;lt; 0x100; p++) &amp;#123;
                            var r = p % n
                                , s = m[r &amp;gt;&amp;gt;&amp;gt; 0x2] &amp;gt;&amp;gt;&amp;gt; 0x18 - r % 0x4 * 0x8 &amp;amp; 0xff;
                            q = (q + o[p] + s) % 0x100;
                            var u = o[p];
                            o[p] = o[q],
                                o[q] = u;
                        &amp;#125;
                        this[&#39;_i&#39;] = this[&#39;_j&#39;] = 0x0;
                    &amp;#125;,
                    &#39;_doProcessBlock&#39;: function (l, m) &amp;#123;
                        l[m] ^= j[&#39;call&#39;](this);
                    &amp;#125;,
                    &#39;keySize&#39;: 0x100 / 0x20,
                    &#39;ivSize&#39;: 0x0
                &amp;#125;);

                function j() &amp;#123;
                    var l = this[&#39;_S&#39;]
                        , m = this[&#39;_i&#39;]
                        , o = this[&#39;_j&#39;]
                        , p = 0x0;
                    for (var q = 0x0; q &amp;lt; 0x4; q++) &amp;#123;
                        m = (m + 0x1) % 0x100,
                            o = (o + l[m]) % 0x100;
                        var r = l[m];
                        l[m] = l[o],
                            l[o] = r,
                            p |= l[(l[m] + l[o]) % 0x100] &amp;lt;&amp;lt; 0x18 - q * 0x8;
                    &amp;#125;
                    return this[&#39;_i&#39;] = m,
                        this[&#39;_j&#39;] = o,
                        p;
                &amp;#125;

                e[&#39;RC4&#39;] = g[&#39;_createHelper&#39;](i);
                var k = h[&#39;RC4Drop&#39;] = i[&#39;extend&#39;](&amp;#123;
                    &#39;cfg&#39;: i[&#39;cfg&#39;][&#39;extend&#39;](&amp;#123;
                        &#39;drop&#39;: 0xc0
                    &amp;#125;),
                    &#39;_doReset&#39;: function () &amp;#123;
                        i[&#39;_doReset&#39;][&#39;call&#39;](this);
                        for (var l = this[&#39;cfg&#39;][&#39;drop&#39;]; l &amp;gt; 0x0; l--) &amp;#123;
                            j[&#39;call&#39;](this);
                        &amp;#125;
                    &amp;#125;
                &amp;#125;);
                e[&#39;RC4Drop&#39;] = g[&#39;_createHelper&#39;](k);
            &amp;#125;()),
                d[&#39;RC4&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5,
            &#39;./enc-base64&#39;: 0x6,
            &#39;./evpkdf&#39;: 0x9,
            &#39;./md5&#39;: 0xe
        &amp;#125;],
    0x1d: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return function (e) &amp;#123;
                var f = d
                    , g = f[&#39;lib&#39;]
                    , h = g[&#39;WordArray&#39;]
                    , i = g[&#39;Hasher&#39;]
                    , j = f[&#39;algo&#39;]
                    ,
                    k = h[&#39;create&#39;]([0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc, 0xd, 0xe, 0xf, 0x7, 0x4, 0xd, 0x1, 0xa, 0x6, 0xf, 0x3, 0xc, 0x0, 0x9, 0x5, 0x2, 0xe, 0xb, 0x8, 0x3, 0xa, 0xe, 0x4, 0x9, 0xf, 0x8, 0x1, 0x2, 0x7, 0x0, 0x6, 0xd, 0xb, 0x5, 0xc, 0x1, 0x9, 0xb, 0xa, 0x0, 0x8, 0xc, 0x4, 0xd, 0x3, 0x7, 0xf, 0xe, 0x5, 0x6, 0x2, 0x4, 0x0, 0x5, 0x9, 0x7, 0xc, 0x2, 0xa, 0xe, 0x1, 0x3, 0x8, 0xb, 0x6, 0xf, 0xd])
                    ,
                    l = h[&#39;create&#39;]([0x5, 0xe, 0x7, 0x0, 0x9, 0x2, 0xb, 0x4, 0xd, 0x6, 0xf, 0x8, 0x1, 0xa, 0x3, 0xc, 0x6, 0xb, 0x3, 0x7, 0x0, 0xd, 0x5, 0xa, 0xe, 0xf, 0x8, 0xc, 0x4, 0x9, 0x1, 0x2, 0xf, 0x5, 0x1, 0x3, 0x7, 0xe, 0x6, 0x9, 0xb, 0x8, 0xc, 0x2, 0xa, 0x0, 0x4, 0xd, 0x8, 0x6, 0x4, 0x1, 0x3, 0xb, 0xf, 0x0, 0x5, 0xc, 0x2, 0xd, 0x9, 0x7, 0xa, 0xe, 0xc, 0xf, 0xa, 0x4, 0x1, 0x5, 0x8, 0x7, 0x6, 0x2, 0xd, 0xe, 0x0, 0x3, 0x9, 0xb])
                    ,
                    m = h[&#39;create&#39;]([0xb, 0xe, 0xf, 0xc, 0x5, 0x8, 0x7, 0x9, 0xb, 0xd, 0xe, 0xf, 0x6, 0x7, 0x9, 0x8, 0x7, 0x6, 0x8, 0xd, 0xb, 0x9, 0x7, 0xf, 0x7, 0xc, 0xf, 0x9, 0xb, 0x7, 0xd, 0xc, 0xb, 0xd, 0x6, 0x7, 0xe, 0x9, 0xd, 0xf, 0xe, 0x8, 0xd, 0x6, 0x5, 0xc, 0x7, 0x5, 0xb, 0xc, 0xe, 0xf, 0xe, 0xf, 0x9, 0x8, 0x9, 0xe, 0x5, 0x6, 0x8, 0x6, 0x5, 0xc, 0x9, 0xf, 0x5, 0xb, 0x6, 0x8, 0xd, 0xc, 0x5, 0xc, 0xd, 0xe, 0xb, 0x8, 0x5, 0x6])
                    ,
                    n = h[&#39;create&#39;]([0x8, 0x9, 0x9, 0xb, 0xd, 0xf, 0xf, 0x5, 0x7, 0x7, 0x8, 0xb, 0xe, 0xe, 0xc, 0x6, 0x9, 0xd, 0xf, 0x7, 0xc, 0x8, 0x9, 0xb, 0x7, 0x7, 0xc, 0x7, 0x6, 0xf, 0xd, 0xb, 0x9, 0x7, 0xf, 0xb, 0x8, 0x6, 0x6, 0xe, 0xc, 0xd, 0x5, 0xe, 0xd, 0xd, 0x7, 0x5, 0xf, 0x5, 0x8, 0xb, 0xe, 0xe, 0x6, 0xe, 0x6, 0x9, 0xc, 0x9, 0xc, 0x5, 0xf, 0x8, 0x8, 0x5, 0xc, 0x9, 0xc, 0x5, 0xe, 0x6, 0x8, 0xd, 0x6, 0x5, 0xf, 0xd, 0xb, 0xb])
                    , o = h[&#39;create&#39;]([0x0, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e])
                    , p = h[&#39;create&#39;]([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x0])
                    , q = j[&#39;RIPEMD160&#39;] = i[&#39;extend&#39;](&amp;#123;
                        &#39;_doReset&#39;: function () &amp;#123;
                            this[&#39;_hash&#39;] = h[&#39;create&#39;]([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0]);
                        &amp;#125;,
                        &#39;_doProcessBlock&#39;: function (x, y) &amp;#123;
                            for (var z = 0x0; z &amp;lt; 0x10; z++) &amp;#123;
                                var A = y + z
                                    , B = x[A];
                                x[A] = (B &amp;lt;&amp;lt; 0x8 | B &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (B &amp;lt;&amp;lt; 0x18 | B &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00;
                            &amp;#125;
                            var D = this[&#39;_hash&#39;][&#39;words&#39;], E = o[&#39;words&#39;], F = p[&#39;words&#39;], G = k[&#39;words&#39;], I = l[&#39;words&#39;],
                                J = m[&#39;words&#39;], K = n[&#39;words&#39;], L, N, O, P, Q, R, S, T, U, V;
                            R = L = D[0x0],
                                S = N = D[0x1],
                                T = O = D[0x2],
                                U = P = D[0x3],
                                V = Q = D[0x4];
                            var W;
                            for (var z = 0x0; z &amp;lt; 0x50; z += 0x1) &amp;#123;
                                W = L + x[y + G[z]] | 0x0;
                                if (z &amp;lt; 0x10)
                                    W += r(N, O, P) + E[0x0];
                                else &amp;#123;
                                    if (z &amp;lt; 0x20)
                                        W += s(N, O, P) + E[0x1];
                                    else &amp;#123;
                                        if (z &amp;lt; 0x30)
                                            W += t(N, O, P) + E[0x2];
                                        else
                                            z &amp;lt; 0x40 ? W += u(N, O, P) + E[0x3] : W += v(N, O, P) + E[0x4];
                                    &amp;#125;
                                &amp;#125;
                                W = W | 0x0,
                                    W = w(W, J[z]),
                                    W = W + Q | 0x0,
                                    L = Q,
                                    Q = P,
                                    P = w(O, 0xa),
                                    O = N,
                                    N = W,
                                    W = R + x[y + I[z]] | 0x0;
                                if (z &amp;lt; 0x10)
                                    W += v(S, T, U) + F[0x0];
                                else &amp;#123;
                                    if (z &amp;lt; 0x20)
                                        W += u(S, T, U) + F[0x1];
                                    else &amp;#123;
                                        if (z &amp;lt; 0x30)
                                            W += t(S, T, U) + F[0x2];
                                        else
                                            z &amp;lt; 0x40 ? W += s(S, T, U) + F[0x3] : W += r(S, T, U) + F[0x4];
                                    &amp;#125;
                                &amp;#125;
                                W = W | 0x0,
                                    W = w(W, K[z]),
                                    W = W + V | 0x0,
                                    R = V,
                                    V = U,
                                    U = w(T, 0xa),
                                    T = S,
                                    S = W;
                            &amp;#125;
                            W = D[0x1] + O + U | 0x0,
                                D[0x1] = D[0x2] + P + V | 0x0,
                                D[0x2] = D[0x3] + Q + R | 0x0,
                                D[0x3] = D[0x4] + L + S | 0x0,
                                D[0x4] = D[0x0] + N + T | 0x0,
                                D[0x0] = W;
                        &amp;#125;,
                        &#39;_doFinalize&#39;: function () &amp;#123;
                            var x = this[&#39;_data&#39;]
                                , y = x[&#39;words&#39;]
                                , z = this[&#39;_nDataBytes&#39;] * 0x8
                                , A = x[&#39;sigBytes&#39;] * 0x8;
                            y[A &amp;gt;&amp;gt;&amp;gt; 0x5] |= 0x80 &amp;lt;&amp;lt; 0x18 - A % 0x20,
                                y[(A + 0x40 &amp;gt;&amp;gt;&amp;gt; 0x9 &amp;lt;&amp;lt; 0x4) + 0xe] = (z &amp;lt;&amp;lt; 0x8 | z &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (z &amp;lt;&amp;lt; 0x18 | z &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00,
                                x[&#39;sigBytes&#39;] = (y[&#39;length&#39;] + 0x1) * 0x4,
                                this[&#39;_process&#39;]();
                            var B = this[&#39;_hash&#39;]
                                , D = B[&#39;words&#39;];
                            for (var E = 0x0; E &amp;lt; 0x5; E++) &amp;#123;
                                var F = D[E];
                                D[E] = (F &amp;lt;&amp;lt; 0x8 | F &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (F &amp;lt;&amp;lt; 0x18 | F &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00;
                            &amp;#125;
                            return B;
                        &amp;#125;,
                        &#39;clone&#39;: function () &amp;#123;
                            var x = i[&#39;clone&#39;][&#39;call&#39;](this);
                            return x[&#39;_hash&#39;] = this[&#39;_hash&#39;][&#39;clone&#39;](),
                                x;
                        &amp;#125;
                    &amp;#125;);

                function r(A, B, D) &amp;#123;
                    return A ^ B ^ D;
                &amp;#125;

                function s(A, B, D) &amp;#123;
                    return A &amp;amp; B | ~A &amp;amp; D;
                &amp;#125;

                function t(A, B, D) &amp;#123;
                    return (A | ~B) ^ D;
                &amp;#125;

                function u(A, B, D) &amp;#123;
                    return A &amp;amp; D | B &amp;amp; ~D;
                &amp;#125;

                function v(A, B, D) &amp;#123;
                    return A ^ (B | ~D);
                &amp;#125;

                function w(y, z) &amp;#123;
                    return y &amp;lt;&amp;lt; z | y &amp;gt;&amp;gt;&amp;gt; 0x20 - z;
                &amp;#125;

                f[&#39;RIPEMD160&#39;] = i[&#39;_createHelper&#39;](q),
                    f[&#39;HmacRIPEMD160&#39;] = i[&#39;_createHmacHelper&#39;](q);
            &amp;#125;(Math),
                d[&#39;RIPEMD160&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0x1e: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e = d
                    , f = e[&#39;lib&#39;]
                    , g = f[&#39;WordArray&#39;]
                    , h = f[&#39;Hasher&#39;]
                    , i = e[&#39;algo&#39;]
                    , j = []
                    , k = i[&#39;SHA1&#39;] = h[&#39;extend&#39;](&amp;#123;
                    &#39;_doReset&#39;: function () &amp;#123;
                        this[&#39;_hash&#39;] = new g[&#39;init&#39;]([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0]);
                    &amp;#125;,
                    &#39;_doProcessBlock&#39;: function (l, m) &amp;#123;
                        var o = this[&#39;_hash&#39;][&#39;words&#39;]
                            , p = o[0x0]
                            , q = o[0x1]
                            , r = o[0x2]
                            , s = o[0x3]
                            , u = o[0x4];
                        for (var v = 0x0; v &amp;lt; 0x50; v++) &amp;#123;
                            if (v &amp;lt; 0x10)
                                j[v] = l[m + v] | 0x0;
                            else &amp;#123;
                                var w = j[v - 0x3] ^ j[v - 0x8] ^ j[v - 0xe] ^ j[v - 0x10];
                                j[v] = w &amp;lt;&amp;lt; 0x1 | w &amp;gt;&amp;gt;&amp;gt; 0x1f;
                            &amp;#125;
                            var x = (p &amp;lt;&amp;lt; 0x5 | p &amp;gt;&amp;gt;&amp;gt; 0x1b) + u + j[v];
                            if (v &amp;lt; 0x14)
                                x += (q &amp;amp; r | ~q &amp;amp; s) + 0x5a827999;
                            else &amp;#123;
                                if (v &amp;lt; 0x28)
                                    x += (q ^ r ^ s) + 0x6ed9eba1;
                                else
                                    v &amp;lt; 0x3c ? x += (q &amp;amp; r | q &amp;amp; s | r &amp;amp; s) - 0x70e44324 : x += (q ^ r ^ s) - 0x359d3e2a;
                            &amp;#125;
                            u = s,
                                s = r,
                                r = q &amp;lt;&amp;lt; 0x1e | q &amp;gt;&amp;gt;&amp;gt; 0x2,
                                q = p,
                                p = x;
                        &amp;#125;
                        o[0x0] = o[0x0] + p | 0x0,
                            o[0x1] = o[0x1] + q | 0x0,
                            o[0x2] = o[0x2] + r | 0x0,
                            o[0x3] = o[0x3] + s | 0x0,
                            o[0x4] = o[0x4] + u | 0x0;
                    &amp;#125;,
                    &#39;_doFinalize&#39;: function () &amp;#123;
                        var l = this[&#39;_data&#39;]
                            , m = l[&#39;words&#39;]
                            , n = this[&#39;_nDataBytes&#39;] * 0x8
                            , o = l[&#39;sigBytes&#39;] * 0x8;
                        return m[o &amp;gt;&amp;gt;&amp;gt; 0x5] |= 0x80 &amp;lt;&amp;lt; 0x18 - o % 0x20,
                            m[(o + 0x40 &amp;gt;&amp;gt;&amp;gt; 0x9 &amp;lt;&amp;lt; 0x4) + 0xe] = Math[&#39;floor&#39;](n / 0x100000000),
                            m[(o + 0x40 &amp;gt;&amp;gt;&amp;gt; 0x9 &amp;lt;&amp;lt; 0x4) + 0xf] = n,
                            l[&#39;sigBytes&#39;] = m[&#39;length&#39;] * 0x4,
                            this[&#39;_process&#39;](),
                            this[&#39;_hash&#39;];
                    &amp;#125;,
                    &#39;clone&#39;: function () &amp;#123;
                        var l = h[&#39;clone&#39;][&#39;call&#39;](this);
                        return l[&#39;_hash&#39;] = this[&#39;_hash&#39;][&#39;clone&#39;](),
                            l;
                    &amp;#125;
                &amp;#125;);
                e[&#39;SHA1&#39;] = h[&#39;_createHelper&#39;](k),
                    e[&#39;HmacSHA1&#39;] = h[&#39;_createHmacHelper&#39;](k);
            &amp;#125;()),
                d[&#39;SHA1&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0x1f: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./sha256&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./sha256&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e = d
                    , f = e[&#39;lib&#39;]
                    , g = f[&#39;WordArray&#39;]
                    , h = e[&#39;algo&#39;]
                    , i = h[&#39;SHA256&#39;]
                    , j = h[&#39;SHA224&#39;] = i[&#39;extend&#39;](&amp;#123;
                    &#39;_doReset&#39;: function () &amp;#123;
                        this[&#39;_hash&#39;] = new g[&#39;init&#39;]([0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4]);
                    &amp;#125;,
                    &#39;_doFinalize&#39;: function () &amp;#123;
                        var k = i[&#39;_doFinalize&#39;][&#39;call&#39;](this);
                        return k[&#39;sigBytes&#39;] -= 0x4,
                            k;
                    &amp;#125;
                &amp;#125;);
                e[&#39;SHA224&#39;] = i[&#39;_createHelper&#39;](j),
                    e[&#39;HmacSHA224&#39;] = i[&#39;_createHmacHelper&#39;](j);
            &amp;#125;()),
                d[&#39;SHA224&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5,
            &#39;./sha256&#39;: 0x20
        &amp;#125;],
    0x20: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return function (e) &amp;#123;
                var f = d
                    , g = f[&#39;lib&#39;]
                    , h = g[&#39;WordArray&#39;]
                    , i = g[&#39;Hasher&#39;]
                    , j = f[&#39;algo&#39;]
                    , k = []
                    , l = [];
                (function () &amp;#123;
                    function o(s) &amp;#123;
                        var t = e[&#39;sqrt&#39;](s);
                        for (var u = 0x2; u &amp;lt;= t; u++) &amp;#123;
                            if (!(s % u))
                                return ![];
                        &amp;#125;
                        return !![];
                    &amp;#125;

                    function p(s) &amp;#123;
                        return (s - (s | 0x0)) * 0x100000000 | 0x0;
                    &amp;#125;

                    var q = 0x2
                        , r = 0x0;
                    while (r &amp;lt; 0x40) &amp;#123;
                        o(q) &amp;amp;&amp;amp; (r &amp;lt; 0x8 &amp;amp;&amp;amp; (k[r] = p(e[&#39;pow&#39;](q, 0x1 / 0x2))),
                            l[r] = p(e[&#39;pow&#39;](q, 0x1 / 0x3)),
                            r++),
                            q++;
                    &amp;#125;
                &amp;#125;());
                var m = []
                    , n = j[&#39;SHA256&#39;] = i[&#39;extend&#39;](&amp;#123;
                    &#39;_doReset&#39;: function () &amp;#123;
                        this[&#39;_hash&#39;] = new h[&#39;init&#39;](k[&#39;slice&#39;](0x0));
                    &amp;#125;,
                    &#39;_doProcessBlock&#39;: function (o, p) &amp;#123;
                        var q = this[&#39;_hash&#39;][&#39;words&#39;]
                            , r = q[0x0]
                            , s = q[0x1]
                            , t = q[0x2]
                            , u = q[0x3]
                            , v = q[0x4]
                            , w = q[0x5]
                            , x = q[0x6]
                            , y = q[0x7];
                        for (var z = 0x0; z &amp;lt; 0x40; z++) &amp;#123;
                            if (z &amp;lt; 0x10)
                                m[z] = o[p + z] | 0x0;
                            else &amp;#123;
                                var A = m[z - 0xf]
                                    , B = (A &amp;lt;&amp;lt; 0x19 | A &amp;gt;&amp;gt;&amp;gt; 0x7) ^ (A &amp;lt;&amp;lt; 0xe | A &amp;gt;&amp;gt;&amp;gt; 0x12) ^ A &amp;gt;&amp;gt;&amp;gt; 0x3
                                    , D = m[z - 0x2]
                                    , E = (D &amp;lt;&amp;lt; 0xf | D &amp;gt;&amp;gt;&amp;gt; 0x11) ^ (D &amp;lt;&amp;lt; 0xd | D &amp;gt;&amp;gt;&amp;gt; 0x13) ^ D &amp;gt;&amp;gt;&amp;gt; 0xa;
                                m[z] = B + m[z - 0x7] + E + m[z - 0x10];
                            &amp;#125;
                            var F = v &amp;amp; w ^ ~v &amp;amp; x
                                , G = r &amp;amp; s ^ r &amp;amp; t ^ s &amp;amp; t
                                , I = (r &amp;lt;&amp;lt; 0x1e | r &amp;gt;&amp;gt;&amp;gt; 0x2) ^ (r &amp;lt;&amp;lt; 0x13 | r &amp;gt;&amp;gt;&amp;gt; 0xd) ^ (r &amp;lt;&amp;lt; 0xa | r &amp;gt;&amp;gt;&amp;gt; 0x16)
                                , J = (v &amp;lt;&amp;lt; 0x1a | v &amp;gt;&amp;gt;&amp;gt; 0x6) ^ (v &amp;lt;&amp;lt; 0x15 | v &amp;gt;&amp;gt;&amp;gt; 0xb) ^ (v &amp;lt;&amp;lt; 0x7 | v &amp;gt;&amp;gt;&amp;gt; 0x19)
                                , L = y + J + F + l[z] + m[z]
                                , N = I + G;
                            y = x,
                                x = w,
                                w = v,
                                v = u + L | 0x0,
                                u = t,
                                t = s,
                                s = r,
                                r = L + N | 0x0;
                        &amp;#125;
                        q[0x0] = q[0x0] + r | 0x0,
                            q[0x1] = q[0x1] + s | 0x0,
                            q[0x2] = q[0x2] + t | 0x0,
                            q[0x3] = q[0x3] + u | 0x0,
                            q[0x4] = q[0x4] + v | 0x0,
                            q[0x5] = q[0x5] + w | 0x0,
                            q[0x6] = q[0x6] + x | 0x0,
                            q[0x7] = q[0x7] + y | 0x0;
                    &amp;#125;,
                    &#39;_doFinalize&#39;: function () &amp;#123;
                        var o = this[&#39;_data&#39;]
                            , p = o[&#39;words&#39;]
                            , q = this[&#39;_nDataBytes&#39;] * 0x8
                            , r = o[&#39;sigBytes&#39;] * 0x8;
                        return p[r &amp;gt;&amp;gt;&amp;gt; 0x5] |= 0x80 &amp;lt;&amp;lt; 0x18 - r % 0x20,
                            p[(r + 0x40 &amp;gt;&amp;gt;&amp;gt; 0x9 &amp;lt;&amp;lt; 0x4) + 0xe] = e[&#39;floor&#39;](q / 0x100000000),
                            p[(r + 0x40 &amp;gt;&amp;gt;&amp;gt; 0x9 &amp;lt;&amp;lt; 0x4) + 0xf] = q,
                            o[&#39;sigBytes&#39;] = p[&#39;length&#39;] * 0x4,
                            this[&#39;_process&#39;](),
                            this[&#39;_hash&#39;];
                    &amp;#125;,
                    &#39;clone&#39;: function () &amp;#123;
                        var o = i[&#39;clone&#39;][&#39;call&#39;](this);
                        return o[&#39;_hash&#39;] = this[&#39;_hash&#39;][&#39;clone&#39;](),
                            o;
                    &amp;#125;
                &amp;#125;);
                f[&#39;SHA256&#39;] = i[&#39;_createHelper&#39;](n),
                    f[&#39;HmacSHA256&#39;] = i[&#39;_createHmacHelper&#39;](n);
            &amp;#125;(Math),
                d[&#39;SHA256&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5
        &amp;#125;],
    0x21: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./x64-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./x64-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return function (e) &amp;#123;
                var f = d
                    , g = f[&#39;lib&#39;]
                    , h = g[&#39;WordArray&#39;]
                    , i = g[&#39;Hasher&#39;]
                    , j = f[&#39;x64&#39;]
                    , k = j[&#39;Word&#39;]
                    , l = f[&#39;algo&#39;]
                    , m = []
                    , n = []
                    , o = [];
                (function () &amp;#123;
                    var r = 0x1
                        , s = 0x0;
                    for (var u = 0x0; u &amp;lt; 0x18; u++) &amp;#123;
                        m[r + 0x5 * s] = (u + 0x1) * (u + 0x2) / 0x2 % 0x40;
                        var v = s % 0x5
                            , w = (0x2 * r + 0x3 * s) % 0x5;
                        r = v,
                            s = w;
                    &amp;#125;
                    for (var r = 0x0; r &amp;lt; 0x5; r++) &amp;#123;
                        for (var s = 0x0; s &amp;lt; 0x5; s++) &amp;#123;
                            n[r + 0x5 * s] = s + (0x2 * r + 0x3 * s) % 0x5 * 0x5;
                        &amp;#125;
                    &amp;#125;
                    var z = 0x1;
                    for (var A = 0x0; A &amp;lt; 0x18; A++) &amp;#123;
                        var B = 0x0
                            , D = 0x0;
                        for (var E = 0x0; E &amp;lt; 0x7; E++) &amp;#123;
                            if (z &amp;amp; 0x1) &amp;#123;
                                var F = (0x1 &amp;lt;&amp;lt; E) - 0x1;
                                F &amp;lt; 0x20 ? D ^= 0x1 &amp;lt;&amp;lt; F : B ^= 0x1 &amp;lt;&amp;lt; F - 0x20;
                            &amp;#125;
                            z &amp;amp; 0x80 ? z = z &amp;lt;&amp;lt; 0x1 ^ 0x71 : z &amp;lt;&amp;lt;= 0x1;
                        &amp;#125;
                        o[A] = k[&#39;create&#39;](B, D);
                    &amp;#125;
                &amp;#125;());
                var p = [];
                (function () &amp;#123;
                    for (var r = 0x0; r &amp;lt; 0x19; r++) &amp;#123;
                        p[r] = k[&#39;create&#39;]();
                    &amp;#125;
                &amp;#125;());
                var q = l[&#39;SHA3&#39;] = i[&#39;extend&#39;](&amp;#123;
                    &#39;cfg&#39;: i[&#39;cfg&#39;][&#39;extend&#39;](&amp;#123;
                        &#39;outputLength&#39;: 0x200
                    &amp;#125;),
                    &#39;_doReset&#39;: function () &amp;#123;
                        var r = this[&#39;_state&#39;] = [];
                        for (var s = 0x0; s &amp;lt; 0x19; s++) &amp;#123;
                            r[s] = new k[&#39;init&#39;]();
                        &amp;#125;
                        this[&#39;blockSize&#39;] = (0x640 - 0x2 * this[&#39;cfg&#39;][&#39;outputLength&#39;]) / 0x20;
                    &amp;#125;,
                    &#39;_doProcessBlock&#39;: function (r, s) &amp;#123;
                        var t = this[&#39;_state&#39;]
                            , u = this[&#39;blockSize&#39;] / 0x2;
                        for (var v = 0x0; v &amp;lt; u; v++) &amp;#123;
                            var w = r[s + 0x2 * v]
                                , z = r[s + 0x2 * v + 0x1];
                            w = (w &amp;lt;&amp;lt; 0x8 | w &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (w &amp;lt;&amp;lt; 0x18 | w &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00,
                                z = (z &amp;lt;&amp;lt; 0x8 | z &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (z &amp;lt;&amp;lt; 0x18 | z &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00;
                            var A = t[v];
                            A[&#39;high&#39;] ^= z,
                                A[&#39;low&#39;] ^= w;
                        &amp;#125;
                        for (var B = 0x0; B &amp;lt; 0x18; B++) &amp;#123;
                            for (var D = 0x0; D &amp;lt; 0x5; D++) &amp;#123;
                                var E = 0x0
                                    , F = 0x0;
                                for (var G = 0x0; G &amp;lt; 0x5; G++) &amp;#123;
                                    var A = t[D + 0x5 * G];
                                    E ^= A[&#39;high&#39;],
                                        F ^= A[&#39;low&#39;];
                                &amp;#125;
                                var H = p[D];
                                H[&#39;high&#39;] = E,
                                    H[&#39;low&#39;] = F;
                            &amp;#125;
                            for (var D = 0x0; D &amp;lt; 0x5; D++) &amp;#123;
                                var I = p[(D + 0x4) % 0x5]
                                    , J = p[(D + 0x1) % 0x5]
                                    , K = J[&#39;high&#39;]
                                    , L = J[&#39;low&#39;]
                                    , E = I[&#39;high&#39;] ^ (K &amp;lt;&amp;lt; 0x1 | L &amp;gt;&amp;gt;&amp;gt; 0x1f)
                                    , F = I[&#39;low&#39;] ^ (L &amp;lt;&amp;lt; 0x1 | K &amp;gt;&amp;gt;&amp;gt; 0x1f);
                                for (var G = 0x0; G &amp;lt; 0x5; G++) &amp;#123;
                                    var A = t[D + 0x5 * G];
                                    A[&#39;high&#39;] ^= E,
                                        A[&#39;low&#39;] ^= F;
                                &amp;#125;
                            &amp;#125;
                            for (var N = 0x1; N &amp;lt; 0x19; N++) &amp;#123;
                                var E, F, A = t[N], O = A[&#39;high&#39;], P = A[&#39;low&#39;], Q = m[N];
                                Q &amp;lt; 0x20 ? (E = O &amp;lt;&amp;lt; Q | P &amp;gt;&amp;gt;&amp;gt; 0x20 - Q,
                                    F = P &amp;lt;&amp;lt; Q | O &amp;gt;&amp;gt;&amp;gt; 0x20 - Q) : (E = P &amp;lt;&amp;lt; Q - 0x20 | O &amp;gt;&amp;gt;&amp;gt; 0x40 - Q,
                                    F = O &amp;lt;&amp;lt; Q - 0x20 | P &amp;gt;&amp;gt;&amp;gt; 0x40 - Q);
                                var R = p[n[N]];
                                R[&#39;high&#39;] = E,
                                    R[&#39;low&#39;] = F;
                            &amp;#125;
                            var S = p[0x0]
                                , U = t[0x0];
                            S[&#39;high&#39;] = U[&#39;high&#39;],
                                S[&#39;low&#39;] = U[&#39;low&#39;];
                            for (var D = 0x0; D &amp;lt; 0x5; D++) &amp;#123;
                                for (var G = 0x0; G &amp;lt; 0x5; G++) &amp;#123;
                                    var N = D + 0x5 * G
                                        , A = t[N]
                                        , V = p[N]
                                        , W = p[(D + 0x1) % 0x5 + 0x5 * G]
                                        , X = p[(D + 0x2) % 0x5 + 0x5 * G];
                                    A[&#39;high&#39;] = V[&#39;high&#39;] ^ ~W[&#39;high&#39;] &amp;amp; X[&#39;high&#39;],
                                        A[&#39;low&#39;] = V[&#39;low&#39;] ^ ~W[&#39;low&#39;] &amp;amp; X[&#39;low&#39;];
                                &amp;#125;
                            &amp;#125;
                            var A = t[0x0]
                                , Y = o[B];
                            A[&#39;high&#39;] ^= Y[&#39;high&#39;],
                                A[&#39;low&#39;] ^= Y[&#39;low&#39;];
                        &amp;#125;
                    &amp;#125;,
                    &#39;_doFinalize&#39;: function () &amp;#123;
                        var r = this[&#39;_data&#39;]
                            , s = r[&#39;words&#39;]
                            , t = this[&#39;_nDataBytes&#39;] * 0x8
                            , u = r[&#39;sigBytes&#39;] * 0x8
                            , v = this[&#39;blockSize&#39;] * 0x20;
                        s[u &amp;gt;&amp;gt;&amp;gt; 0x5] |= 0x1 &amp;lt;&amp;lt; 0x18 - u % 0x20,
                            s[(e[&#39;ceil&#39;]((u + 0x1) / v) * v &amp;gt;&amp;gt;&amp;gt; 0x5) - 0x1] |= 0x80,
                            r[&#39;sigBytes&#39;] = s[&#39;length&#39;] * 0x4,
                            this[&#39;_process&#39;]();
                        var w = this[&#39;_state&#39;]
                            , x = this[&#39;cfg&#39;][&#39;outputLength&#39;] / 0x8
                            , y = x / 0x8
                            , z = [];
                        for (var A = 0x0; A &amp;lt; y; A++) &amp;#123;
                            var B = w[A]
                                , D = B[&#39;high&#39;]
                                , E = B[&#39;low&#39;];
                            D = (D &amp;lt;&amp;lt; 0x8 | D &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (D &amp;lt;&amp;lt; 0x18 | D &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00,
                                E = (E &amp;lt;&amp;lt; 0x8 | E &amp;gt;&amp;gt;&amp;gt; 0x18) &amp;amp; 0xff00ff | (E &amp;lt;&amp;lt; 0x18 | E &amp;gt;&amp;gt;&amp;gt; 0x8) &amp;amp; 0xff00ff00,
                                z[&#39;push&#39;](E),
                                z[&#39;push&#39;](D);
                        &amp;#125;
                        return new h[&#39;init&#39;](z, x);
                    &amp;#125;,
                    &#39;clone&#39;: function () &amp;#123;
                        var r = i[&#39;clone&#39;][&#39;call&#39;](this)
                            , s = r[&#39;_state&#39;] = this[&#39;_state&#39;][&#39;slice&#39;](0x0);
                        for (var t = 0x0; t &amp;lt; 0x19; t++) &amp;#123;
                            s[t] = s[t][&#39;clone&#39;]();
                        &amp;#125;
                        return r;
                    &amp;#125;
                &amp;#125;);
                f[&#39;SHA3&#39;] = i[&#39;_createHelper&#39;](q),
                    f[&#39;HmacSHA3&#39;] = i[&#39;_createHmacHelper&#39;](q);
            &amp;#125;(Math),
                d[&#39;SHA3&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5,
            &#39;./x64-core&#39;: 0x25
        &amp;#125;],
    0x22: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./x64-core&#39;), a(&#39;./sha512&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./x64-core&#39;, &#39;./sha512&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e = d
                    , f = e[&#39;x64&#39;]
                    , g = f[&#39;Word&#39;]
                    , h = f[&#39;WordArray&#39;]
                    , i = e[&#39;algo&#39;]
                    , j = i[&#39;SHA512&#39;]
                    , k = i[&#39;SHA384&#39;] = j[&#39;extend&#39;](&amp;#123;
                    &#39;_doReset&#39;: function () &amp;#123;
                        this[&#39;_hash&#39;] = new h[&#39;init&#39;]([new g[&#39;init&#39;](0xcbbb9d5d, 0xc1059ed8), new g[&#39;init&#39;](0x629a292a, 0x367cd507), new g[&#39;init&#39;](0x9159015a, 0x3070dd17), new g[&#39;init&#39;](0x152fecd8, 0xf70e5939), new g[&#39;init&#39;](0x67332667, 0xffc00b31), new g[&#39;init&#39;](0x8eb44a87, 0x68581511), new g[&#39;init&#39;](0xdb0c2e0d, 0x64f98fa7), new g[&#39;init&#39;](0x47b5481d, 0xbefa4fa4)]);
                    &amp;#125;,
                    &#39;_doFinalize&#39;: function () &amp;#123;
                        var l = j[&#39;_doFinalize&#39;][&#39;call&#39;](this);
                        return l[&#39;sigBytes&#39;] -= 0x10,
                            l;
                    &amp;#125;
                &amp;#125;);
                e[&#39;SHA384&#39;] = j[&#39;_createHelper&#39;](k),
                    e[&#39;HmacSHA384&#39;] = j[&#39;_createHmacHelper&#39;](k);
            &amp;#125;()),
                d[&#39;SHA384&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5,
            &#39;./sha512&#39;: 0x23,
            &#39;./x64-core&#39;: 0x25
        &amp;#125;],
    0x23: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./x64-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./x64-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e = d
                    , f = e[&#39;lib&#39;]
                    , g = f[&#39;Hasher&#39;]
                    , h = e[&#39;x64&#39;]
                    , i = h[&#39;Word&#39;]
                    , j = h[&#39;WordArray&#39;]
                    , k = e[&#39;algo&#39;];

                function l() &amp;#123;
                    return i[&#39;create&#39;][&#39;apply&#39;](i, arguments);
                &amp;#125;

                var m = [l(0x428a2f98, 0xd728ae22), l(0x71374491, 0x23ef65cd), l(0xb5c0fbcf, 0xec4d3b2f), l(0xe9b5dba5, 0x8189dbbc), l(0x3956c25b, 0xf348b538), l(0x59f111f1, 0xb605d019), l(0x923f82a4, 0xaf194f9b), l(0xab1c5ed5, 0xda6d8118), l(0xd807aa98, 0xa3030242), l(0x12835b01, 0x45706fbe), l(0x243185be, 0x4ee4b28c), l(0x550c7dc3, 0xd5ffb4e2), l(0x72be5d74, 0xf27b896f), l(0x80deb1fe, 0x3b1696b1), l(0x9bdc06a7, 0x25c71235), l(0xc19bf174, 0xcf692694), l(0xe49b69c1, 0x9ef14ad2), l(0xefbe4786, 0x384f25e3), l(0xfc19dc6, 0x8b8cd5b5), l(0x240ca1cc, 0x77ac9c65), l(0x2de92c6f, 0x592b0275), l(0x4a7484aa, 0x6ea6e483), l(0x5cb0a9dc, 0xbd41fbd4), l(0x76f988da, 0x831153b5), l(0x983e5152, 0xee66dfab), l(0xa831c66d, 0x2db43210), l(0xb00327c8, 0x98fb213f), l(0xbf597fc7, 0xbeef0ee4), l(0xc6e00bf3, 0x3da88fc2), l(0xd5a79147, 0x930aa725), l(0x6ca6351, 0xe003826f), l(0x14292967, 0xa0e6e70), l(0x27b70a85, 0x46d22ffc), l(0x2e1b2138, 0x5c26c926), l(0x4d2c6dfc, 0x5ac42aed), l(0x53380d13, 0x9d95b3df), l(0x650a7354, 0x8baf63de), l(0x766a0abb, 0x3c77b2a8), l(0x81c2c92e, 0x47edaee6), l(0x92722c85, 0x1482353b), l(0xa2bfe8a1, 0x4cf10364), l(0xa81a664b, 0xbc423001), l(0xc24b8b70, 0xd0f89791), l(0xc76c51a3, 0x654be30), l(0xd192e819, 0xd6ef5218), l(0xd6990624, 0x5565a910), l(0xf40e3585, 0x5771202a), l(0x106aa070, 0x32bbd1b8), l(0x19a4c116, 0xb8d2d0c8), l(0x1e376c08, 0x5141ab53), l(0x2748774c, 0xdf8eeb99), l(0x34b0bcb5, 0xe19b48a8), l(0x391c0cb3, 0xc5c95a63), l(0x4ed8aa4a, 0xe3418acb), l(0x5b9cca4f, 0x7763e373), l(0x682e6ff3, 0xd6b2b8a3), l(0x748f82ee, 0x5defb2fc), l(0x78a5636f, 0x43172f60), l(0x84c87814, 0xa1f0ab72), l(0x8cc70208, 0x1a6439ec), l(0x90befffa, 0x23631e28), l(0xa4506ceb, 0xde82bde9), l(0xbef9a3f7, 0xb2c67915), l(0xc67178f2, 0xe372532b), l(0xca273ece, 0xea26619c), l(0xd186b8c7, 0x21c0c207), l(0xeada7dd6, 0xcde0eb1e), l(0xf57d4f7f, 0xee6ed178), l(0x6f067aa, 0x72176fba), l(0xa637dc5, 0xa2c898a6), l(0x113f9804, 0xbef90dae), l(0x1b710b35, 0x131c471b), l(0x28db77f5, 0x23047d84), l(0x32caab7b, 0x40c72493), l(0x3c9ebe0a, 0x15c9bebc), l(0x431d67c4, 0x9c100d4c), l(0x4cc5d4be, 0xcb3e42b6), l(0x597f299c, 0xfc657e2a), l(0x5fcb6fab, 0x3ad6faec), l(0x6c44198c, 0x4a475817)]
                    , n = [];
                (function () &amp;#123;
                    for (var p = 0x0; p &amp;lt; 0x50; p++) &amp;#123;
                        n[p] = l();
                    &amp;#125;
                &amp;#125;());
                var o = k[&#39;SHA512&#39;] = g[&#39;extend&#39;](&amp;#123;
                    &#39;_doReset&#39;: function () &amp;#123;
                        this[&#39;_hash&#39;] = new j[&#39;init&#39;]([new i[&#39;init&#39;](0x6a09e667, 0xf3bcc908), new i[&#39;init&#39;](0xbb67ae85, 0x84caa73b), new i[&#39;init&#39;](0x3c6ef372, 0xfe94f82b), new i[&#39;init&#39;](0xa54ff53a, 0x5f1d36f1), new i[&#39;init&#39;](0x510e527f, 0xade682d1), new i[&#39;init&#39;](0x9b05688c, 0x2b3e6c1f), new i[&#39;init&#39;](0x1f83d9ab, 0xfb41bd6b), new i[&#39;init&#39;](0x5be0cd19, 0x137e2179)]);
                    &amp;#125;,
                    &#39;_doProcessBlock&#39;: function (p, q) &amp;#123;
                        var r = this[&#39;_hash&#39;][&#39;words&#39;]
                            , s = r[0x0]
                            , t = r[0x1]
                            , u = r[0x2]
                            , v = r[0x3]
                            , w = r[0x4]
                            , x = r[0x5]
                            , y = r[0x6]
                            , z = r[0x7]
                            , A = s[&#39;high&#39;]
                            , B = s[&#39;low&#39;]
                            , D = t[&#39;high&#39;]
                            , E = t[&#39;low&#39;]
                            , F = u[&#39;high&#39;]
                            , G = u[&#39;low&#39;]
                            , I = v[&#39;high&#39;]
                            , J = v[&#39;low&#39;]
                            , L = w[&#39;high&#39;]
                            , N = w[&#39;low&#39;]
                            , O = x[&#39;high&#39;]
                            , P = x[&#39;low&#39;]
                            , Q = y[&#39;high&#39;]
                            , R = y[&#39;low&#39;]
                            , S = z[&#39;high&#39;]
                            , T = z[&#39;low&#39;]
                            , U = A
                            , V = B
                            , X = D
                            , Y = E
                            , Z = F
                            , a0 = G
                            , a1 = I
                            , a2 = J
                            , a3 = L
                            , a4 = N
                            , a5 = O
                            , a6 = P
                            , a7 = Q
                            , a8 = R
                            , a9 = S
                            , aa = T;
                        for (var ab = 0x0; ab &amp;lt; 0x50; ab++) &amp;#123;
                            var ac, ad, ae = n[ab];
                            if (ab &amp;lt; 0x10)
                                ad = ae[&#39;high&#39;] = p[q + ab * 0x2] | 0x0,
                                    ac = ae[&#39;low&#39;] = p[q + ab * 0x2 + 0x1] | 0x0;
                            else &amp;#123;
                                var af = n[ab - 0xf]
                                    , ag = af[&#39;high&#39;]
                                    , ai = af[&#39;low&#39;]
                                    , aj = (ag &amp;gt;&amp;gt;&amp;gt; 0x1 | ai &amp;lt;&amp;lt; 0x1f) ^ (ag &amp;gt;&amp;gt;&amp;gt; 0x8 | ai &amp;lt;&amp;lt; 0x18) ^ ag &amp;gt;&amp;gt;&amp;gt; 0x7
                                    ,
                                    ak = (ai &amp;gt;&amp;gt;&amp;gt; 0x1 | ag &amp;lt;&amp;lt; 0x1f) ^ (ai &amp;gt;&amp;gt;&amp;gt; 0x8 | ag &amp;lt;&amp;lt; 0x18) ^ (ai &amp;gt;&amp;gt;&amp;gt; 0x7 | ag &amp;lt;&amp;lt; 0x19)
                                    , am = n[ab - 0x2]
                                    , an = am[&#39;high&#39;]
                                    , ao = am[&#39;low&#39;]
                                    , ap = (an &amp;gt;&amp;gt;&amp;gt; 0x13 | ao &amp;lt;&amp;lt; 0xd) ^ (an &amp;lt;&amp;lt; 0x3 | ao &amp;gt;&amp;gt;&amp;gt; 0x1d) ^ an &amp;gt;&amp;gt;&amp;gt; 0x6
                                    ,
                                    aq = (ao &amp;gt;&amp;gt;&amp;gt; 0x13 | an &amp;lt;&amp;lt; 0xd) ^ (ao &amp;lt;&amp;lt; 0x3 | an &amp;gt;&amp;gt;&amp;gt; 0x1d) ^ (ao &amp;gt;&amp;gt;&amp;gt; 0x6 | an &amp;lt;&amp;lt; 0x1a)
                                    , ar = n[ab - 0x7]
                                    , as = ar[&#39;high&#39;]
                                    , at = ar[&#39;low&#39;]
                                    , au = n[ab - 0x10]
                                    , av = au[&#39;high&#39;]
                                    , aw = au[&#39;low&#39;];
                                ac = ak + at,
                                    ad = aj + as + (ac &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; ak &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                                    ac = ac + aq,
                                    ad = ad + ap + (ac &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; aq &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                                    ac = ac + aw,
                                    ad = ad + av + (ac &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; aw &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                                    ae[&#39;high&#39;] = ad,
                                    ae[&#39;low&#39;] = ac;
                            &amp;#125;
                            var ax = a3 &amp;amp; a5 ^ ~a3 &amp;amp; a7
                                , ay = a4 &amp;amp; a6 ^ ~a4 &amp;amp; a8
                                , az = U &amp;amp; X ^ U &amp;amp; Z ^ X &amp;amp; Z
                                , aA = V &amp;amp; Y ^ V &amp;amp; a0 ^ Y &amp;amp; a0
                                , aB = (U &amp;gt;&amp;gt;&amp;gt; 0x1c | V &amp;lt;&amp;lt; 0x4) ^ (U &amp;lt;&amp;lt; 0x1e | V &amp;gt;&amp;gt;&amp;gt; 0x2) ^ (U &amp;lt;&amp;lt; 0x19 | V &amp;gt;&amp;gt;&amp;gt; 0x7)
                                , aC = (V &amp;gt;&amp;gt;&amp;gt; 0x1c | U &amp;lt;&amp;lt; 0x4) ^ (V &amp;lt;&amp;lt; 0x1e | U &amp;gt;&amp;gt;&amp;gt; 0x2) ^ (V &amp;lt;&amp;lt; 0x19 | U &amp;gt;&amp;gt;&amp;gt; 0x7)
                                , aD = (a3 &amp;gt;&amp;gt;&amp;gt; 0xe | a4 &amp;lt;&amp;lt; 0x12) ^ (a3 &amp;gt;&amp;gt;&amp;gt; 0x12 | a4 &amp;lt;&amp;lt; 0xe) ^ (a3 &amp;lt;&amp;lt; 0x17 | a4 &amp;gt;&amp;gt;&amp;gt; 0x9)
                                , aE = (a4 &amp;gt;&amp;gt;&amp;gt; 0xe | a3 &amp;lt;&amp;lt; 0x12) ^ (a4 &amp;gt;&amp;gt;&amp;gt; 0x12 | a3 &amp;lt;&amp;lt; 0xe) ^ (a4 &amp;lt;&amp;lt; 0x17 | a3 &amp;gt;&amp;gt;&amp;gt; 0x9)
                                , aF = m[ab]
                                , aG = aF[&#39;high&#39;]
                                , aH = aF[&#39;low&#39;]
                                , aI = aa + aE
                                , aJ = a9 + aD + (aI &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; aa &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0)
                                , aI = aI + ay
                                , aJ = aJ + ax + (aI &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; ay &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0)
                                , aI = aI + aH
                                , aJ = aJ + aG + (aI &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; aH &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0)
                                , aI = aI + ac
                                , aJ = aJ + ad + (aI &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; ac &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0)
                                , aK = aC + aA
                                , aL = aB + az + (aK &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; aC &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0);
                            a9 = a7,
                                aa = a8,
                                a7 = a5,
                                a8 = a6,
                                a5 = a3,
                                a6 = a4,
                                a4 = a2 + aI | 0x0,
                                a3 = a1 + aJ + (a4 &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; a2 &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0,
                                a1 = Z,
                                a2 = a0,
                                Z = X,
                                a0 = Y,
                                X = U,
                                Y = V,
                                V = aI + aK | 0x0,
                                U = aJ + aL + (V &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; aI &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0) | 0x0;
                        &amp;#125;
                        B = s[&#39;low&#39;] = B + V,
                            s[&#39;high&#39;] = A + U + (B &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; V &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                            E = t[&#39;low&#39;] = E + Y,
                            t[&#39;high&#39;] = D + X + (E &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; Y &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                            G = u[&#39;low&#39;] = G + a0,
                            u[&#39;high&#39;] = F + Z + (G &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; a0 &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                            J = v[&#39;low&#39;] = J + a2,
                            v[&#39;high&#39;] = I + a1 + (J &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; a2 &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                            N = w[&#39;low&#39;] = N + a4,
                            w[&#39;high&#39;] = L + a3 + (N &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; a4 &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                            P = x[&#39;low&#39;] = P + a6,
                            x[&#39;high&#39;] = O + a5 + (P &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; a6 &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                            R = y[&#39;low&#39;] = R + a8,
                            y[&#39;high&#39;] = Q + a7 + (R &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; a8 &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0),
                            T = z[&#39;low&#39;] = T + aa,
                            z[&#39;high&#39;] = S + a9 + (T &amp;gt;&amp;gt;&amp;gt; 0x0 &amp;lt; aa &amp;gt;&amp;gt;&amp;gt; 0x0 ? 0x1 : 0x0);
                    &amp;#125;,
                    &#39;_doFinalize&#39;: function () &amp;#123;
                        var p = this[&#39;_data&#39;]
                            , q = p[&#39;words&#39;]
                            , r = this[&#39;_nDataBytes&#39;] * 0x8
                            , s = p[&#39;sigBytes&#39;] * 0x8;
                        q[s &amp;gt;&amp;gt;&amp;gt; 0x5] |= 0x80 &amp;lt;&amp;lt; 0x18 - s % 0x20,
                            q[(s + 0x80 &amp;gt;&amp;gt;&amp;gt; 0xa &amp;lt;&amp;lt; 0x5) + 0x1e] = Math[&#39;floor&#39;](r / 0x100000000),
                            q[(s + 0x80 &amp;gt;&amp;gt;&amp;gt; 0xa &amp;lt;&amp;lt; 0x5) + 0x1f] = r,
                            p[&#39;sigBytes&#39;] = q[&#39;length&#39;] * 0x4,
                            this[&#39;_process&#39;]();
                        var t = this[&#39;_hash&#39;][&#39;toX32&#39;]();
                        return t;
                    &amp;#125;,
                    &#39;clone&#39;: function () &amp;#123;
                        var p = g[&#39;clone&#39;][&#39;call&#39;](this);
                        return p[&#39;_hash&#39;] = this[&#39;_hash&#39;][&#39;clone&#39;](),
                            p;
                    &amp;#125;,
                    &#39;blockSize&#39;: 0x400 / 0x20
                &amp;#125;);
                e[&#39;SHA512&#39;] = g[&#39;_createHelper&#39;](o),
                    e[&#39;HmacSHA512&#39;] = g[&#39;_createHmacHelper&#39;](o);
            &amp;#125;()),
                d[&#39;SHA512&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5,
            &#39;./x64-core&#39;: 0x25
        &amp;#125;],
    0x24: [function (a, b, c) &amp;#123;
        ;(function (d, e, f) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;), a(&#39;./enc-base64&#39;), a(&#39;./md5&#39;), a(&#39;./evpkdf&#39;), a(&#39;./cipher-core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;, &#39;./enc-base64&#39;, &#39;./md5&#39;, &#39;./evpkdf&#39;, &#39;./cipher-core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return (function () &amp;#123;
                var e = d
                    , f = e[&#39;lib&#39;]
                    , g = f[&#39;WordArray&#39;]
                    , h = f[&#39;BlockCipher&#39;]
                    , i = e[&#39;algo&#39;]
                    ,
                    j = [0x39, 0x31, 0x29, 0x21, 0x19, 0x11, 0x9, 0x1, 0x3a, 0x32, 0x2a, 0x22, 0x1a, 0x12, 0xa, 0x2, 0x3b, 0x33, 0x2b, 0x23, 0x1b, 0x13, 0xb, 0x3, 0x3c, 0x34, 0x2c, 0x24, 0x3f, 0x37, 0x2f, 0x27, 0x1f, 0x17, 0xf, 0x7, 0x3e, 0x36, 0x2e, 0x26, 0x1e, 0x16, 0xe, 0x6, 0x3d, 0x35, 0x2d, 0x25, 0x1d, 0x15, 0xd, 0x5, 0x1c, 0x14, 0xc, 0x4]
                    ,
                    k = [0xe, 0x11, 0xb, 0x18, 0x1, 0x5, 0x3, 0x1c, 0xf, 0x6, 0x15, 0xa, 0x17, 0x13, 0xc, 0x4, 0x1a, 0x8, 0x10, 0x7, 0x1b, 0x14, 0xd, 0x2, 0x29, 0x34, 0x1f, 0x25, 0x2f, 0x37, 0x1e, 0x28, 0x33, 0x2d, 0x21, 0x30, 0x2c, 0x31, 0x27, 0x38, 0x22, 0x35, 0x2e, 0x2a, 0x32, 0x24, 0x1d, 0x20]
                    , l = [0x1, 0x2, 0x4, 0x6, 0x8, 0xa, 0xc, 0xe, 0xf, 0x11, 0x13, 0x15, 0x17, 0x19, 0x1b, 0x1c]
                    , m = [&amp;#123;
                        0x0: 0x808200,
                        0x10000000: 0x8000,
                        0x20000000: 0x808002,
                        0x30000000: 0x2,
                        0x40000000: 0x200,
                        0x50000000: 0x808202,
                        0x60000000: 0x800202,
                        0x70000000: 0x800000,
                        0x80000000: 0x202,
                        0x90000000: 0x800200,
                        0xa0000000: 0x8200,
                        0xb0000000: 0x808000,
                        0xc0000000: 0x8002,
                        0xd0000000: 0x800002,
                        0xe0000000: 0x0,
                        0xf0000000: 0x8202,
                        0x8000000: 0x0,
                        0x18000000: 0x808202,
                        0x28000000: 0x8202,
                        0x38000000: 0x8000,
                        0x48000000: 0x808200,
                        0x58000000: 0x200,
                        0x68000000: 0x808002,
                        0x78000000: 0x2,
                        0x88000000: 0x800200,
                        0x98000000: 0x8200,
                        0xa8000000: 0x808000,
                        0xb8000000: 0x800202,
                        0xc8000000: 0x800002,
                        0xd8000000: 0x8002,
                        0xe8000000: 0x202,
                        0xf8000000: 0x800000,
                        0x1: 0x8000,
                        0x10000001: 0x2,
                        0x20000001: 0x808200,
                        0x30000001: 0x800000,
                        0x40000001: 0x808002,
                        0x50000001: 0x8200,
                        0x60000001: 0x200,
                        0x70000001: 0x800202,
                        0x80000001: 0x808202,
                        0x90000001: 0x808000,
                        0xa0000001: 0x800002,
                        0xb0000001: 0x8202,
                        0xc0000001: 0x202,
                        0xd0000001: 0x800200,
                        0xe0000001: 0x8002,
                        0xf0000001: 0x0,
                        0x8000001: 0x808202,
                        0x18000001: 0x808000,
                        0x28000001: 0x800000,
                        0x38000001: 0x200,
                        0x48000001: 0x8000,
                        0x58000001: 0x800002,
                        0x68000001: 0x2,
                        0x78000001: 0x8202,
                        0x88000001: 0x8002,
                        0x98000001: 0x800202,
                        0xa8000001: 0x202,
                        0xb8000001: 0x808200,
                        0xc8000001: 0x800200,
                        0xd8000001: 0x0,
                        0xe8000001: 0x8200,
                        0xf8000001: 0x808002
                    &amp;#125;, &amp;#123;
                        0x0: 0x40084010,
                        0x1000000: 0x4000,
                        0x2000000: 0x80000,
                        0x3000000: 0x40080010,
                        0x4000000: 0x40000010,
                        0x5000000: 0x40084000,
                        0x6000000: 0x40004000,
                        0x7000000: 0x10,
                        0x8000000: 0x84000,
                        0x9000000: 0x40004010,
                        0xa000000: 0x40000000,
                        0xb000000: 0x84010,
                        0xc000000: 0x80010,
                        0xd000000: 0x0,
                        0xe000000: 0x4010,
                        0xf000000: 0x40080000,
                        0x800000: 0x40004000,
                        0x1800000: 0x84010,
                        0x2800000: 0x10,
                        0x3800000: 0x40004010,
                        0x4800000: 0x40084010,
                        0x5800000: 0x40000000,
                        0x6800000: 0x80000,
                        0x7800000: 0x40080010,
                        0x8800000: 0x80010,
                        0x9800000: 0x0,
                        0xa800000: 0x4000,
                        0xb800000: 0x40080000,
                        0xc800000: 0x40000010,
                        0xd800000: 0x84000,
                        0xe800000: 0x40084000,
                        0xf800000: 0x4010,
                        0x10000000: 0x0,
                        0x11000000: 0x40080010,
                        0x12000000: 0x40004010,
                        0x13000000: 0x40084000,
                        0x14000000: 0x40080000,
                        0x15000000: 0x10,
                        0x16000000: 0x84010,
                        0x17000000: 0x4000,
                        0x18000000: 0x4010,
                        0x19000000: 0x80000,
                        0x1a000000: 0x80010,
                        0x1b000000: 0x40000010,
                        0x1c000000: 0x84000,
                        0x1d000000: 0x40004000,
                        0x1e000000: 0x40000000,
                        0x1f000000: 0x40084010,
                        0x10800000: 0x84010,
                        0x11800000: 0x80000,
                        0x12800000: 0x40080000,
                        0x13800000: 0x4000,
                        0x14800000: 0x40004000,
                        0x15800000: 0x40084010,
                        0x16800000: 0x10,
                        0x17800000: 0x40000000,
                        0x18800000: 0x40084000,
                        0x19800000: 0x40000010,
                        0x1a800000: 0x40004010,
                        0x1b800000: 0x80010,
                        0x1c800000: 0x0,
                        0x1d800000: 0x4010,
                        0x1e800000: 0x40080010,
                        0x1f800000: 0x84000
                    &amp;#125;, &amp;#123;
                        0x0: 0x104,
                        0x100000: 0x0,
                        0x200000: 0x4000100,
                        0x300000: 0x10104,
                        0x400000: 0x10004,
                        0x500000: 0x4000004,
                        0x600000: 0x4010104,
                        0x700000: 0x4010000,
                        0x800000: 0x4000000,
                        0x900000: 0x4010100,
                        0xa00000: 0x10100,
                        0xb00000: 0x4010004,
                        0xc00000: 0x4000104,
                        0xd00000: 0x10000,
                        0xe00000: 0x4,
                        0xf00000: 0x100,
                        0x80000: 0x4010100,
                        0x180000: 0x4010004,
                        0x280000: 0x0,
                        0x380000: 0x4000100,
                        0x480000: 0x4000004,
                        0x580000: 0x10000,
                        0x680000: 0x10004,
                        0x780000: 0x104,
                        0x880000: 0x4,
                        0x980000: 0x100,
                        0xa80000: 0x4010000,
                        0xb80000: 0x10104,
                        0xc80000: 0x10100,
                        0xd80000: 0x4000104,
                        0xe80000: 0x4010104,
                        0xf80000: 0x4000000,
                        0x1000000: 0x4010100,
                        0x1100000: 0x10004,
                        0x1200000: 0x10000,
                        0x1300000: 0x4000100,
                        0x1400000: 0x100,
                        0x1500000: 0x4010104,
                        0x1600000: 0x4000004,
                        0x1700000: 0x0,
                        0x1800000: 0x4000104,
                        0x1900000: 0x4000000,
                        0x1a00000: 0x4,
                        0x1b00000: 0x10100,
                        0x1c00000: 0x4010000,
                        0x1d00000: 0x104,
                        0x1e00000: 0x10104,
                        0x1f00000: 0x4010004,
                        0x1080000: 0x4000000,
                        0x1180000: 0x104,
                        0x1280000: 0x4010100,
                        0x1380000: 0x0,
                        0x1480000: 0x10004,
                        0x1580000: 0x4000100,
                        0x1680000: 0x100,
                        0x1780000: 0x4010004,
                        0x1880000: 0x10000,
                        0x1980000: 0x4010104,
                        0x1a80000: 0x10104,
                        0x1b80000: 0x4000004,
                        0x1c80000: 0x4000104,
                        0x1d80000: 0x4010000,
                        0x1e80000: 0x4,
                        0x1f80000: 0x10100
                    &amp;#125;, &amp;#123;
                        0x0: 0x80401000,
                        0x10000: 0x80001040,
                        0x20000: 0x401040,
                        0x30000: 0x80400000,
                        0x40000: 0x0,
                        0x50000: 0x401000,
                        0x60000: 0x80000040,
                        0x70000: 0x400040,
                        0x80000: 0x80000000,
                        0x90000: 0x400000,
                        0xa0000: 0x40,
                        0xb0000: 0x80001000,
                        0xc0000: 0x80400040,
                        0xd0000: 0x1040,
                        0xe0000: 0x1000,
                        0xf0000: 0x80401040,
                        0x8000: 0x80001040,
                        0x18000: 0x40,
                        0x28000: 0x80400040,
                        0x38000: 0x80001000,
                        0x48000: 0x401000,
                        0x58000: 0x80401040,
                        0x68000: 0x0,
                        0x78000: 0x80400000,
                        0x88000: 0x1000,
                        0x98000: 0x80401000,
                        0xa8000: 0x400000,
                        0xb8000: 0x1040,
                        0xc8000: 0x80000000,
                        0xd8000: 0x400040,
                        0xe8000: 0x401040,
                        0xf8000: 0x80000040,
                        0x100000: 0x400040,
                        0x110000: 0x401000,
                        0x120000: 0x80000040,
                        0x130000: 0x0,
                        0x140000: 0x1040,
                        0x150000: 0x80400040,
                        0x160000: 0x80401000,
                        0x170000: 0x80001040,
                        0x180000: 0x80401040,
                        0x190000: 0x80000000,
                        0x1a0000: 0x80400000,
                        0x1b0000: 0x401040,
                        0x1c0000: 0x80001000,
                        0x1d0000: 0x400000,
                        0x1e0000: 0x40,
                        0x1f0000: 0x1000,
                        0x108000: 0x80400000,
                        0x118000: 0x80401040,
                        0x128000: 0x0,
                        0x138000: 0x401000,
                        0x148000: 0x400040,
                        0x158000: 0x80000000,
                        0x168000: 0x80001040,
                        0x178000: 0x40,
                        0x188000: 0x80000040,
                        0x198000: 0x1000,
                        0x1a8000: 0x80001000,
                        0x1b8000: 0x80400040,
                        0x1c8000: 0x1040,
                        0x1d8000: 0x80401000,
                        0x1e8000: 0x400000,
                        0x1f8000: 0x401040
                    &amp;#125;, &amp;#123;
                        0x0: 0x80,
                        0x1000: 0x1040000,
                        0x2000: 0x40000,
                        0x3000: 0x20000000,
                        0x4000: 0x20040080,
                        0x5000: 0x1000080,
                        0x6000: 0x21000080,
                        0x7000: 0x40080,
                        0x8000: 0x1000000,
                        0x9000: 0x20040000,
                        0xa000: 0x20000080,
                        0xb000: 0x21040080,
                        0xc000: 0x21040000,
                        0xd000: 0x0,
                        0xe000: 0x1040080,
                        0xf000: 0x21000000,
                        0x800: 0x1040080,
                        0x1800: 0x21000080,
                        0x2800: 0x80,
                        0x3800: 0x1040000,
                        0x4800: 0x40000,
                        0x5800: 0x20040080,
                        0x6800: 0x21040000,
                        0x7800: 0x20000000,
                        0x8800: 0x20040000,
                        0x9800: 0x0,
                        0xa800: 0x21040080,
                        0xb800: 0x1000080,
                        0xc800: 0x20000080,
                        0xd800: 0x21000000,
                        0xe800: 0x1000000,
                        0xf800: 0x40080,
                        0x10000: 0x40000,
                        0x11000: 0x80,
                        0x12000: 0x20000000,
                        0x13000: 0x21000080,
                        0x14000: 0x1000080,
                        0x15000: 0x21040000,
                        0x16000: 0x20040080,
                        0x17000: 0x1000000,
                        0x18000: 0x21040080,
                        0x19000: 0x21000000,
                        0x1a000: 0x1040000,
                        0x1b000: 0x20040000,
                        0x1c000: 0x40080,
                        0x1d000: 0x20000080,
                        0x1e000: 0x0,
                        0x1f000: 0x1040080,
                        0x10800: 0x21000080,
                        0x11800: 0x1000000,
                        0x12800: 0x1040000,
                        0x13800: 0x20040080,
                        0x14800: 0x20000000,
                        0x15800: 0x1040080,
                        0x16800: 0x80,
                        0x17800: 0x21040000,
                        0x18800: 0x40080,
                        0x19800: 0x21040080,
                        0x1a800: 0x0,
                        0x1b800: 0x21000000,
                        0x1c800: 0x1000080,
                        0x1d800: 0x40000,
                        0x1e800: 0x20040000,
                        0x1f800: 0x20000080
                    &amp;#125;, &amp;#123;
                        0x0: 0x10000008,
                        0x100: 0x2000,
                        0x200: 0x10200000,
                        0x300: 0x10202008,
                        0x400: 0x10002000,
                        0x500: 0x200000,
                        0x600: 0x200008,
                        0x700: 0x10000000,
                        0x800: 0x0,
                        0x900: 0x10002008,
                        0xa00: 0x202000,
                        0xb00: 0x8,
                        0xc00: 0x10200008,
                        0xd00: 0x202008,
                        0xe00: 0x2008,
                        0xf00: 0x10202000,
                        0x80: 0x10200000,
                        0x180: 0x10202008,
                        0x280: 0x8,
                        0x380: 0x200000,
                        0x480: 0x202008,
                        0x580: 0x10000008,
                        0x680: 0x10002000,
                        0x780: 0x2008,
                        0x880: 0x200008,
                        0x980: 0x2000,
                        0xa80: 0x10002008,
                        0xb80: 0x10200008,
                        0xc80: 0x0,
                        0xd80: 0x10202000,
                        0xe80: 0x202000,
                        0xf80: 0x10000000,
                        0x1000: 0x10002000,
                        0x1100: 0x10200008,
                        0x1200: 0x10202008,
                        0x1300: 0x2008,
                        0x1400: 0x200000,
                        0x1500: 0x10000000,
                        0x1600: 0x10000008,
                        0x1700: 0x202000,
                        0x1800: 0x202008,
                        0x1900: 0x0,
                        0x1a00: 0x8,
                        0x1b00: 0x10200000,
                        0x1c00: 0x2000,
                        0x1d00: 0x10002008,
                        0x1e00: 0x10202000,
                        0x1f00: 0x200008,
                        0x1080: 0x8,
                        0x1180: 0x202000,
                        0x1280: 0x200000,
                        0x1380: 0x10000008,
                        0x1480: 0x10002000,
                        0x1580: 0x2008,
                        0x1680: 0x10202008,
                        0x1780: 0x10200000,
                        0x1880: 0x10202000,
                        0x1980: 0x10200008,
                        0x1a80: 0x2000,
                        0x1b80: 0x202008,
                        0x1c80: 0x200008,
                        0x1d80: 0x0,
                        0x1e80: 0x10000000,
                        0x1f80: 0x10002008
                    &amp;#125;, &amp;#123;
                        0x0: 0x100000,
                        0x10: 0x2000401,
                        0x20: 0x400,
                        0x30: 0x100401,
                        0x40: 0x2100401,
                        0x50: 0x0,
                        0x60: 0x1,
                        0x70: 0x2100001,
                        0x80: 0x2000400,
                        0x90: 0x100001,
                        0xa0: 0x2000001,
                        0xb0: 0x2100400,
                        0xc0: 0x2100000,
                        0xd0: 0x401,
                        0xe0: 0x100400,
                        0xf0: 0x2000000,
                        0x8: 0x2100001,
                        0x18: 0x0,
                        0x28: 0x2000401,
                        0x38: 0x2100400,
                        0x48: 0x100000,
                        0x58: 0x2000001,
                        0x68: 0x2000000,
                        0x78: 0x401,
                        0x88: 0x100401,
                        0x98: 0x2000400,
                        0xa8: 0x2100000,
                        0xb8: 0x100001,
                        0xc8: 0x400,
                        0xd8: 0x2100401,
                        0xe8: 0x1,
                        0xf8: 0x100400,
                        0x100: 0x2000000,
                        0x110: 0x100000,
                        0x120: 0x2000401,
                        0x130: 0x2100001,
                        0x140: 0x100001,
                        0x150: 0x2000400,
                        0x160: 0x2100400,
                        0x170: 0x100401,
                        0x180: 0x401,
                        0x190: 0x2100401,
                        0x1a0: 0x100400,
                        0x1b0: 0x1,
                        0x1c0: 0x0,
                        0x1d0: 0x2100000,
                        0x1e0: 0x2000001,
                        0x1f0: 0x400,
                        0x108: 0x100400,
                        0x118: 0x2000401,
                        0x128: 0x2100001,
                        0x138: 0x1,
                        0x148: 0x2000000,
                        0x158: 0x100000,
                        0x168: 0x401,
                        0x178: 0x2100400,
                        0x188: 0x2000001,
                        0x198: 0x2100000,
                        0x1a8: 0x0,
                        0x1b8: 0x2100401,
                        0x1c8: 0x100401,
                        0x1d8: 0x400,
                        0x1e8: 0x2000400,
                        0x1f8: 0x100001
                    &amp;#125;, &amp;#123;
                        0x0: 0x8000820,
                        0x1: 0x20000,
                        0x2: 0x8000000,
                        0x3: 0x20,
                        0x4: 0x20020,
                        0x5: 0x8020820,
                        0x6: 0x8020800,
                        0x7: 0x800,
                        0x8: 0x8020000,
                        0x9: 0x8000800,
                        0xa: 0x20800,
                        0xb: 0x8020020,
                        0xc: 0x820,
                        0xd: 0x0,
                        0xe: 0x8000020,
                        0xf: 0x20820,
                        0x80000000: 0x800,
                        0x80000001: 0x8020820,
                        0x80000002: 0x8000820,
                        0x80000003: 0x8000000,
                        0x80000004: 0x8020000,
                        0x80000005: 0x20800,
                        0x80000006: 0x20820,
                        0x80000007: 0x20,
                        0x80000008: 0x8000020,
                        0x80000009: 0x820,
                        0x8000000a: 0x20020,
                        0x8000000b: 0x8020800,
                        0x8000000c: 0x0,
                        0x8000000d: 0x8020020,
                        0x8000000e: 0x8000800,
                        0x8000000f: 0x20000,
                        0x10: 0x20820,
                        0x11: 0x8020800,
                        0x12: 0x20,
                        0x13: 0x800,
                        0x14: 0x8000800,
                        0x15: 0x8000020,
                        0x16: 0x8020020,
                        0x17: 0x20000,
                        0x18: 0x0,
                        0x19: 0x20020,
                        0x1a: 0x8020000,
                        0x1b: 0x8000820,
                        0x1c: 0x8020820,
                        0x1d: 0x20800,
                        0x1e: 0x820,
                        0x1f: 0x8000000,
                        0x80000010: 0x20000,
                        0x80000011: 0x800,
                        0x80000012: 0x8020020,
                        0x80000013: 0x20820,
                        0x80000014: 0x20,
                        0x80000015: 0x8020000,
                        0x80000016: 0x8000000,
                        0x80000017: 0x8000820,
                        0x80000018: 0x8020820,
                        0x80000019: 0x8000020,
                        0x8000001a: 0x8000800,
                        0x8000001b: 0x0,
                        0x8000001c: 0x20800,
                        0x8000001d: 0x820,
                        0x8000001e: 0x20020,
                        0x8000001f: 0x8020800
                    &amp;#125;]
                    , n = [0xf8000001, 0x1f800000, 0x1f80000, 0x1f8000, 0x1f800, 0x1f80, 0x1f8, 0x8000001f]
                    , o = i[&#39;DES&#39;] = h[&#39;extend&#39;](&amp;#123;
                        &#39;_doReset&#39;: function () &amp;#123;
                            var s = this[&#39;_key&#39;]
                                , t = s[&#39;words&#39;]
                                , u = [];
                            for (var v = 0x0; v &amp;lt; 0x38; v++) &amp;#123;
                                var w = j[v] - 0x1;
                                u[v] = t[w &amp;gt;&amp;gt;&amp;gt; 0x5] &amp;gt;&amp;gt;&amp;gt; 0x1f - w % 0x20 &amp;amp; 0x1;
                            &amp;#125;
                            var x = this[&#39;_subKeys&#39;] = [];
                            for (var y = 0x0; y &amp;lt; 0x10; y++) &amp;#123;
                                var z = x[y] = []
                                    , A = l[y];
                                for (var v = 0x0; v &amp;lt; 0x18; v++) &amp;#123;
                                    z[v / 0x6 | 0x0] |= u[(k[v] - 0x1 + A) % 0x1c] &amp;lt;&amp;lt; 0x1f - v % 0x6,
                                        z[0x4 + (v / 0x6 | 0x0)] |= u[0x1c + (k[v + 0x18] - 0x1 + A) % 0x1c] &amp;lt;&amp;lt; 0x1f - v % 0x6;
                                &amp;#125;
                                z[0x0] = z[0x0] &amp;lt;&amp;lt; 0x1 | z[0x0] &amp;gt;&amp;gt;&amp;gt; 0x1f;
                                for (var v = 0x1; v &amp;lt; 0x7; v++) &amp;#123;
                                    z[v] = z[v] &amp;gt;&amp;gt;&amp;gt; (v - 0x1) * 0x4 + 0x3;
                                &amp;#125;
                                z[0x7] = z[0x7] &amp;lt;&amp;lt; 0x5 | z[0x7] &amp;gt;&amp;gt;&amp;gt; 0x1b;
                            &amp;#125;
                            var B = this[&#39;_invSubKeys&#39;] = [];
                            for (var v = 0x0; v &amp;lt; 0x10; v++) &amp;#123;
                                B[v] = x[0xf - v];
                            &amp;#125;
                        &amp;#125;,
                        &#39;encryptBlock&#39;: function (s, t) &amp;#123;
                            this[&#39;_doCryptBlock&#39;](s, t, this[&#39;_subKeys&#39;]);
                        &amp;#125;,
                        &#39;decryptBlock&#39;: function (s, t) &amp;#123;
                            this[&#39;_doCryptBlock&#39;](s, t, this[&#39;_invSubKeys&#39;]);
                        &amp;#125;,
                        &#39;_doCryptBlock&#39;: function (s, u, v) &amp;#123;
                            this[&#39;_lBlock&#39;] = s[u],
                                this[&#39;_rBlock&#39;] = s[u + 0x1],
                                p[&#39;call&#39;](this, 0x4, 0xf0f0f0f),
                                p[&#39;call&#39;](this, 0x10, 0xffff),
                                q[&#39;call&#39;](this, 0x2, 0x33333333),
                                q[&#39;call&#39;](this, 0x8, 0xff00ff),
                                p[&#39;call&#39;](this, 0x1, 0x55555555);
                            for (var w = 0x0; w &amp;lt; 0x10; w++) &amp;#123;
                                var x = v[w]
                                    , y = this[&#39;_lBlock&#39;]
                                    , z = this[&#39;_rBlock&#39;]
                                    , A = 0x0;
                                for (var B = 0x0; B &amp;lt; 0x8; B++) &amp;#123;
                                    A |= m[B][((z ^ x[B]) &amp;amp; n[B]) &amp;gt;&amp;gt;&amp;gt; 0x0];
                                &amp;#125;
                                this[&#39;_lBlock&#39;] = z,
                                    this[&#39;_rBlock&#39;] = y ^ A;
                            &amp;#125;
                            var D = this[&#39;_lBlock&#39;];
                            this[&#39;_lBlock&#39;] = this[&#39;_rBlock&#39;],
                                this[&#39;_rBlock&#39;] = D,
                                p[&#39;call&#39;](this, 0x1, 0x55555555),
                                q[&#39;call&#39;](this, 0x8, 0xff00ff),
                                q[&#39;call&#39;](this, 0x2, 0x33333333),
                                p[&#39;call&#39;](this, 0x10, 0xffff),
                                p[&#39;call&#39;](this, 0x4, 0xf0f0f0f),
                                s[u] = this[&#39;_lBlock&#39;],
                                s[u + 0x1] = this[&#39;_rBlock&#39;];
                        &amp;#125;,
                        &#39;keySize&#39;: 0x40 / 0x20,
                        &#39;ivSize&#39;: 0x40 / 0x20,
                        &#39;blockSize&#39;: 0x40 / 0x20
                    &amp;#125;);

                function p(s, u) &amp;#123;
                    var v = (this[&#39;_lBlock&#39;] &amp;gt;&amp;gt;&amp;gt; s ^ this[&#39;_rBlock&#39;]) &amp;amp; u;
                    this[&#39;_rBlock&#39;] ^= v,
                        this[&#39;_lBlock&#39;] ^= v &amp;lt;&amp;lt; s;
                &amp;#125;

                function q(s, u) &amp;#123;
                    var v = (this[&#39;_rBlock&#39;] &amp;gt;&amp;gt;&amp;gt; s ^ this[&#39;_lBlock&#39;]) &amp;amp; u;
                    this[&#39;_lBlock&#39;] ^= v,
                        this[&#39;_rBlock&#39;] ^= v &amp;lt;&amp;lt; s;
                &amp;#125;

                e[&#39;DES&#39;] = h[&#39;_createHelper&#39;](o);
                var r = i[&#39;TripleDES&#39;] = h[&#39;extend&#39;](&amp;#123;
                    &#39;_doReset&#39;: function () &amp;#123;
                        var s = this[&#39;_key&#39;]
                            , t = s[&#39;words&#39;];
                        if (t[&#39;length&#39;] !== 0x2 &amp;amp;&amp;amp; t[&#39;length&#39;] !== 0x4 &amp;amp;&amp;amp; t[&#39;length&#39;] &amp;lt; 0x6)
                            throw new Error(&#39;Invalid\x20key\x20length\x20-\x203DES\x20requires\x20the\x20key\x20length\x20to\x20be\x2064,\x20128,\x20192\x20or\x20&amp;gt;192.&#39;);
                        var u = t[&#39;slice&#39;](0x0, 0x2)
                            , v = t[&#39;length&#39;] &amp;lt; 0x4 ? t[&#39;slice&#39;](0x0, 0x2) : t[&#39;slice&#39;](0x2, 0x4)
                            , w = t[&#39;length&#39;] &amp;lt; 0x6 ? t[&#39;slice&#39;](0x0, 0x2) : t[&#39;slice&#39;](0x4, 0x6);
                        this[&#39;_des1&#39;] = o[&#39;createEncryptor&#39;](g[&#39;create&#39;](u)),
                            this[&#39;_des2&#39;] = o[&#39;createEncryptor&#39;](g[&#39;create&#39;](v)),
                            this[&#39;_des3&#39;] = o[&#39;createEncryptor&#39;](g[&#39;create&#39;](w));
                    &amp;#125;,
                    &#39;encryptBlock&#39;: function (s, t) &amp;#123;
                        this[&#39;_des1&#39;][&#39;encryptBlock&#39;](s, t),
                            this[&#39;_des2&#39;][&#39;decryptBlock&#39;](s, t),
                            this[&#39;_des3&#39;][&#39;encryptBlock&#39;](s, t);
                    &amp;#125;,
                    &#39;decryptBlock&#39;: function (s, t) &amp;#123;
                        this[&#39;_des3&#39;][&#39;decryptBlock&#39;](s, t),
                            this[&#39;_des2&#39;][&#39;encryptBlock&#39;](s, t),
                            this[&#39;_des1&#39;][&#39;decryptBlock&#39;](s, t);
                    &amp;#125;,
                    &#39;keySize&#39;: 0xc0 / 0x20,
                    &#39;ivSize&#39;: 0x40 / 0x20,
                    &#39;blockSize&#39;: 0x40 / 0x20
                &amp;#125;);
                e[&#39;TripleDES&#39;] = h[&#39;_createHelper&#39;](r);
            &amp;#125;()),
                d[&#39;TripleDES&#39;];
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./cipher-core&#39;: 0x4,
            &#39;./core&#39;: 0x5,
            &#39;./enc-base64&#39;: 0x6,
            &#39;./evpkdf&#39;: 0x9,
            &#39;./md5&#39;: 0xe
        &amp;#125;],
    0x25: [function (a, b, c) &amp;#123;
        ;(function (d, e) &amp;#123;
            if (typeof c === &#39;object&#39;)
                b[&#39;exports&#39;] = c = e(a(&#39;./core&#39;));
            else
                typeof define === &#39;function&#39; &amp;amp;&amp;amp; define[&#39;amd&#39;] ? define([&#39;./core&#39;], e) : e(d[&#39;CryptoJS&#39;]);
        &amp;#125;(this, function (d) &amp;#123;
            return function (e) &amp;#123;
                var f = d
                    , g = f[&#39;lib&#39;]
                    , h = g[&#39;Base&#39;]
                    , i = g[&#39;WordArray&#39;]
                    , j = f[&#39;x64&#39;] = &amp;#123;&amp;#125;
                    , k = j[&#39;Word&#39;] = h[&#39;extend&#39;](&amp;#123;
                    &#39;init&#39;: function (m, n) &amp;#123;
                        this[&#39;high&#39;] = m,
                            this[&#39;low&#39;] = n;
                    &amp;#125;
                &amp;#125;)
                    , l = j[&#39;WordArray&#39;] = h[&#39;extend&#39;](&amp;#123;
                    &#39;init&#39;: function (m, n) &amp;#123;
                        m = this[&#39;words&#39;] = m || [],
                            n != e ? this[&#39;sigBytes&#39;] = n : this[&#39;sigBytes&#39;] = m[&#39;length&#39;] * 0x8;
                    &amp;#125;,
                    &#39;toX32&#39;: function () &amp;#123;
                        var m = this[&#39;words&#39;]
                            , n = m[&#39;length&#39;]
                            , o = [];
                        for (var p = 0x0; p &amp;lt; n; p++) &amp;#123;
                            var q = m[p];
                            o[&#39;push&#39;](q[&#39;high&#39;]),
                                o[&#39;push&#39;](q[&#39;low&#39;]);
                        &amp;#125;
                        return i[&#39;create&#39;](o, this[&#39;sigBytes&#39;]);
                    &amp;#125;,
                    &#39;clone&#39;: function () &amp;#123;
                        var m = h[&#39;clone&#39;][&#39;call&#39;](this)
                            , n = m[&#39;words&#39;] = this[&#39;words&#39;][&#39;slice&#39;](0x0)
                            , o = n[&#39;length&#39;];
                        for (var p = 0x0; p &amp;lt; o; p++) &amp;#123;
                            n[p] = n[p][&#39;clone&#39;]();
                        &amp;#125;
                        return m;
                    &amp;#125;
                &amp;#125;);
            &amp;#125;(),
                d;
        &amp;#125;));
    &amp;#125;
        , &amp;#123;
            &#39;./core&#39;: 0x5
        &amp;#125;]
&amp;#125;, &amp;#123;&amp;#125;, [0x2]));

function get_token(page) &amp;#123;
    var e = Date[&#39;now&#39;]()
        , f = asxe(&#39;crypto-js&#39;)
        , g = &#39;666yuanrenxue66&#39;
        , h = f[&#39;AES&#39;][&#39;encrypt&#39;](e + String(page), g, &amp;#123;
        &#39;mode&#39;: f[&#39;mode&#39;][&#39;ECB&#39;],
        &#39;padding&#39;: f[&#39;pad&#39;][&#39;Pkcs7&#39;]
    &amp;#125;)
        , i = &#39;/api/match2023/1&#39;
        , j = &amp;#123;
        &#39;page&#39;: String(page),
        &#39;token&#39;: f[&#39;MD5&#39;](h[&#39;toString&#39;]())[&#39;toString&#39;](),
        &#39;now&#39;: e
    &amp;#125;;
    return j
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2023/05/05/ImageMagic%E7%9A%84API%E6%96%87%E6%A1%A3(%E4%B8%AD%E8%8B%B1%E6%96%87%E7%89%88)/</guid>
            <title>ImageMagic库API文档(中英文版)</title>
            <link>https://www.asxe.vip/blog/2023/05/05/ImageMagic%E7%9A%84API%E6%96%87%E6%A1%A3(%E4%B8%AD%E8%8B%B1%E6%96%87%E7%89%88)/</link>
            <category term="Python" scheme="https://www.asxe.vip/blog/categories/python/" />
            <category term="ImageMagic" scheme="https://www.asxe.vip/blog/categories/python/imagemagic/" />
            <category term="API文档" scheme="https://www.asxe.vip/blog/tags/API%E6%96%87%E6%A1%A3/" />
            <category term="ImageMagic" scheme="https://www.asxe.vip/blog/tags/ImageMagic/" />
            <pubDate>Fri, 05 May 2023 18:58:58 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;tab&#34; data-id=&#34;id1&#34; data-title=&#34;中文文档&#34;&gt;
&lt;h1 id=&#34;欢迎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#欢迎&#34;&gt;#&lt;/a&gt; 欢迎！&lt;/h1&gt;
&lt;p&gt;如果说你看到了这里，那么有两种可能，要么是为 ImageMagic 而来，要么就是闲逛，不过，这里都欢迎你的到来！&lt;/p&gt;
&lt;h1 id=&#34;获取imagemagic&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#获取imagemagic&#34;&gt;#&lt;/a&gt; 获取 ImageMagic&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;使用 pip 下载：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; ImageMagic&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;从源进行构建：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FzeGV6L0ltYWdlTWFnaWM=&#34;&gt;源&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;docs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#docs&#34;&gt;#&lt;/a&gt; DOCS&lt;/h1&gt;
&lt;p&gt;感谢使用 ImageMagic，这是 Python 的第三方库 ImageMagic 的临时文档，请查阅。若在使用过程中有什么问题或是你觉得可以改进的地方，请联系我！&lt;/p&gt;
&lt;h2 id=&#34;image模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image模块&#34;&gt;#&lt;/a&gt; Image 模块&lt;/h2&gt;
&lt;h3 id=&#34;word_to_image&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#word_to_image&#34;&gt;#&lt;/a&gt; word_to_image()&lt;/h3&gt;
&lt;p&gt;将文本转换成图片&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;word_to_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;这里是你要转成图片的文本&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/1.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fontPath&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/ttf/字语时光体.ttf&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;voice_to_word&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#voice_to_word&#34;&gt;#&lt;/a&gt; voice_to_word()&lt;/h3&gt;
&lt;p&gt;识别音频里的内容，使用讯飞的语音转写，你需要去&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb25zb2xlLnhmeXVuLmNuL3NlcnZpY2VzL2xmYXNy&#34;&gt;点击这里&lt;/span&gt;获取你的 appid 以及 key，支持格式为 WAV, FLAC, OPUS, M4A, MP3&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;appid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;filepath &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;F:/mp3/test.mp3&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;audio &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Audio&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;appid&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;filepath&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; audio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;voice_to_word&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;audio_to_image&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#audio_to_image&#34;&gt;#&lt;/a&gt; audio_to_image()&lt;/h3&gt;
&lt;p&gt;将音频内容转为图片，同样，你需要去&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb25zb2xlLnhmeXVuLmNuL3NlcnZpY2VzL2xmYXNy&#34;&gt;点击这里&lt;/span&gt;获取你的 appid 以及 key，支持格式为 WAV, FLAC, OPUS, M4A, MP3&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;appid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;filepath &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;F:/mp3/test.mp3&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;audio_to_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;appid&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;filepath&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#最后一个参数是图片保存地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;categorize_image&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#categorize_image&#34;&gt;#&lt;/a&gt; categorize_image()&lt;/h3&gt;
&lt;p&gt;分类文件夹里的图片，格式包括 jpg, jpeg, png, webp, bmp, tif, tiff, gif, svg, wmf，会在此文件夹下生成以已有文件的后缀为名的新文件夹，并将同类文件复制到里面&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;categorize_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/images&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#这里输入你的文件夹路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;convert&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#convert&#34;&gt;#&lt;/a&gt; convert()&lt;/h3&gt;
&lt;p&gt;转换图片格式&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;convert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;webp&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.webp&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#第一个参数是原文件路径，第二个是转换的格式，第三个是保存路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;equal_scale_image&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#equal_scale_image&#34;&gt;#&lt;/a&gt; equal_scale_image()&lt;/h3&gt;
&lt;p&gt;将图片等比例缩小或者放大&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;equal_scale_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/save.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#最后一个参数是变化倍数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;customize_image&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#customize_image&#34;&gt;#&lt;/a&gt; customize_image()&lt;/h3&gt;
&lt;p&gt;自定义修改图片分辨率，若是不输入第三和四个参数，那么将会使用原参数&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;customize_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/save.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1960&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1080&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;lbp_image_hash&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#lbp_image_hash&#34;&gt;#&lt;/a&gt; lbp_image_hash()&lt;/h3&gt;
&lt;p&gt;哈希局部二值算法计算图片哈希值&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lbp_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;p_image_hash&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#p_image_hash&#34;&gt;#&lt;/a&gt; p_image_hash()&lt;/h3&gt;
&lt;p&gt;感知哈希算法计算图片哈希值&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;p_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;pca_image_hash&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pca_image_hash&#34;&gt;#&lt;/a&gt; pca_image_hash()&lt;/h3&gt;
&lt;p&gt;主成分分析算法计算图片哈希值&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pca_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;fft_image_hash&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fft_image_hash&#34;&gt;#&lt;/a&gt; fft_image_hash()&lt;/h3&gt;
&lt;p&gt;傅里叶变换算法计算哈希值&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fft_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;average_image_hash&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#average_image_hash&#34;&gt;#&lt;/a&gt; average_image_hash()&lt;/h3&gt;
&lt;p&gt;哈希平均算法计算图片哈希值&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;average_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;remove_same_images&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#remove_same_images&#34;&gt;#&lt;/a&gt; remove_same_images()&lt;/h3&gt;
&lt;p&gt;删除某目录下相同的图片且每张图片保留一张。&lt;br /&gt;
具体实现：通过计算图片的哈希值，相同图片则会被删除。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;remove_same_images&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;aocr模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aocr模块&#34;&gt;#&lt;/a&gt; Aocr 模块&lt;/h2&gt;
&lt;p&gt;使用本模块请前往&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90ZXNzZXJhY3Qtb2NyLmdpdGh1Yi5pby90ZXNzZG9jL0luc3RhbGxhdGlvbi5odG1s&#34;&gt;点击这里&lt;/span&gt;下载 OCR 引擎&lt;/p&gt;
&lt;h3 id=&#34;image_to_text&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image_to_text&#34;&gt;#&lt;/a&gt; image_to_text()&lt;/h3&gt;
&lt;p&gt;识别图像中的文本，参数 filePath：图片路径，lang：图片里的语言，默认中文，可以多语言，例：&#39;chi_sim+eng&#39;,timeout: 识别超时时间，默认 0，即无&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;image_to_text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;image_to_pdf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image_to_pdf&#34;&gt;#&lt;/a&gt; image_to_pdf()&lt;/h3&gt;
&lt;p&gt;将图片转为可搜索的 pdf 文件&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;image_to_pdf&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/pdf/test.pdf&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;image_to_hocr&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image_to_hocr&#34;&gt;#&lt;/a&gt; image_to_hocr()&lt;/h3&gt;
&lt;p&gt;将图片转为 HOCR&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hocr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;image_to_hocr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test,png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;image_to_altoxml&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image_to_altoxml&#34;&gt;#&lt;/a&gt; image_to_AltoXml()&lt;/h3&gt;
&lt;p&gt;将图片转为 AltXml&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;xml &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;image_to_AltoXml&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;get_image_data&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#get_image_data&#34;&gt;#&lt;/a&gt; get_image_data()&lt;/h3&gt;
&lt;p&gt;获取图片详细的数据，包括框、置信度、行号和页码。需要 tesseract 版本 3.05+&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_image_data&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;get_image_osd&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#get_image_osd&#34;&gt;#&lt;/a&gt; get_image_osd()&lt;/h3&gt;
&lt;p&gt;获取有关方向和脚本检测的信息&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;osd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_image_osd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;get_image_boxs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#get_image_boxs&#34;&gt;#&lt;/a&gt; get_image_boxs()&lt;/h3&gt;
&lt;p&gt;获取图片边界框的估计值&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;boxs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_image_boxs&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;check_languages&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#check_languages&#34;&gt;#&lt;/a&gt; check_languages()&lt;/h3&gt;
&lt;p&gt;获取已安装的语言包&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;lang &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;check_languages&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;lang&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id1&#34; data-title=&#34;English Docs&#34;&gt;
&lt;h1 id=&#34;welcome-to-you&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#welcome-to-you&#34;&gt;#&lt;/a&gt; Welcome to you !&lt;/h1&gt;
&lt;p&gt;If you see it, there are two possibilities, either for ImageMagic or just hanging out, but you&#39;re welcome here!&lt;/p&gt;
&lt;h1 id=&#34;where-to-get-it&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#where-to-get-it&#34;&gt;#&lt;/a&gt; Where to get it ?&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Download using pip:&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; ImageMagic&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Build from source:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FzeGV6L0ltYWdlTWFnaWM=&#34;&gt;source&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;docs-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#docs-2&#34;&gt;#&lt;/a&gt; DOCS&lt;/h1&gt;
&lt;p&gt;Thanks for using ImageMagic, which is temporary documentation for Python&#39;s third-party library ImageMagic, check it out. If there are any problems during use or what you think can be improved, please contact me!&lt;/p&gt;
&lt;h2 id=&#34;image-module&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image-module&#34;&gt;#&lt;/a&gt; Image module&lt;/h2&gt;
&lt;h3 id=&#34;word_to_image-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#word_to_image-2&#34;&gt;#&lt;/a&gt; word_to_image()&lt;/h3&gt;
&lt;p&gt;Convert text to images&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;word_to_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Here&#39;s the text you want to turn into an image.&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/1.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fontPath&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/ttf/test.ttf&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;voice_to_word-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#voice_to_word-2&#34;&gt;#&lt;/a&gt; voice_to_word()&lt;/h3&gt;
&lt;p&gt;To identify the content in the audio and use iFLYTEK&#39;s voice transcription, you need to go to [click here] (&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb25zb2xlLnhmeXVuLmNuL3NlcnZpY2VzL2xmYXNy&#34;&gt;https://console.xfyun.cn/services/lfasr&lt;/span&gt;) to get your appid and key, which are supported in WAV, FLAC, OPUS, M4A, MP3.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;appid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;filepath &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;F:/mp3/test.mp3&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;audio &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Audio&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;appid&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;filepath&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; audio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;voice_to_word&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;audio_to_image-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#audio_to_image-2&#34;&gt;#&lt;/a&gt; audio_to_image()&lt;/h3&gt;
&lt;p&gt;To convert audio content to images, you need to go to [click here] (&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb25zb2xlLnhmeXVuLmNuL3NlcnZpY2VzL2xmYXNy&#34;&gt;https://console.xfyun.cn/services/lfasr&lt;/span&gt;) to get your appid and key, which are supported in WAV, FLAC, OPUS, M4A, MP3.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;appid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;filepath &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;F:/mp3/test.mp3&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;audio_to_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;appid&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;filepath&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#The last parameter is the address where the image is saved.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;categorize_image-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#categorize_image-2&#34;&gt;#&lt;/a&gt; categorize_image()&lt;/h3&gt;
&lt;p&gt;The images in the category folder, including jpg, jpeg, png, webp, bmp, tif, tiff, gif, svg, wmf, will generate a new folder named with the suffix of the existing file under this folder, and copy the same kind of files into it.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;categorize_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/images&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#Enter your folder path here&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;convert-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#convert-2&#34;&gt;#&lt;/a&gt; convert()&lt;/h3&gt;
&lt;p&gt;Convert image format.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;convert&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;webp&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.webp&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#The first parameter is the path to the original file, the second is the converted format, and the third is the saved path.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;equal_scale_image-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#equal_scale_image-2&#34;&gt;#&lt;/a&gt; equal_scale_image()&lt;/h3&gt;
&lt;p&gt;Reduce or enlarge the image at equal scale.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;equal_scale_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/save.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#The last parameter is the multiplier.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;customize_image-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#customize_image-2&#34;&gt;#&lt;/a&gt; customize_image()&lt;/h3&gt;
&lt;p&gt;Customize the image resolution, if you do not enter the third and fourth parameters, the original parameters will be used.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;customize_image&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/save.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1960&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1080&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;lbp_image_hash-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#lbp_image_hash-2&#34;&gt;#&lt;/a&gt; lbp_image_hash()&lt;/h3&gt;
&lt;p&gt;The hash local binary algorithm calculates the image hash value.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lbp_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;p_image_hash-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#p_image_hash-2&#34;&gt;#&lt;/a&gt; p_image_hash()&lt;/h3&gt;
&lt;p&gt;The hash awareness algorithm calculates the image hash value.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;p_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;pca_image_hash-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pca_image_hash-2&#34;&gt;#&lt;/a&gt; pca_image_hash()&lt;/h3&gt;
&lt;p&gt;The principal component analysis algorithm calculates the image hash value.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pca_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;fft_image_hash-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fft_image_hash-2&#34;&gt;#&lt;/a&gt; fft_image_hash()&lt;/h3&gt;
&lt;p&gt;The Fourier transform algorithm computes the hash value.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fft_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;average_image_hash-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#average_image_hash-2&#34;&gt;#&lt;/a&gt; average_image_hash()&lt;/h3&gt;
&lt;p&gt;The hash averaging algorithm calculates the image hash value.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;average_image_hash&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;remove_same_images-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#remove_same_images-2&#34;&gt;#&lt;/a&gt; remove_same_images()&lt;/h3&gt;
&lt;p&gt;Delete the same images in a directory and keep one image per image.&lt;br /&gt;
Implementation: By calculating the hash value of the image, the same image will be deleted.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Image&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Image&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;remove_same_images&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;aocr-module&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aocr-module&#34;&gt;#&lt;/a&gt; Aocr module&lt;/h2&gt;
&lt;p&gt;To use this module, go to [click here] (&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90ZXNzZXJhY3Qtb2NyLmdpdGh1Yi5pby90ZXNzZG9jL0luc3RhbGxhdGlvbi5odG1s&#34;&gt;https://tesseract-ocr.github.io/tessdoc/Installation.html&lt;/span&gt;) to download the OCR engine.&lt;/p&gt;
&lt;h3 id=&#34;image_to_text-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image_to_text-2&#34;&gt;#&lt;/a&gt; image_to_text()&lt;/h3&gt;
&lt;p&gt;Identify text in an image, parameters filePath: image path, lang: language in the image, default Chinese, can be multilingual, for example: &#39;chi_sim+eng&#39;, timeout: recognition timeout, default 0, that is, none.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;image_to_text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;image_to_pdf-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image_to_pdf-2&#34;&gt;#&lt;/a&gt; image_to_pdf()&lt;/h3&gt;
&lt;p&gt;Turn images into searchable PDF files.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;image_to_pdf&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/pdf/test.pdf&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;image_to_hocr-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image_to_hocr-2&#34;&gt;#&lt;/a&gt; image_to_hocr()&lt;/h3&gt;
&lt;p&gt;Turn the picture into HOCR.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hocr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;image_to_hocr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test,png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;image_to_altoxml-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#image_to_altoxml-2&#34;&gt;#&lt;/a&gt; image_to_AltoXml()&lt;/h3&gt;
&lt;p&gt;Convert the image to AltXml.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;xml &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;image_to_AltoXml&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;get_image_data-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#get_image_data-2&#34;&gt;#&lt;/a&gt; get_image_data()&lt;/h3&gt;
&lt;p&gt;Get detailed data for an image, including boxes, confidence, line numbers, and page numbers. Requires tesseract version 3.05+.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_image_data&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;get_image_osd-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#get_image_osd-2&#34;&gt;#&lt;/a&gt; get_image_osd()&lt;/h3&gt;
&lt;p&gt;Get information about orientation and script detection.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;osd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_image_osd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;get_image_boxs-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#get_image_boxs-2&#34;&gt;#&lt;/a&gt; get_image_boxs()&lt;/h3&gt;
&lt;p&gt;Gets an estimate of the picture bounding box.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;boxs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_image_boxs&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;F:/image/test.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;check_languages-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#check_languages-2&#34;&gt;#&lt;/a&gt; check_languages()&lt;/h3&gt;
&lt;p&gt;Gets the installed language packs.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ImageMagic &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Aocr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;lang &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Aocr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;check_languages&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;lang&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2023/05/01/%E9%93%9C%E9%92%9F%E7%88%AC%E8%99%AB/</guid>
            <title>铜钟爬虫</title>
            <link>https://www.asxe.vip/blog/2023/05/01/%E9%93%9C%E9%92%9F%E7%88%AC%E8%99%AB/</link>
            <category term="Python" scheme="https://www.asxe.vip/blog/categories/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/blog/categories/python/spider/" />
            <category term="python" scheme="https://www.asxe.vip/blog/tags/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/blog/tags/%E7%88%AC%E8%99%AB/" />
            <pubDate>Mon, 01 May 2023 17:46:20 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;https://moe-counter.glitch.me/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://counter.likepoems.com/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;/p&gt;
&lt;p&gt;因为某些原因，不再使用原标题&lt;/p&gt;
&lt;h1 id=&#34;开始&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开始&#34;&gt;#&lt;/a&gt; 开始&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b256aG9uLmNvbS8=&#34;&gt;铜钟&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;label warnning&#34;&gt;仅限交流与学习，勿作非法用途&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;label warnning&#34;&gt;版权所有，转载请注明出处，本页如有违规，请联系删除&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;正文&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#正文&#34;&gt;#&lt;/a&gt; 正文&lt;/h1&gt;
&lt;p&gt;不懂的地方请在评论区留言&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; json&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#模块级定义，因为下面用了全局变量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;TongZhong&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;api &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;https://tonzhon.com/api/playlists/63749694e6e9cbb9d6f1b10b&#39;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#这是歌单的 API 地址，注意，不是歌单的地址，而是歌单的 API 地址，两者有区分&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;qq &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;https://music-api.tonzhon.com/song_source/qq/&amp;#123;song_id&amp;#125;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;kuwo &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;https://music-api.tonzhon.com/song_source/kuwo/&amp;#123;song_id&amp;#125;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;netease &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;https://music-api.tonzhon.com/song_source/netease/&amp;#123;song_id&amp;#125;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#39;user-agent&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36 Edg/112.0.1722.64&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;get_index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        all_response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;api&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        songs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; all_response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;playlist&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;songs&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;#三个列表递推，得到所有元素&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        song_ids &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;song&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;originalId&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; song &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; songs&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        song_names &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;song&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; song &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; songs&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        platforms &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;song&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;platform&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; song &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; songs&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; song_ids&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;song_names&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;platforms&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;get_response&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;song_id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;song_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;platform&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;global&lt;/span&gt; res  &lt;span class=&#34;token comment&#34;&gt;#全局变量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; platform &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;qq&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;qq&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;song_id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;song_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; platform &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;kuwo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;kuwo&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;song_id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;song_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;elif&lt;/span&gt; platform &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;netease&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;netease&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;song_id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;song_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; res &lt;span class=&#34;token keyword&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                links &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;data&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;songSource&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#这个元素可能不存在，因此需用 try-except 语句&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                res &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;links&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;./music/&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;song_name&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;.mp3&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;wb&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;content&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;except&lt;/span&gt; AttributeError &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;错误：&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;pass&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    song_ids&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;song_names&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;platforms &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; TongZhong&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_index&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; song_id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;song_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;platform &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;zip&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;song_ids&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;song_names&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;platforms&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#有三个元素，用 zip () 语法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        TongZhong&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_response&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;song_id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;song_name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;platform&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;效果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#效果&#34;&gt;#&lt;/a&gt; 效果&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/tongzhong_music/1.png&#34; alt=&#34;1.png&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2023/04/22/GitHub%E9%A1%B5%E9%9D%A2%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%EF%BC%88%E5%8F%82%E8%80%83%E4%BA%8E%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%EF%BC%89/</guid>
            <title>GitHub页面自定义域名（参考于官方文档）</title>
            <link>https://www.asxe.vip/blog/2023/04/22/GitHub%E9%A1%B5%E9%9D%A2%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%EF%BC%88%E5%8F%82%E8%80%83%E4%BA%8E%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%EF%BC%89/</link>
            <category term="GitHub" scheme="https://www.asxe.vip/blog/tags/GitHub/" />
            <category term="避坑" scheme="https://www.asxe.vip/blog/tags/%E9%81%BF%E5%9D%91/" />
            <pubDate>Sat, 22 Apr 2023 22:13:13 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;https://moe-counter.glitch.me/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://counter.likepoems.com/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;开头&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开头&#34;&gt;#&lt;/a&gt; 开头&lt;/h1&gt;
&lt;p&gt;我为什么发这篇文章？因为今天采购了新的域名，并准备给博客换上新的” 名字 “，在配置过程中遇到的一些问题和坑，在此提出，说不定以后会有人用着呢。&lt;/p&gt;
&lt;p&gt;注意本页底部的避坑一栏！&lt;/p&gt;
&lt;p&gt;若是仍有不懂的地方，可以在评论区留言哦！&lt;/p&gt;
&lt;h1 id=&#34;开始&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开始&#34;&gt;#&lt;/a&gt; 开始&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;label danger&#34;&gt;注意：以下配置方法选择其一即可！！！&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;配置子域名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置子域名&#34;&gt;#&lt;/a&gt; 配置子域名&lt;/h2&gt;
&lt;p&gt;配置过程中，最重要的就是 DNS 解析，配置子域名很简单，如下&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;记录类型选择 CNAME，记录值就是你的原域名，即&lt;span class=&#34;label info&#34;&gt; &amp;lt;user&amp;gt;.github.io&lt;/span&gt;，请注意，我建议你将博客仓库的仓库名设为与你的用户名相同&lt;/li&gt;
&lt;li&gt;主机记录最好为&lt;span class=&#34;label info&#34;&gt; www&lt;/span&gt; 或者&lt;span class=&#34;label info&#34;&gt; blog&lt;/span&gt;，因为官方文档上给的就是这两个！&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;配置apex域名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置apex域名&#34;&gt;#&lt;/a&gt; 配置 apex 域名&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;label danger&#34;&gt;下面两种解析方法任选其一即可&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;记录类型选择 A 类型，记录值则有四个，如下&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;185.199.108.153
185.199.109.153
185.199.110.153
185.199.111.153
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;即你需要解析四个 A 记录&lt;br /&gt;
 2. 你也可以选择 AAAA 记录，即 IPv6，但是这种方法的速度很慢！记录值也是四个，如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2606:50c0:8000::153
2606:50c0:8001::153
2606:50c0:8002::153
2606:50c0:8003::153
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;配置apex域和www子域变体&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置apex域和www子域变体&#34;&gt;#&lt;/a&gt; 配置 apex 域和 www 子域变体&lt;/h2&gt;
&lt;p&gt;这个就很简单了，就是将上面两种配置都解析上，但是子域名解析的主机记录必须为 www&lt;/p&gt;
&lt;h1 id=&#34;最后&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h1&gt;
&lt;p&gt;选择以上任意一种解析后，即可到 GitHub 进行设置&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开你的博客仓库并进入设置&lt;/li&gt;
&lt;li&gt;点击到 pages，即页面&lt;/li&gt;
&lt;li&gt;将你的域名输入其中，然后保存即可&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;避坑&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#避坑&#34;&gt;#&lt;/a&gt; 避坑！&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;当你在保存域名时，很有可能会报【asxe.vip 及其备用名称配置不正确&lt;br /&gt;
域不会解析到 GitHub 页面服务器。有关详细信息，请参阅文档 （NotServedByPagesError）。】&lt;br /&gt;
其实这个并不会影响访问你的博客，可以忽略&lt;/li&gt;
&lt;li&gt;若你解析了 CNAME 类型，就需要在仓库里添加一个文件，名称为 CNAME，&lt;span class=&#34;label danger&#34;&gt;注意必须是全部大写&lt;/span&gt;，里面写你的域名即可&lt;/li&gt;
&lt;li&gt;基于 hexo 搭建的博客，当你推送时可能会删掉仓库原所有文件，即包括了&lt;span class=&#34;label info&#34;&gt; CNAME 文件&lt;/span&gt;，那么你可以将此文件放在你博客文件夹根目录的 source 文件夹里面，这样你每次提交的时候就会带上这个文件一起提交在仓库了，如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/github_site/1.png&#34; alt=&#34;1.png&#34; /&gt;&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2023/04/21/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87API/</guid>
            <title>随机图片API</title>
            <link>https://www.asxe.vip/blog/2023/04/21/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87API/</link>
            <category term="二次元" scheme="https://www.asxe.vip/blog/tags/%E4%BA%8C%E6%AC%A1%E5%85%83/" />
            <category term="API" scheme="https://www.asxe.vip/blog/tags/API/" />
            <category term="三次元" scheme="https://www.asxe.vip/blog/tags/%E4%B8%89%E6%AC%A1%E5%85%83/" />
            <pubDate>Fri, 21 Apr 2023 12:26:02 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;https://moe-counter.glitch.me/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://counter.likepoems.com/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#api&#34;&gt;#&lt;/a&gt; API&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcGkuYXN4ZS52aXAv&#34;&gt;API&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#说明&#34;&gt;#&lt;/a&gt; 说明&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;图片格式均为 webp，经过压缩优化处理，资源消耗更少，访问速度更快&lt;/li&gt;
&lt;li&gt;图库将长期更新，图片来源为网络以及 AI 绘画（stable diffusion）&lt;/li&gt;
&lt;li&gt;大家如果有好的图片投稿，可以评论区留言哦，留下你的邮箱！我会联系你！&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;新增&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#新增&#34;&gt;#&lt;/a&gt; 新增&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;23 年 4 月 24 日新增：三次元白丝 API，二次元风景图 API&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;注意&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意&#34;&gt;#&lt;/a&gt; 注意&lt;/h1&gt;
&lt;p&gt;不建议使用爬虫，会导致加载速度变慢！&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2023/04/12/%E5%9F%BA%E4%BA%8Emirai%E5%92%8Cgraia%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/</guid>
            <title>基于mirai和graia的QQ机器人</title>
            <link>https://www.asxe.vip/blog/2023/04/12/%E5%9F%BA%E4%BA%8Emirai%E5%92%8Cgraia%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/</link>
            <category term="Python" scheme="https://www.asxe.vip/blog/categories/python/" />
            <category term="python" scheme="https://www.asxe.vip/blog/tags/python/" />
            <category term="QQ机器人" scheme="https://www.asxe.vip/blog/tags/QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/" />
            <pubDate>Wed, 12 Apr 2023 17:24:42 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;https://moe-counter.glitch.me/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://counter.likepoems.com/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;开始&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开始&#34;&gt;#&lt;/a&gt; 开始&lt;/h2&gt;
&lt;p&gt;本文所用代码已发布到 GitHub，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FzeGV6L0dhbGF4eS1SaXZlci1Cb3Q=&#34;&gt;地址&lt;/span&gt;&lt;br /&gt;
 mirai 下载最新版本即可&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21hbW9lL21pcmFpL3JlbGVhc2Vz&#34;&gt; mirai&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#功能&#34;&gt;#&lt;/a&gt; 功能&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;ChatGPT  API 版（无上下文）（需魔法） /gpt&lt;/li&gt;
&lt;li&gt;New Bing （有上下文）（需魔法） /bing&lt;/li&gt;
&lt;li&gt;音乐（目前支持酷我和网易云）/kw   /wyy&lt;/li&gt;
&lt;li&gt;群违规词检测&lt;/li&gt;
&lt;li&gt;入群申请检测与审核&lt;/li&gt;
&lt;li&gt;/kick   /ma   /uma   /mo   /umo   /tra   /shutdown&lt;/li&gt;
&lt;li&gt;控制端后门&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;部分功能使用方法及解释&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#部分功能使用方法及解释&#34;&gt;#&lt;/a&gt; 部分功能使用方法及解释&lt;/h3&gt;
&lt;p&gt;ChatGPT：/gpt 问题&lt;br /&gt;
 New Bing：/bing 问题&lt;br /&gt;
音乐：/kw 音乐名  和  /wyy 音乐名&lt;br /&gt;
关机：/shutdown  （仅系统管理员可用）&lt;br /&gt;
清除 new bing 记忆或者重启程序：/clean&lt;br /&gt;
 控制端后门：/s 文本  这段命令可以让机器人将文本发送至指定群聊，仅系统管理员可用（这段指令只能私发给机器人）&lt;br /&gt;
/kick @xxx  踢出某人（注意指令和艾特间的空格）&lt;br /&gt;
/ma 开启全体禁言&lt;br /&gt;
 /uma 关闭全体禁言&lt;br /&gt;
 /mo @xxx 时间 （禁言某成员，时间单位为分钟）&lt;br /&gt;
/umo @xxx 解除某成员禁言&lt;/p&gt;
&lt;h2 id=&#34;注意&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意&#34;&gt;#&lt;/a&gt; 注意！！&lt;/h2&gt;
&lt;p&gt;1.ChatGPT 需要你有一个&lt;span class=&#34;label info&#34;&gt; api key&lt;/span&gt;&lt;br /&gt;
2.New Bing 需要你有一个&lt;span class=&#34;label info&#34;&gt;通过候补名单的账号&lt;/span&gt;&lt;br /&gt;
 3.New Bing cookie 获取方法如下：&lt;br /&gt;
首先去&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9taWNyb3NvZnRlZGdlLm1pY3Jvc29mdC5jb20vYWRkb25zL2RldGFpbC9jb29raWVlZGl0b3IvbmVhcGxtZmtnaGFnZWJva2tocGpwb2ViaGRsZWRsZmk=&#34;&gt;点这！&lt;/span&gt;下载好 cookie editor&lt;br /&gt;
 然后：&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/mirai_graia_qqbot/1.png&#34; alt=&#34;1.png&#34; /&gt;&lt;br /&gt;
 点击 Export as JSON，然后去 modules 目录下的 cookie.json 文件粘贴上就行了&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2023/03/28/%E7%88%AC%E8%99%AB%E4%B9%8Bhttpx%E5%BA%93/</guid>
            <title>HTTP2.0之httpx</title>
            <link>https://www.asxe.vip/blog/2023/03/28/%E7%88%AC%E8%99%AB%E4%B9%8Bhttpx%E5%BA%93/</link>
            <category term="Python" scheme="https://www.asxe.vip/blog/categories/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/blog/categories/python/spider/" />
            <category term="python" scheme="https://www.asxe.vip/blog/tags/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/blog/tags/%E7%88%AC%E8%99%AB/" />
            <pubDate>Tue, 28 Mar 2023 21:04:23 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;https://moe-counter.glitch.me/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://counter.likepoems.com/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;开始&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开始&#34;&gt;#&lt;/a&gt; 开始&lt;/h2&gt;
&lt;p&gt;在大家写爬虫的时候，想必用得最多的库就是&lt;span class=&#34;label info&#34;&gt; requests&lt;/span&gt; 了，在长久的使用过程中，大家便会发现，若是&lt;span class=&#34;label warning&#34;&gt; HTTP1.1&lt;/span&gt; 的链接，那么&lt;span class=&#34;label info&#34;&gt; requests&lt;/span&gt; 是完全没啥问题的，但如若为&lt;span class=&#34;label warning&#34;&gt; HTTP2.0&lt;/span&gt;，那么就不行了，因为&lt;span class=&#34;label info&#34;&gt; requests&lt;/span&gt; 并未支持&lt;span class=&#34;label warning&#34;&gt; HTTP2.0&lt;/span&gt;，因此本文介绍一个支持&lt;span class=&#34;label warning&#34;&gt; HTTP2.0&lt;/span&gt; 的库 --&lt;span class=&#34;label info&#34;&gt;httpx&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#正文&#34;&gt;#&lt;/a&gt; 正文&lt;/h2&gt;
&lt;h3 id=&#34;安装httpx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装httpx&#34;&gt;#&lt;/a&gt; 安装 httpx&lt;/h3&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;安装&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip3 install &lt;span class=&#34;token string&#34;&gt;&#34;httpx[http2]&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;基本使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本使用&#34;&gt;#&lt;/a&gt; 基本使用&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;label info&#34;&gt;httpx&lt;/span&gt; 的 api 与&lt;span class=&#34;label info&#34;&gt; requests&lt;/span&gt; 相似，例如&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; httpx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://www.baidu.com&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;httpx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status_code&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;有点感觉没？&lt;br /&gt;
 相同的，也可以带上一些对象&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; httpx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;header&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#39;user-agent&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36 Edg/111.0.1661.54&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://www.baidu.com&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;httpx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;header&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status_code&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里即是带上了一个&lt;span class=&#34;label info&#34;&gt; headers&lt;/span&gt; 对象&lt;br /&gt;
但是这并不是本文的重点！我们接着说&lt;br /&gt;
链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcGExNi5zY3JhcGUuY2VudGVy&#34;&gt;https://spa16.scrape.center&lt;/span&gt;&lt;br /&gt;
 这个链接是&lt;span class=&#34;label warning&#34;&gt; HTTP2.0&lt;/span&gt; 的&lt;br /&gt;
我们使用&lt;span class=&#34;label info&#34;&gt; httpx&lt;/span&gt; 请求一下&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;测试&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; httpx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;header&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#39;user-agent&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36 Edg/111.0.1661.54&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://spa16.scrape.center&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;httpx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;header&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;可以发现，程序报错了！&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/httpx/1.png&#34; alt=&#34;1.png&#34; /&gt;&lt;br /&gt;
 这是怎么回事？不是说好了支持&lt;span class=&#34;label warning&#34;&gt; HTTP2.0&lt;/span&gt; 吗？什么情况？&lt;br /&gt;
别急，那是因为&lt;span class=&#34;label info&#34;&gt; httpx&lt;/span&gt; 默认是开启的&lt;span class=&#34;label warning&#34;&gt; http1.1&lt;/span&gt; 的，需要我们声明一下才行，如下&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; httpx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;header&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#39;user-agent&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36 Edg/111.0.1661.54&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://spa16.scrape.center&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;client&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;httpx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Client&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;http2&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;header&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;http_version&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;此处我们声明一个&lt;span class=&#34;label info&#34;&gt; Client&lt;/span&gt; 对象，并将&lt;span class=&#34;label danger&#34;&gt; http2 设置为 true&lt;/span&gt;，那么便开启了&lt;span class=&#34;label warning&#34;&gt; HTTP2.0&lt;/span&gt; 的支持&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/httpx/2.png&#34; alt=&#34;2.png&#34; /&gt;&lt;br /&gt;
 可以看到，打印出来的 HTTP 版本也确实是&lt;span class=&#34;label warning&#34;&gt; HTTP2.0&lt;/span&gt; 的，访问成功了！&lt;/p&gt;
&lt;h3 id=&#34;扩展&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#扩展&#34;&gt;#&lt;/a&gt; 扩展&lt;/h3&gt;
&lt;p&gt;httpx 库还支持异步请求，异步操作请查看这一篇博客&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hc3hlei5naXRodWIuaW8vMjAyMy8wMy8wOC8lRTUlQkMlODIlRTYlQUQlQTUlRTclODglQUMlRTglOTklQUIlRTYlOUMlQkElRTUlODglQjYlRTQlQjglOEUlRTUlQUUlOUUlRTQlQkUlOEIv&#34;&gt;链接&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2023/03/12/%E6%96%B0%E7%89%88%E6%9C%89%E9%81%93%E7%BF%BB%E8%AF%91%E4%B9%8Bjs%E9%80%86%E5%90%91/</guid>
            <title>新版有道翻译之js逆向</title>
            <link>https://www.asxe.vip/blog/2023/03/12/%E6%96%B0%E7%89%88%E6%9C%89%E9%81%93%E7%BF%BB%E8%AF%91%E4%B9%8Bjs%E9%80%86%E5%90%91/</link>
            <category term="Python" scheme="https://www.asxe.vip/blog/categories/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/blog/categories/python/spider/" />
            <category term="python" scheme="https://www.asxe.vip/blog/tags/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/blog/tags/%E7%88%AC%E8%99%AB/" />
            <category term="js逆向" scheme="https://www.asxe.vip/blog/tags/js%E9%80%86%E5%90%91/" />
            <pubDate>Sun, 12 Mar 2023 10:18:38 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;https://moe-counter.glitch.me/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://counter.likepoems.com/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#准备&#34;&gt;#&lt;/a&gt; 准备&lt;/h2&gt;
&lt;p&gt;本文仅讲解某道的 js 逆向部分，json 逆向不进行讲解&lt;/p&gt;
&lt;p&gt;网址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mYW55aS55b3VkYW8uY29tLw==&#34;&gt;网址&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;开始&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开始&#34;&gt;#&lt;/a&gt; 开始&lt;/h2&gt;
&lt;h3 id=&#34;查找api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查找api&#34;&gt;#&lt;/a&gt; 查找 api&lt;/h3&gt;
&lt;p&gt;进入首页，F12 打开检查页面，选择网络记录并选择&lt;span class=&#34;label info&#34;&gt; XHR&lt;/span&gt; 类&lt;br /&gt;
在翻译框中任意输入，即可看到抓取到两个 api, 如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/youdao_js_reverse/1.png&#34; alt=&#34;1.png&#34; /&gt;&lt;br /&gt;
 我们点开&lt;span class=&#34;label info&#34;&gt; key&lt;/span&gt;api 并查看其响应，如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/youdao_js_reverse/2.png&#34; alt=&#34;2.png&#34; /&gt;&lt;br /&gt;
 可以看到其并非翻译接口，接下来点开另一个 api 并查看其响应，如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/youdao_js_reverse/3.png&#34; alt=&#34;3.png&#34; /&gt;&lt;br /&gt;
 这个则是一堆密文，即是返回的翻译结果等进行了 json 加密&lt;/p&gt;
&lt;h3 id=&#34;查找加密函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查找加密函数&#34;&gt;#&lt;/a&gt; 查找加密函数&lt;/h3&gt;
&lt;p&gt;我们查看其&lt;span class=&#34;label info&#34;&gt;表单数据&lt;/span&gt;（即负载），如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/youdao_js_reverse/4.png&#34; alt=&#34;4.png&#34; /&gt;&lt;br /&gt;
 其中参数&lt;span class=&#34;label info&#34;&gt; i&lt;/span&gt;, 很明显就是输入的文字，此时我们再输入任意文字在翻译框中，经对比，可以发现仅有&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt; 和&lt;span class=&#34;label info&#34;&gt; mysticTime&lt;/span&gt; 是变化的，&lt;br /&gt;
此时便在源代码中搜索&lt;span class=&#34;label info&#34;&gt; sign:&lt;/span&gt;,（加个冒号方便查找），最后找到一处&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/youdao_js_reverse/5.png&#34; alt=&#34;5.png&#34; /&gt;&lt;br /&gt;
 此处定义了一个&lt;span class=&#34;label info&#34;&gt; t 变量&lt;/span&gt;，用于获取时间戳，而&lt;span class=&#34;label info&#34;&gt; mysticTime&lt;/span&gt; 的返回值正是&lt;span class=&#34;label info&#34;&gt; t 变量&lt;/span&gt;，则判定&lt;span class=&#34;label info&#34;&gt; mysticTime&lt;/span&gt; 为时间戳，&lt;br /&gt;
&lt;span class=&#34;label info&#34;&gt;sign&lt;/span&gt; 则是调用了一个&lt;span class=&#34;label warning&#34;&gt;方法 v&lt;/span&gt;，其中传入参数&lt;span class=&#34;label info&#34;&gt; t&lt;/span&gt; 和&lt;span class=&#34;label info&#34;&gt; e&lt;/span&gt;,&lt;span class=&#34;label info&#34;&gt;t&lt;/span&gt; 我们知道了是时间戳，那么&lt;span class=&#34;label info&#34;&gt; e&lt;/span&gt; 呢？&lt;br /&gt;
那么我们便在&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt; 处打上断点，再翻译一遍，可以发现程序此时停在了&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt; 处，我们将鼠标放在&lt;span class=&#34;label info&#34;&gt; e&lt;/span&gt; 上，可以看到&lt;span class=&#34;label info&#34;&gt; e&lt;/span&gt; 的值是一个字符串&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/youdao_js_reverse/6.png&#34; alt=&#34;6.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;知道了&lt;span class=&#34;label info&#34;&gt; t&lt;/span&gt; 和&lt;span class=&#34;label info&#34;&gt; e&lt;/span&gt;, 那么我们就要看&lt;span class=&#34;label warning&#34;&gt;方法 v&lt;/span&gt; 是一个什么，将鼠标放在&lt;span class=&#34;label info&#34;&gt; v&lt;/span&gt; 上，即可看到方法位于哪里，如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/youdao_js_reverse/7.png&#34; alt=&#34;7.png&#34; /&gt;&lt;br /&gt;
 定位到&lt;span class=&#34;label warning&#34;&gt; v 方法&lt;/span&gt;，如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/youdao_js_reverse/8.png&#34; alt=&#34;8.png&#34; /&gt;&lt;br /&gt;
&lt;span class=&#34;label warning&#34;&gt;v 方法&lt;/span&gt;返回的是一个&lt;span class=&#34;label warning&#34;&gt; g 方法&lt;/span&gt;处理过后的值，用同样的方法定位到&lt;span class=&#34;label warning&#34;&gt;方法 g&lt;/span&gt;，如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/youdao_js_reverse/9.png&#34; alt=&#34;9.png&#34; /&gt;&lt;br /&gt;
 可以清晰的看到是一个&lt;span class=&#34;label danger&#34;&gt; MD5 加密&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;思路梳理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#思路梳理&#34;&gt;#&lt;/a&gt; 思路梳理&lt;/h3&gt;
&lt;p&gt;我们知道了表单中的&lt;span class=&#34;label info&#34;&gt;参数 i&lt;/span&gt; 就是要翻译的文字，&lt;span class=&#34;label info&#34;&gt;mysticTime&lt;/span&gt; 则是时间戳，&lt;span class=&#34;label info&#34;&gt;sign&lt;/span&gt; 则是对拼接后的字符串进行&lt;span class=&#34;label info&#34;&gt; MD5 加密&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;python原理复现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#python原理复现&#34;&gt;#&lt;/a&gt; python 原理复现&lt;/h3&gt;
&lt;h4 id=&#34;md5加密&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#md5加密&#34;&gt;#&lt;/a&gt; MD5 加密&lt;/h4&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;md5加密&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;md5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        md &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; hashlib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;md5&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        md&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;encode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; md&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hexdigest&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;时间戳&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#时间戳&#34;&gt;#&lt;/a&gt; 时间戳&lt;/h4&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;时间戳&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;time_get&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;完整代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#完整代码&#34;&gt;#&lt;/a&gt; 完整代码&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;完整代码&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#此代码仅返回加密的 json，若需看到明文，还需要进行 json 逆向，本文不予解释&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; hashlib&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Spider&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#39;Cookie&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;OUTFOX_SEARCH_USER_ID=-864231348@10.108.162.133; OUTFOX_SEARCH_USER_ID_NCOO=972176560.743925; _ga=GA1.2.1317022467.1665466107; UM_distinctid=184aa25fe24a7b-0ff2966cce682a-7d5d5471-144000-184aa25fe2514e1; DICT_UGC=be3af0da19b5c5e6aa4e17bd8d90b28a|; JSESSIONID=abcIJ43UT_s_Q5TofIUwy&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#39;User-Agent&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.76&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#39;Referer&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://fanyi.youdao.com/&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://dict.youdao.com/webtranslate&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;md5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        md &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; hashlib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;md5&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        md&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;encode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; md&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hexdigest&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;spider&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        time_get&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        sign&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;md5&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#34;client=fanyideskweb&amp;amp;mysticTime=&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;time_get&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&amp;amp;product=webfanyi&amp;amp;key=fsdsogkndfokasodnaso&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;i&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;from&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;auto&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;to&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;auto&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;domain&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;dictResult&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;true&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;keyid&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webfanyi&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;sign&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; sign&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;client&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;fanyideskweb&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;product&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;webfanyi&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;appVersion&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1.0.0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;vendor&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;web&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;pointParam&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;client,mysticTime,product&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;mysticTime&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;time_get&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;keyfrom&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;fanyi.web&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        response&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;post&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;data&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;verify&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        get_text&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;请输入文字:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        Spider&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;spider&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;get_text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2023/03/08/%E5%BC%82%E6%AD%A5%E7%88%AC%E8%99%AB%E6%9C%BA%E5%88%B6%E4%B8%8E%E5%AE%9E%E4%BE%8B/</guid>
            <title>异步爬虫机制与实例</title>
            <link>https://www.asxe.vip/blog/2023/03/08/%E5%BC%82%E6%AD%A5%E7%88%AC%E8%99%AB%E6%9C%BA%E5%88%B6%E4%B8%8E%E5%AE%9E%E4%BE%8B/</link>
            <category term="Python" scheme="https://www.asxe.vip/blog/categories/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/blog/categories/python/spider/" />
            <category term="python" scheme="https://www.asxe.vip/blog/tags/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/blog/tags/%E7%88%AC%E8%99%AB/" />
            <pubDate>Wed, 08 Mar 2023 09:19:08 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;https://moe-counter.glitch.me/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://counter.likepoems.com/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境准备&#34;&gt;#&lt;/a&gt; 环境准备&lt;/h1&gt;
&lt;p&gt;python 版本 3.5 及以上，aiohttp 库&lt;/p&gt;
&lt;h1 id=&#34;开始&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开始&#34;&gt;#&lt;/a&gt; 开始&lt;/h1&gt;
&lt;h2 id=&#34;基础了解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础了解&#34;&gt;#&lt;/a&gt; 基础了解&lt;/h2&gt;
&lt;h3 id=&#34;阻塞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#阻塞&#34;&gt;#&lt;/a&gt; 阻塞&lt;/h3&gt;
&lt;p&gt;阻塞是程序自身无法继续执行下一步的情况，即程序未得到所需计算资源而被挂起的状态&lt;br /&gt;
常见为网络 I/O 阻塞，磁盘 I/O 阻塞，以及使用者的输入阻塞等等&lt;/p&gt;
&lt;h3 id=&#34;非阻塞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#非阻塞&#34;&gt;#&lt;/a&gt; 非阻塞&lt;/h3&gt;
&lt;p&gt;对比阻塞进行理解，即程序可以干别的事情，其是因阻塞的存在而存在的&lt;/p&gt;
&lt;h3 id=&#34;同步&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#同步&#34;&gt;#&lt;/a&gt; 同步&lt;/h3&gt;
&lt;p&gt;顾名思义，强制让不同的请求按顺序执行，即有序&lt;/p&gt;
&lt;h3 id=&#34;异步&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异步&#34;&gt;#&lt;/a&gt; 异步&lt;/h3&gt;
&lt;p&gt;相对同步理解，即无序&lt;/p&gt;
&lt;h3 id=&#34;多进程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多进程&#34;&gt;#&lt;/a&gt; 多进程&lt;/h3&gt;
&lt;p&gt;利用 CPU 的多核，在同一时间内执行多个不同的任务&lt;/p&gt;
&lt;h3 id=&#34;协程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#协程&#34;&gt;#&lt;/a&gt; 协程&lt;/h3&gt;
&lt;p&gt;协程本质上是单个进程，拥有自身的寄存器和栈，可以使用其实现异步操作&lt;/p&gt;
&lt;h4 id=&#34;协程中的几个概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#协程中的几个概念&#34;&gt;#&lt;/a&gt; 协程中的几个概念&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;label&#34;&gt;event_loop&lt;/span&gt;：事件循环，可以将某些函数放到这上面，当运行条件满足时，就调用这个函数或者方法&lt;br /&gt;
&lt;span class=&#34;label&#34;&gt; coroutine&lt;/span&gt;：即协程，在 python 中，指代协程对象类型，可以将协程对象放到&lt;span class=&#34;label info&#34;&gt;事件循环&lt;/span&gt;中。可以使用&lt;span class=&#34;label info&#34;&gt; async 关键字&lt;/span&gt;来定义一个方法，当调用这个方法时，并不会立即执行这个方法，而是返回一个&lt;span class=&#34;label info&#34;&gt;协程对象&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;label&#34;&gt; task&lt;/span&gt;：任务，是对协程对象的进一步封装，包含了协程对象的各个状态&lt;br /&gt;
&lt;span class=&#34;label&#34;&gt; future&lt;/span&gt;：即将执行或没有执行的任务结果，与&lt;span class=&#34;label info&#34;&gt; task&lt;/span&gt; 没有本质区别&lt;/p&gt;
&lt;h2 id=&#34;举例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#举例&#34;&gt;#&lt;/a&gt; 举例&lt;/h2&gt;
&lt;h3 id=&#34;定义一个协程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义一个协程&#34;&gt;#&lt;/a&gt; 定义一个协程&lt;/h3&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;定义协程&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; asyncio&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;number:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;coroutine&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;1:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;coroutine&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;now1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;event_loop&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;new_event_loop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;event_loop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run_until_complete&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;coroutine&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;now2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;注：以上代码第九行&lt;span class=&#34;label info&#34;&gt; event_loop=asyncio.new_event_loop ()&lt;/span&gt; 也可以换成&lt;span class=&#34;label info&#34;&gt; event_loop=asyncio.get_event_loop ()&lt;/span&gt;, 但是后者在新版 python 中会收到警告&lt;span class=&#34;label danger&#34;&gt; DeprecationWarning: There is no current event loop   event_loop=asyncio.get_event_loop ()&lt;/span&gt;&lt;br /&gt;
 输出结果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1:&amp;lt;coroutine object add at 0x0000025B7FECF840&amp;gt;
now1
number:2
now2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;首先我们直接调用了&lt;span class=&#34;label info&#34;&gt; add&lt;/span&gt; 方法并打印其调用，但是我们得到的并不是答案，而是一个协程对象，接着我们使用&lt;span class=&#34;label info&#34;&gt; new_event_loop&lt;/span&gt; 方法创建了一个事件循环&lt;span class=&#34;label&#34;&gt; event_loop&lt;/span&gt;，并调用&lt;span class=&#34;label&#34;&gt; event_loop&lt;/span&gt; 的&lt;span class=&#34;label info&#34;&gt; run_until_complete&lt;/span&gt; 方法，最终才看到&lt;span class=&#34;label info&#34;&gt; add&lt;/span&gt; 方法打印出的答案&lt;br /&gt;
此处也可以将 coroutine 封装成 task 对象（甚至可以不借助 event_loop 对象），此处不做解释，仅提供代码，请读者自行理解，如下&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;task&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; asyncio&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;number:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;coroutine&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;loop&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;new_event_loop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;task&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;loop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;create_task&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;coroutine&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;1:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;task&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;now1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;loop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run_until_complete&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;task&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;2:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;task&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;now2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#34;&#34;&#34;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;运行结果&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;1:&amp;lt;Task pending name=&#39;Task-1&#39; coro=&amp;lt;add() running at F:\WorkSpace\py-case\main.py:3&gt;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;now1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;number:2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;2:&amp;lt;Task finished name=&#39;Task-1&#39; coro=&amp;lt;add() done, defined at F:\WorkSpace\py-case\main.py:3&gt; result=None&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;now2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&#34;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;不借助loop对象的task&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; asyncio&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;number:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;coroutine&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;task&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ensure_future&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;coroutine&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;1:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;task&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;now1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;loop&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_event_loop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;loop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run_until_complete&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;task&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;2:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;task&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;now2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#34;&#34;&#34;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;运行结果&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;1:&amp;lt;Task pending name=&#39;Task-2&#39; coro=&amp;lt;add() running at F:\WorkSpace\py-case\main.py:18&gt;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;now1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;number:2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;2:&amp;lt;Task finished name=&#39;Task-2&#39; coro=&amp;lt;add() done, defined at F:\WorkSpace\py-case\main.py:18&gt; result=None&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;now2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&#34;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;多任务协程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多任务协程&#34;&gt;#&lt;/a&gt; 多任务协程&lt;/h3&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;多任务协程&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; asyncio&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;get_response&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://www.baidu.com&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; res&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;tasks&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ensure_future&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;get_response&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; _ &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;task:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;tasks&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;loop&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_event_loop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;loop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run_until_complete&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;wait&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;tasks&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; task &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; tasks&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;result:&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;task&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;此处我们创建 3 个请求并组成列表，然后通过&lt;span class=&#34;label info&#34;&gt; wait&lt;/span&gt; 方法将其放到事件循环中，即可发起 3 次请求&lt;/p&gt;
&lt;p&gt;但是此时仍然是没有异步处理的，因为 requests 库并不支持异步，需要换成 aiohttp，况且上文还说了，实现异步就得有挂起操作，实现如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;异步&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; aiohttp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; asyncio&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;start_time&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;get_url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    session&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;aiohttp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ClientSession&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; session&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; session&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; res&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    url&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://www.httpbin.org/delay/5&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;waiting&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;await&lt;/span&gt; get_url&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt; - &lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;tasks&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ensure_future&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;req&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; _ &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;event_loop&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get_event_loop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;event_loop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;run_until_complete&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;asyncio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;wait&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;tasks&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;end_time&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;time_consuming&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;end_time&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;start_time&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time_consuming&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;此代码即可实现异步操作，其中 await 关键字的作用就是将协程挂起，可看到，原本需要至少 30 秒的请求时间只用了 10 秒，大大提升了爬取速度，（耗时与网络状况有关）&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/Asynchronous_crawlers/1.jpg&#34; alt=&#34;1.jpg&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.asxe.vip/blog/2023/03/06/%E7%BA%A2%E4%BA%BA%E7%82%B9%E9%9B%86js%E9%80%86%E5%90%91%E7%88%AC%E8%99%AB/</guid>
            <title>红人点集js逆向爬虫</title>
            <link>https://www.asxe.vip/blog/2023/03/06/%E7%BA%A2%E4%BA%BA%E7%82%B9%E9%9B%86js%E9%80%86%E5%90%91%E7%88%AC%E8%99%AB/</link>
            <category term="Python" scheme="https://www.asxe.vip/blog/categories/python/" />
            <category term="爬虫" scheme="https://www.asxe.vip/blog/categories/python/spider/" />
            <category term="爬虫" scheme="https://www.asxe.vip/blog/tags/%E7%88%AC%E8%99%AB/" />
            <category term="js逆向" scheme="https://www.asxe.vip/blog/tags/js%E9%80%86%E5%90%91/" />
            <pubDate>Mon, 06 Mar 2023 23:45:50 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;https://moe-counter.glitch.me/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://counter.likepoems.com/get/@asxe?theme=gelbooru&#34; alt=&#34;asxe&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;前戏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前戏&#34;&gt;#&lt;/a&gt; 前戏&lt;/h2&gt;
&lt;p&gt;之前的博客由于太久没有维护，又懒得翻新了，所以索性重新搭建了一个，看着主页空荡荡的，所以随便写一篇 js 逆向爬虫，这次的 “受害者” 是红人点集。&lt;br /&gt;
废话不多说，教程开始。&lt;br /&gt;
网址:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuaHJkanl1bi5jb20vIy9yYW5rbGlzdC9yYW5rbGlzdA==&#34;&gt; 网址&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;正片&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#正片&#34;&gt;#&lt;/a&gt; 正片&lt;/h3&gt;
&lt;h4 id=&#34;逻辑分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#逻辑分析&#34;&gt;#&lt;/a&gt; 逻辑分析&lt;/h4&gt;
&lt;p&gt;打开控制台，刷新网页，在网络记录里选择&lt;span class=&#34;label info&#34;&gt; XHR 类&lt;/span&gt;（别问，问就是&lt;span class=&#34;label info&#34;&gt; Ajax&lt;/span&gt;），可以看到一个 api 如下 (图片有点糊，将就一下吧)&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/Redman_point_set_js_reverse/1.jpg&#34; alt=&#34;1.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;点开 api 的表单数据，可以看到&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/Redman_point_set_js_reverse/2.jpg&#34; alt=&#34;2.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;对这几个参数，&lt;span class=&#34;label info&#34;&gt;param 和 tenant&lt;/span&gt; 不用说肯定是定值，对于&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt;，&lt;span class=&#34;label info&#34;&gt;timestamp&lt;/span&gt;，&lt;span class=&#34;label info&#34;&gt;token&lt;/span&gt; 则有可能是加密变化参数，&lt;span class=&#34;label danger&#34;&gt;（不要忘了，对于 token，有可能是定值，例如登录账号后会生成一个此账号的固定 token）&lt;/span&gt;，对页面进行多次刷新，比对可以发现&lt;span class=&#34;label info&#34;&gt; token&lt;/span&gt; 确实是不变的，仅是&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt; 和&lt;span class=&#34;label info&#34;&gt; timestamp&lt;/span&gt; 变化。&lt;br /&gt;
则搜索源代码&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt;，即可找到&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt; 在代码中的位置，如下（搜索找位置此处省略）&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/Redman_point_set_js_reverse/3.jpg&#34; alt=&#34;3.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以看到四个参数都在，并且参数值为变量，则可以判断是此处无疑&lt;br /&gt;
在&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt; 处打上断点（&lt;span class=&#34;label info&#34;&gt;timestamp&lt;/span&gt; 打也是一样的），刷新网页，此时页面停在断点处（再次证明此处代码是要找的）&lt;br /&gt;
将鼠标停在加密&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt; 的&lt;span class=&#34;label info&#34;&gt; E 函数&lt;/span&gt;上，则可跳转到&lt;span class=&#34;label info&#34;&gt; E 函数&lt;/span&gt;（省略图片），如下&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/Redman_point_set_js_reverse/4.jpg&#34; alt=&#34;4.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现&lt;span class=&#34;label info&#34;&gt; E 函数&lt;/span&gt;是返回了一个值，这个值是通过&lt;span class=&#34;label info&#34;&gt; k 函数&lt;/span&gt;进行加密的，于是用同上方法跳转到&lt;span class=&#34;label info&#34;&gt; k 函数&lt;/span&gt;，如下&lt;br /&gt;
&lt;img data-src=&#34;&#34; alt=&#34;5.jpg&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;逻辑梳理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#逻辑梳理&#34;&gt;#&lt;/a&gt; 逻辑梳理&lt;/h4&gt;
&lt;p&gt;看到整个加密逻辑了过后，来进行一遍梳理，并运用 python 模拟加密逻辑&lt;br /&gt;
其中&lt;span class=&#34;label info&#34;&gt; timestamp&lt;/span&gt; 为时间戳，即&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;time_get&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;对于&lt;span class=&#34;label info&#34;&gt; sign&lt;/span&gt;, 我们先分析&lt;span class=&#34;label info&#34;&gt; k 函数&lt;/span&gt;，&lt;span class=&#34;label info&#34;&gt;k 函数&lt;/span&gt;是对传入的参数进行&lt;span class=&#34;label info&#34;&gt; sha256 加密&lt;/span&gt;，即&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;sha256加密&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sha256&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        sha&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;hashlib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sha256&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        sha&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;encode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; sha&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hexdigest&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;而&lt;span class=&#34;label info&#34;&gt; E 函数&lt;/span&gt;则是将&lt;span class=&#34;label info&#34;&gt; param&lt;/span&gt;,&lt;span class=&#34;label info&#34;&gt;timestamp&lt;/span&gt;,&lt;span class=&#34;label info&#34;&gt;tenant&lt;/span&gt;,&lt;span class=&#34;label info&#34;&gt;salt&lt;/span&gt; 进行拼接并返回其进行&lt;span class=&#34;label info&#34;&gt; sha256 加密&lt;/span&gt;的值（对于&lt;span class=&#34;label info&#34;&gt; salt&lt;/span&gt; 的值，即 C，可以将鼠标放在上面查看）&lt;br /&gt;
注：此处拼接结果为&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;拼接结果&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;time_get&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        params&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;no&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;dy0002&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;data&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;days&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;rankType&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        dd&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dumps&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;params&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;param=&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;dd&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&amp;amp;timestamp=&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;time_get&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&amp;amp;tenant=1&amp;amp;salt=kbn%&amp;amp;)@&amp;lt;?FGkfs8sdf4Vg1*+;`kf5ndl$&#39;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;其中 text 则为拼接结果&lt;/p&gt;
&lt;h4 id=&#34;结果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#结果&#34;&gt;#&lt;/a&gt; 结果&lt;/h4&gt;
&lt;p&gt;最后请求 api 的时候带上 headers 和表单数据，即可返回 json 类型的数据，对数据进行处理即可，效果图如下：&lt;br /&gt;
&lt;img data-src=&#34;https://gitee.com/asxe/image/raw/master/blog/Redman_point_set_js_reverse/5.jpg&#34; alt=&#34;5.jpg&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;完整代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#完整代码&#34;&gt;#&lt;/a&gt; 完整代码&lt;/h4&gt;
&lt;p&gt;代码中的&lt;span class=&#34;label danger&#34;&gt; token&lt;/span&gt; 值请各位自行登录获取&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; requests&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; hashlib&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; json&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Spider&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;api&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;https://ucp.hrdjyun.com:60359/api/dy&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;Accept&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;application/json, text/plain, */*&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;Accept-Encoding&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;gzip, deflate, br&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;Accept-Language&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;Connection&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;keep-alive&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;Content-Length&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;248&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;Content-Type&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;application/json;charset=UTF-8&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;Host&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;ucp.hrdjyun.com:60359&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;Origin&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://www.hh1024.com&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;sec-ch-ua&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;\&#34;Not_A Brand\&#34;;v=\&#34;99\&#34;, \&#34;Microsoft Edge\&#34;;v=\&#34;109\&#34;, \&#34;Chromium\&#34;;v=\&#34;109\&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;sec-ch-ua-mobile&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;?0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;sec-ch-ua-platform&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;\&#34;Windows\&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;Sec-Fetch-Dest&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;empty&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;Sec-Fetch-Mode&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cors&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;Sec-Fetch-Site&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cross-site&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;User-Agent&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36 Edg/109.0.1518.52&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sha256&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        sha&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;hashlib&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sha256&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        sha&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;encode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; sha&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hexdigest&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;spider&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        time_get&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        params&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;no&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;dy0002&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;data&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;days&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;rankType&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        dd&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dumps&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;params&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string-interpolation&#34;&gt;&lt;span class=&#34;token string&#34;&gt;f&#39;param=&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;dd&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&amp;amp;timestamp=&lt;/span&gt;&lt;span class=&#34;token interpolation&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;time_get&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&amp;amp;tenant=1&amp;amp;salt=kbn%&amp;amp;)@&amp;lt;?FGkfs8sdf4Vg1*+;`kf5ndl$&#39;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        sign &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sha256&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        data&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;param&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;dd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;sign&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;sign&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;tenant&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;timestamp&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;time_get&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;token&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;你的token&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        session&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;requests&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;session&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        session&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;headers&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        response&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;session&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;post&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;api&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;data&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dumps&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;status&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;json&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;data&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;rankList&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; d &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                items &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                items&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;抖音名&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; d&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;anchorName&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                items&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;销量&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; d&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;displaySales&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                items&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;销售额&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;displayMoney&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                items&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;粉丝&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;%.2f&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;fans&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;万&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                items&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;热度&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;get&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;gmv_score&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;items&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    Spider&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;spider&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
    </channel>
</rss>
